Reading symbols from ./build/main/main...
+target remote | /usr/libexec/valgrind/../../bind/vgdb --pid=7291
Remote debugging using | /usr/libexec/valgrind/../../bind/vgdb --pid=7291
Remote communication error.  Target disconnected: error while reading: Connection reset by peer.
+target remote | vgdb
Remote debugging using | vgdb
relaying data between gdb and process 7291
warning: remote target does not support file transfer, attempting to access files from local filesystem.
Reading symbols from /lib64/ld-linux-x86-64.so.2...
0x000000000401cc40 in _start () from /lib64/ld-linux-x86-64.so.2
+break run
Breakpoint 1 at 0x10d575: file /home/david/Programming/cpp_dev/MrText/src/MrText.cpp, line 286.
+run
The "remote" target does not support "run".  Try "help target" or "continue".
+continue
Continuing.

Breakpoint 1, MrText::run (this=0x1ffefff2f8) at /home/david/Programming/cpp_dev/MrText/src/MrText.cpp:286
+n
+n
+info locals
arr_buf = 0x0
+n
+n
+n
+n
+n
+n
+info locals
arr_buf = 0x1ffefff338
+n
+info locals
arr_buf = 0x1ffefff338
+n
+print *arr_buf
$1 = {
  _M_elems = "\000\000\000"
}
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+exit
Reading symbols from ./build/tests/testlib...
+break insert_char
Breakpoint 1 at 0xfbe11: file /home/david/Programming/cpp_dev/MrText/src/Rope.cpp, line 29.
+continue
The program is not being run.
+run
Starting program: /home/david/Programming/cpp_dev/MrText/build/tests/testlib 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/usr/lib64/libthread_db.so.1".

Breakpoint 1, Rope<char, 3>::insert_char (this=0x7fffffffc9f8, val=49 '1') at /home/david/Programming/cpp_dev/MrText/src/Rope.cpp:29
+info locals
No locals.
+print *this
$1 = {
  root = std::shared_ptr<Node<char, 3>> (use count 1, weak count 0) = {
    get() = 0x5555556ce760
  }
}
+n
+print *this
$2 = {
  root = std::shared_ptr<Node<char, 3>> (use count 1, weak count 0) = {
    get() = 0x5555556ce760
  }
}
+n
+n
____C_A_T_C_H____T_E_S_T____6 () at /home/david/Programming/cpp_dev/MrText/tests/testlib.cpp:80
+info locals
test_buffer = {
  temp_buffer = Python Exception <class 'IndexError'>: list index out of range
<incomplete type>,
  backup_buffer = 0x7ffff7f9cd60
}
rope = {
  root = std::shared_ptr<Node<char, 3>> (use count 1, weak count 0) = {
    get() = 0x5555556ce760
  }
}
+print *temp_buffer
No symbol "temp_buffer" in current context.
+print temp_buffer
No symbol "temp_buffer" in current context.
+exit
Reading symbols from ./build/tests/testlib...
+target remote | vgdb
Remote debugging using | vgdb
Remote communication error.  Target disconnected: error while reading: Connection reset by peer.
+target remote | /usr/libexec/valgrind/../../bin/vgdb
Remote debugging using | /usr/libexec/valgrind/../../bin/vgdb
Remote communication error.  Target disconnected: error while reading: Connection reset by peer.
+target remote | usr/libexec/valgrind/../../bin/bgdb --pid=17812
Remote debugging using | usr/libexec/valgrind/../../bin/bgdb --pid=17812
Remote communication error.  Target disconnected: error while reading: Connection reset by peer.
+quit
Reading symbols from ./build/tests/testlib...
+target | remote vgdb
Undefined target command: "| remote vgdb".  Try "help target".
+target remote | vgdb
Remote debugging using | vgdb
relaying data between gdb and process 3635
warning: remote target does not support file transfer, attempting to access files from local filesystem.
Reading symbols from /lib64/ld-linux-x86-64.so.2...
0x000000000401cc40 in _start () from /lib64/ld-linux-x86-64.so.2
+break NewRope
Breakpoint 1 at 0x1b25fc: file /home/david/Programming/cpp_dev/MrText/src/../include/MrText/NewRope.hpp, line 17.
+continue
Continuing.

Breakpoint 1, NewRope::NewRope (this=0x1ffeffeb60) at /home/david/Programming/cpp_dev/MrText/src/../include/MrText/NewRope.hpp:17
+print *this
$1 = {
  root = std::shared_ptr<NewRope> (empty) = {
    get() = 0x0
  },
  node = std::shared_ptr<NewRope> (empty) = {
    get() = 0x0
  },
  weight = 0,
  line = ""
}
+n
+n

Breakpoint 1, NewRope::NewRope (this=0x4e9a730) at /home/david/Programming/cpp_dev/MrText/src/../include/MrText/NewRope.hpp:17
+n
+n

Breakpoint 1, NewRope::NewRope (this=0x4e9a7c0) at /home/david/Programming/cpp_dev/MrText/src/../include/MrText/NewRope.hpp:17
+n
+n

Breakpoint 1, NewRope::NewRope (this=0x4e9a850) at /home/david/Programming/cpp_dev/MrText/src/../include/MrText/NewRope.hpp:17
+n
+n

Breakpoint 1, NewRope::NewRope (this=0x4e9a8e0) at /home/david/Programming/cpp_dev/MrText/src/../include/MrText/NewRope.hpp:17
+info locals
No locals.
+print *this
$2 = {
  root = std::shared_ptr<NewRope> (empty) = {
    get() = 0x0
  },
  node = std::shared_ptr<NewRope> (empty) = {
    get() = 0x0
  },
  weight = 0,
  line = ""
}
+exit
Reading symbols from ./build/tests/testlib...
+target remote | vgdb
Remote debugging using | vgdb
Remote communication error.  Target disconnected: error while reading: Connection reset by peer.
+target remote | /usr/libexec/valgrind/../../bin/vgdb --pid 4725
Remote debugging using | /usr/libexec/valgrind/../../bin/vgdb --pid 4725
Remote communication error.  Target disconnected: error while reading: Connection reset by peer.
warning: Error detected on fd 0
error detected on stdin
Reading symbols from ./build/tests/testlib...
+break NewRope
Breakpoint 1 at 0xaa5fc: file /home/david/Programming/cpp_dev/MrText/src/../include/MrText/NewRope.hpp, line 17.
+run
Starting program: /home/david/Programming/cpp_dev/MrText/build/tests/testlib 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/usr/lib64/libthread_db.so.1".

Breakpoint 1, NewRope::NewRope (this=0x7fffffffcbd0) at /home/david/Programming/cpp_dev/MrText/src/../include/MrText/NewRope.hpp:17
warning: Source file is more recent than executable.
+exit
Reading symbols from ./build/tests/testlib...
+break NewRope
Breakpoint 1 at 0xaa2f5: file /home/david/Programming/cpp_dev/MrText/src/../include/MrText/NewRope.hpp, line 28.
+run
Starting program: /home/david/Programming/cpp_dev/MrText/build/tests/testlib 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/usr/lib64/libthread_db.so.1".

Breakpoint 1, NewRope::NewRope (this=0x7fffffffcbe8) at /home/david/Programming/cpp_dev/MrText/src/../include/MrText/NewRope.hpp:28
+n
+n
+n
+print *this
$1 = {
  root = std::shared_ptr<RopeNode> (use count 1, weak count 0) = {
    get() = 0x5555556d1e60
  }
}
+n
____C_A_T_C_H____T_E_S_T____8 () at /home/david/Programming/cpp_dev/MrText/tests/testlib.cpp:90
+s
std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> > (this=0x7fffffffcbf8, __s=0x5555556575e7 "test", __a=...) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/basic_string.h:650
+info locals
__end = 0x7fff00000000 <error: Cannot access memory at address 0x7fff00000000>
+print *this
$2 = ""
+print backtrace full
A syntax error in expression, near `full'.
+backtrace full
#0  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> > (this=0x7fffffffcbf8, __s=0x5555556575e7 "test", __a=...) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/basic_string.h:650
        __end = 0x7fff00000000 <error: Cannot access memory at address 0x7fff00000000>
#1  0x000055555559ce95 in ____C_A_T_C_H____T_E_S_T____8 () at /home/david/Programming/cpp_dev/MrText/tests/testlib.cpp:90
        rope = {
          root = std::shared_ptr<RopeNode> (use count 1, weak count 0) = {
            get() = 0x5555556d1e60
          }
        }
#2  0x00005555555858d7 in Catch::TestInvokerAsFunction::invoke (this=0x5555556cff10) at /home/david/Programming/cpp_dev/MrText/build/_deps/catch-src/single_include/catch2/catch.hpp:14317
No locals.
#3  0x000055555557f498 in Catch::TestCase::invoke (this=0x5555556ef150) at /home/david/Programming/cpp_dev/MrText/build/_deps/catch-src/single_include/catch2/catch.hpp:14156
No locals.
#4  0x000055555557f3a2 in Catch::RunContext::invokeActiveTestCase (this=0x7fffffffd3f0) at /home/david/Programming/cpp_dev/MrText/build/_deps/catch-src/single_include/catch2/catch.hpp:13016
        _ = {
          m_handler = 0x7fffffffd5d8
        }
#5  0x000055555557de75 in Catch::RunContext::runCurrentTest (this=0x7fffffffd3f0, redirectedCout="", redirectedCerr="") at /home/david/Programming/cpp_dev/MrText/build/_deps/catch-src/single_include/catch2/catch.hpp:12989
        testCaseInfo = @0x5555556ef150: {
          name = "Binary Tree Rope Practice.",
          className = "",
          description = "",
          tags = std::vector of length 1, capacity 1 = {"main"},
          lcaseTags = std::vector of length 1, capacity 1 = {"main"},
          lineInfo = {
            file = 0x555555656083 "/home/david/Programming/cpp_dev/MrText/tests/testlib.cpp",
            line = 87
          },
          properties = Catch::TestCaseInfo::None
        }
        testCaseSection = {
          name = "Binary Tree Rope Practice.",
          description = "",
          lineInfo = {
            file = 0x555555656083 "/home/david/Programming/cpp_dev/MrText/tests/testlib.cpp",
            line = 87
          }
        }
        prevAssertions = {
          passed = 26,
          failed = 0,
          failedButOk = 0
        }
        duration = 0
        timer = {
          m_nanoseconds = 1732476744588607960
        }
        assertions = {
          passed = 0,
          failed = 0,
          failedButOk = 140737488342544
        }
        missingAssertions = false
        testCaseSectionStats = {
          _vptr$SectionStats = 0x7fffffffd9a8,
          sectionInfo = {
            name = "\340\316\377\377\377\177\000\000\024\355[UUU\000\000X\321\377\377\377\177\000\000X\321\377\377\377\177\000\000\032\000\000\000\000\000\000\000X\321\377\377\377\177\000\000\033\000\000\000\000\000\000\000\200\vmUUU\000\000X\321\377\377\377\177\000\000\033\000\000\000\000\000\000\000\200\vmUUU\000\000X\321\377\377\377\177\000\000\000\317\377\377\377\177\000\000\200\vmUUU\000\000\032\000\000\000\000\000\000\000\032\000\000\000\000\000\000\000 \317\377\377\377\177\000\000\030\317\377\377\377\177", '\000' <repeats 11 times>, "\321\377\377\377\177\000\000@\317\377\377\377\177\000\000\203`eUUU\000\000W\000\000\000\000\000\000\000\000m\275\357(\316k\352\320\321\377\377\377\177\000\000"...,
            description = "",
            lineInfo = {
              file = 0x7fffffffd158 "\200\vmUUU",
              line = 140737488343384
            }
          },
          assertions = {
            passed = 26,
            failed = 140737488343384,
            failedButOk = 27
          },
          durationInSeconds = 4.6355706153326264e-310,
          missingAssertions = 88
        }
#6  0x000055555557d1dd in Catch::RunContext::runTest (this=0x7fffffffd3f0, testCase=...) at /home/david/Programming/cpp_dev/MrText/build/_deps/catch-src/single_include/catch2/catch.hpp:12750
        prevTotals = {
          error = 0,
          assertions = {
            passed = 26,
            failed = 0,
            failedButOk = 0
          },
          testCases = {
            passed = 4,
            failed = 0,
            failedButOk = 0
          }
        }
        redirectedCout = ""
        redirectedCerr = ""
        testInfo = @0x5555556ef150: {
          name = "Binary Tree Rope Practice.",
          className = "",
          description = "",
          tags = std::vector of length 1, capacity 1 = {"main"},
          lcaseTags = std::vector of length 1, capacity 1 = {"main"},
          lineInfo = {
            file = 0x555555656083 "/home/david/Programming/cpp_dev/MrText/tests/testlib.cpp",
            line = 87
          },
          properties = Catch::TestCaseInfo::None
        }
        rootTracker = @0x5555556cf770: {
          _vptr$ITracker = 0x5555556b7bd0 <vtable for Catch::TestCaseTracking::SectionTracker+16>,
          m_nameAndLocation = {
            name = "{root}",
            location = {
              file = 0x555555654fb9 "/home/david/Programming/cpp_dev/MrText/build/_deps/catch-src/single_include/catch2/catch.hpp",
              line = 14359
            }
          }
        }
        deltaTotals = {
          error = 0,
          assertions = {
            passed = 1,
            failed = 0,
            failedButOk = 0
          },
          testCases = {
            passed = 1,
            failed = 0,
            failedButOk = 0
          }
        }
#7  0x0000555555581fbf in Catch::(anonymous namespace)::TestGroup::execute (this=0x7fffffffd3e0) at /home/david/Programming/cpp_dev/MrText/build/_deps/catch-src/single_include/catch2/catch.hpp:13343
        testCase = @0x5555556df460: 0x5555556ef150
        __range2 = std::set with 5 elements = {
          [0] = 0x5555556eee70,
          [1] = 0x5555556eef28,
          [2] = 0x5555556eefe0,
          [3] = 0x5555556ef098,
          [4] = 0x5555556ef150
        }
        __begin2 = 0x5555556ef150
        __end2 = 0x5
        invalidArgs = std::vector of length 0, capacity 0
        totals = {
          error = 0,
          assertions = {
            passed = 26,
            failed = 0,
            failedButOk = 0
          },
          testCases = {
            passed = 4,
            failed = 0,
            failedButOk = 0
          }
        }
#8  0x000055555558150f in Catch::Session::runInternal (this=0x7fffffffd6f8) at /home/david/Programming/cpp_dev/MrText/build/_deps/catch-src/single_include/catch2/catch.hpp:13549
        tests = {
          m_config = std::shared_ptr<Catch::Config> (use count 5, weak count 0) = {
            get() = 0x5555556d1130
          },
          m_context = {
            <Catch::IResultCapture> = {
              _vptr$IResultCapture = 0x5555556b7910 <vtable for Catch::RunContext+16>
            }, 
            <Catch::IRunner> = {
              _vptr$IRunner = 0x5555556b79d0 <vtable for Catch::RunContext+208>
            }, 
            members of Catch::RunContext:
            m_runInfo = {
              name = "testlib"
            },
            m_context = @0x5555556eec00,
            m_activeTestCase = 0x5555556ef150,
            m_testCaseTracker = 0x5555556d0ce0,
            m_lastResult = {
              nullableValue = 0x0,
              storage = "H\326\377\377\377\177\000\000 \326\377\377\377\177\000\000p\324\377\377\377\177\000\000\235\b\\UUU\000\000H\326\377\377\377\177\000\000\b\326\377\377\377\177\000\000\220\324\377\377\377\177\000\000\262\n\\UUU\000\000\b\326\377\377\377\177\000\000\b\326\377\377\377\177\000\000\260\324\377\377\377\177\000\000\230I[UUU\000\000\b\326\377\377\377\177\000\000\b\326\377\377\377\177\000\000p\326\377\377\377\177\000\000\351\021XUUU\000\000`\000mUUU\000\000\300\363lUUU\000"
            },
            m_config = std::shared_ptr<const Catch::IConfig> (use count 5, weak count 0) = {
              get() = 0x5555556d1130
            },
            m_totals = {
              error = 0,
              assertions = {
                passed = 26,
                failed = 0,
                failedButOk = 0
              },
              testCases = {
                passed = 4,
                failed = 0,
                failedButOk = 0
              }
            },
            m_reporter = std::unique_ptr<Catch::IStreamingReporter> = {
              get() = 0x5555556cf900
            },
            m_messages = std::vector of length 0, capacity 0,
            m_messageScopes = std::vector of length 0, capacity 0,
            m_lastAssertionInfo = {
              macroName = {
                static s_empty = <optimized out>,
                m_start = 0x5555556555f2 "TEST_CASE",
                m_size = 9
              },
              lineInfo = {
                file = 0x555555656083 "/home/david/Programming/cpp_dev/MrText/tests/testlib.cpp",
                line = 87
              },
              capturedExpression = {
                static s_empty = <optimized out>,
                m_start = 0x555555657608 "",
                m_size = 0
              },
              resultDisposition = Catch::ResultDisposition::Normal
            },
            m_unfinishedSections = std::vector of length 0, capacity 0,
            m_activeSections = std::vector of length 0, capacity 0,
            m_trackerContext = {
              m_rootTracker = std::shared_ptr<Catch::TestCaseTracking::ITracker> (use count 1, weak count 0) = {
                get() = 0x5555556cf770
              },
              m_currentTracker = 0x5555556d0ce0,
              m_runState = Catch::TestCaseTracking::TrackerContext::Executing
            },
            m_fatalConditionhandler = {
              m_started = true
            },
            m_lastAssertionPassed = true,
            m_shouldReportUnexpected = true,
            m_includeSuccessfulResults = false
          },
          m_tests = std::set with 5 elements = {
            [0] = 0x5555556eee70,
            [1] = 0x5555556eef28,
            [2] = 0x5555556eefe0,
            [3] = 0x5555556ef098,
            [4] = 0x5555556ef150
          },
          m_matches = std::vector of length 0, capacity 0
        }
        totals = {
          error = 0,
          assertions = {
            passed = 26,
            failed = 0,
            failedButOk = 0
          },
          testCases = {
            passed = 4,
            failed = 0,
            failedButOk = 0
          }
        }
        ex = @0x0: <incomplete type>
#9  0x00005555555812f7 in Catch::Session::run (this=0x7fffffffd6f8) at /home/david/Programming/cpp_dev/MrText/build/_deps/catch-src/single_include/catch2/catch.hpp:13505
        exitCode = 0
#10 0x00005555555bd343 in Catch::Session::run<char> (this=0x7fffffffd6f8, argc=1, argv=0x7fffffffd9a8) at /home/david/Programming/cpp_dev/MrText/build/_deps/catch-src/single_include/catch2/catch.hpp:13227
        returnCode = 0
#11 0x0000555555599a0f in main (argc=1, argv=0x7fffffffd9a8) at /home/david/Programming/cpp_dev/MrText/build/_deps/catch-src/single_include/catch2/catch.hpp:17504
No locals.
+backtrace full
#0  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> > (this=0x7fffffffcbf8, __s=0x5555556575e7 "test", __a=...) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/basic_string.h:650
        __end = 0x7fff00000000 <error: Cannot access memory at address 0x7fff00000000>
#1  0x000055555559ce95 in ____C_A_T_C_H____T_E_S_T____8 () at /home/david/Programming/cpp_dev/MrText/tests/testlib.cpp:90
        rope = {
          root = std::shared_ptr<RopeNode> (use count 1, weak count 0) = {
            get() = 0x5555556d1e60
          }
        }
#2  0x00005555555858d7 in Catch::TestInvokerAsFunction::invoke (this=0x5555556cff10) at /home/david/Programming/cpp_dev/MrText/build/_deps/catch-src/single_include/catch2/catch.hpp:14317
No locals.
#3  0x000055555557f498 in Catch::TestCase::invoke (this=0x5555556ef150) at /home/david/Programming/cpp_dev/MrText/build/_deps/catch-src/single_include/catch2/catch.hpp:14156
No locals.
#4  0x000055555557f3a2 in Catch::RunContext::invokeActiveTestCase (this=0x7fffffffd3f0) at /home/david/Programming/cpp_dev/MrText/build/_deps/catch-src/single_include/catch2/catch.hpp:13016
        _ = {
          m_handler = 0x7fffffffd5d8
        }
#5  0x000055555557de75 in Catch::RunContext::runCurrentTest (this=0x7fffffffd3f0, redirectedCout="", redirectedCerr="") at /home/david/Programming/cpp_dev/MrText/build/_deps/catch-src/single_include/catch2/catch.hpp:12989
        testCaseInfo = @0x5555556ef150: {
          name = "Binary Tree Rope Practice.",
          className = "",
          description = "",
          tags = std::vector of length 1, capacity 1 = {"main"},
          lcaseTags = std::vector of length 1, capacity 1 = {"main"},
          lineInfo = {
            file = 0x555555656083 "/home/david/Programming/cpp_dev/MrText/tests/testlib.cpp",
            line = 87
          },
          properties = Catch::TestCaseInfo::None
        }
        testCaseSection = {
          name = "Binary Tree Rope Practice.",
          description = "",
          lineInfo = {
            file = 0x555555656083 "/home/david/Programming/cpp_dev/MrText/tests/testlib.cpp",
            line = 87
          }
        }
        prevAssertions = {
          passed = 26,
          failed = 0,
          failedButOk = 0
        }
        duration = 0
        timer = {
          m_nanoseconds = 1732476744588607960
        }
        assertions = {
          passed = 0,
          failed = 0,
          failedButOk = 140737488342544
        }
        missingAssertions = false
        testCaseSectionStats = {
          _vptr$SectionStats = 0x7fffffffd9a8,
          sectionInfo = {
            name = "\340\316\377\377\377\177\000\000\024\355[UUU\000\000X\321\377\377\377\177\000\000X\321\377\377\377\177\000\000\032\000\000\000\000\000\000\000X\321\377\377\377\177\000\000\033\000\000\000\000\000\000\000\200\vmUUU\000\000X\321\377\377\377\177\000\000\033\000\000\000\000\000\000\000\200\vmUUU\000\000X\321\377\377\377\177\000\000\000\317\377\377\377\177\000\000\200\vmUUU\000\000\032\000\000\000\000\000\000\000\032\000\000\000\000\000\000\000 \317\377\377\377\177\000\000\030\317\377\377\377\177", '\000' <repeats 11 times>, "\321\377\377\377\177\000\000@\317\377\377\377\177\000\000\203`eUUU\000\000W\000\000\000\000\000\000\000\000m\275\357(\316k\352\320\321\377\377\377\177\000\000"...,
            description = "",
            lineInfo = {
              file = 0x7fffffffd158 "\200\vmUUU",
              line = 140737488343384
            }
          },
          assertions = {
            passed = 26,
            failed = 140737488343384,
            failedButOk = 27
          },
          durationInSeconds = 4.6355706153326264e-310,
          missingAssertions = 88
        }
#6  0x000055555557d1dd in Catch::RunContext::runTest (this=0x7fffffffd3f0, testCase=...) at /home/david/Programming/cpp_dev/MrText/build/_deps/catch-src/single_include/catch2/catch.hpp:12750
        prevTotals = {
          error = 0,
          assertions = {
            passed = 26,
            failed = 0,
            failedButOk = 0
          },
          testCases = {
            passed = 4,
            failed = 0,
            failedButOk = 0
          }
        }
        redirectedCout = ""
        redirectedCerr = ""
        testInfo = @0x5555556ef150: {
          name = "Binary Tree Rope Practice.",
          className = "",
          description = "",
          tags = std::vector of length 1, capacity 1 = {"main"},
          lcaseTags = std::vector of length 1, capacity 1 = {"main"},
          lineInfo = {
            file = 0x555555656083 "/home/david/Programming/cpp_dev/MrText/tests/testlib.cpp",
            line = 87
          },
          properties = Catch::TestCaseInfo::None
        }
        rootTracker = @0x5555556cf770: {
          _vptr$ITracker = 0x5555556b7bd0 <vtable for Catch::TestCaseTracking::SectionTracker+16>,
          m_nameAndLocation = {
            name = "{root}",
            location = {
              file = 0x555555654fb9 "/home/david/Programming/cpp_dev/MrText/build/_deps/catch-src/single_include/catch2/catch.hpp",
              line = 14359
            }
          }
        }
        deltaTotals = {
          error = 0,
          assertions = {
            passed = 1,
            failed = 0,
            failedButOk = 0
          },
          testCases = {
            passed = 1,
            failed = 0,
            failedButOk = 0
          }
        }
#7  0x0000555555581fbf in Catch::(anonymous namespace)::TestGroup::execute (this=0x7fffffffd3e0) at /home/david/Programming/cpp_dev/MrText/build/_deps/catch-src/single_include/catch2/catch.hpp:13343
        testCase = @0x5555556df460: 0x5555556ef150
        __range2 = std::set with 5 elements = {
          [0] = 0x5555556eee70,
          [1] = 0x5555556eef28,
          [2] = 0x5555556eefe0,
          [3] = 0x5555556ef098,
          [4] = 0x5555556ef150
        }
        __begin2 = 0x5555556ef150
        __end2 = 0x5
        invalidArgs = std::vector of length 0, capacity 0
        totals = {
          error = 0,
          assertions = {
            passed = 26,
            failed = 0,
            failedButOk = 0
          },
          testCases = {
            passed = 4,
            failed = 0,
            failedButOk = 0
          }
        }
#8  0x000055555558150f in Catch::Session::runInternal (this=0x7fffffffd6f8) at /home/david/Programming/cpp_dev/MrText/build/_deps/catch-src/single_include/catch2/catch.hpp:13549
        tests = {
          m_config = std::shared_ptr<Catch::Config> (use count 5, weak count 0) = {
            get() = 0x5555556d1130
          },
          m_context = {
            <Catch::IResultCapture> = {
              _vptr$IResultCapture = 0x5555556b7910 <vtable for Catch::RunContext+16>
            }, 
            <Catch::IRunner> = {
              _vptr$IRunner = 0x5555556b79d0 <vtable for Catch::RunContext+208>
            }, 
            members of Catch::RunContext:
            m_runInfo = {
              name = "testlib"
            },
            m_context = @0x5555556eec00,
            m_activeTestCase = 0x5555556ef150,
            m_testCaseTracker = 0x5555556d0ce0,
            m_lastResult = {
              nullableValue = 0x0,
              storage = "H\326\377\377\377\177\000\000 \326\377\377\377\177\000\000p\324\377\377\377\177\000\000\235\b\\UUU\000\000H\326\377\377\377\177\000\000\b\326\377\377\377\177\000\000\220\324\377\377\377\177\000\000\262\n\\UUU\000\000\b\326\377\377\377\177\000\000\b\326\377\377\377\177\000\000\260\324\377\377\377\177\000\000\230I[UUU\000\000\b\326\377\377\377\177\000\000\b\326\377\377\377\177\000\000p\326\377\377\377\177\000\000\351\021XUUU\000\000`\000mUUU\000\000\300\363lUUU\000"
            },
            m_config = std::shared_ptr<const Catch::IConfig> (use count 5, weak count 0) = {
              get() = 0x5555556d1130
            },
            m_totals = {
              error = 0,
              assertions = {
                passed = 26,
                failed = 0,
                failedButOk = 0
              },
              testCases = {
                passed = 4,
                failed = 0,
                failedButOk = 0
              }
            },
            m_reporter = std::unique_ptr<Catch::IStreamingReporter> = {
              get() = 0x5555556cf900
            },
            m_messages = std::vector of length 0, capacity 0,
            m_messageScopes = std::vector of length 0, capacity 0,
            m_lastAssertionInfo = {
              macroName = {
                static s_empty = <optimized out>,
                m_start = 0x5555556555f2 "TEST_CASE",
                m_size = 9
              },
              lineInfo = {
                file = 0x555555656083 "/home/david/Programming/cpp_dev/MrText/tests/testlib.cpp",
                line = 87
              },
              capturedExpression = {
                static s_empty = <optimized out>,
                m_start = 0x555555657608 "",
                m_size = 0
              },
              resultDisposition = Catch::ResultDisposition::Normal
            },
            m_unfinishedSections = std::vector of length 0, capacity 0,
            m_activeSections = std::vector of length 0, capacity 0,
            m_trackerContext = {
              m_rootTracker = std::shared_ptr<Catch::TestCaseTracking::ITracker> (use count 1, weak count 0) = {
                get() = 0x5555556cf770
              },
              m_currentTracker = 0x5555556d0ce0,
              m_runState = Catch::TestCaseTracking::TrackerContext::Executing
            },
            m_fatalConditionhandler = {
              m_started = true
            },
            m_lastAssertionPassed = true,
            m_shouldReportUnexpected = true,
            m_includeSuccessfulResults = false
          },
          m_tests = std::set with 5 elements = {
            [0] = 0x5555556eee70,
            [1] = 0x5555556eef28,
            [2] = 0x5555556eefe0,
            [3] = 0x5555556ef098,
            [4] = 0x5555556ef150
          },
          m_matches = std::vector of length 0, capacity 0
        }
        totals = {
          error = 0,
          assertions = {
            passed = 26,
            failed = 0,
            failedButOk = 0
          },
          testCases = {
            passed = 4,
            failed = 0,
            failedButOk = 0
          }
        }
        ex = @0x0: <incomplete type>
#9  0x00005555555812f7 in Catch::Session::run (this=0x7fffffffd6f8) at /home/david/Programming/cpp_dev/MrText/build/_deps/catch-src/single_include/catch2/catch.hpp:13505
        exitCode = 0
#10 0x00005555555bd343 in Catch::Session::run<char> (this=0x7fffffffd6f8, argc=1, argv=0x7fffffffd9a8) at /home/david/Programming/cpp_dev/MrText/build/_deps/catch-src/single_include/catch2/catch.hpp:13227
        returnCode = 0
#11 0x0000555555599a0f in main (argc=1, argv=0x7fffffffd9a8) at /home/david/Programming/cpp_dev/MrText/build/_deps/catch-src/single_include/catch2/catch.hpp:17504
No locals.
+n
+n
+n
+n
____C_A_T_C_H____T_E_S_T____8 () at /home/david/Programming/cpp_dev/MrText/tests/testlib.cpp:91
+print *this
No symbol "this" in current context.
+info locals
rope = {
  root = std::shared_ptr<RopeNode> (use count 1, weak count 0) = {
    get() = 0x5555556d1e60
  }
}
+print *rope
No symbol "operator*" in current context.
+print rope
$3 = {
  root = std::shared_ptr<RopeNode> (use count 1, weak count 0) = {
    get() = 0x5555556d1e60
  }
}
+n
Catch::TestInvokerAsFunction::invoke (this=0x5555556cff10) at /home/david/Programming/cpp_dev/MrText/build/_deps/catch-src/single_include/catch2/catch.hpp:14318
+n
Catch::TestCase::invoke (this=0x5555556ef150) at /home/david/Programming/cpp_dev/MrText/build/_deps/catch-src/single_include/catch2/catch.hpp:14157
+n
Catch::RunContext::invokeActiveTestCase (this=0x7fffffffd3f0) at /home/david/Programming/cpp_dev/MrText/build/_deps/catch-src/single_include/catch2/catch.hpp:13017
+n
Catch::RunContext::runCurrentTest (this=0x7fffffffd3f0, redirectedCout="", redirectedCerr="") at /home/david/Programming/cpp_dev/MrText/build/_deps/catch-src/single_include/catch2/catch.hpp:12991
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
Catch::RunContext::runTest (this=0x7fffffffd3f0, testCase=...) at /home/david/Programming/cpp_dev/MrText/build/_deps/catch-src/single_include/catch2/catch.hpp:12751
+n
+n
+n
+n
+n
+n
+break insert_line
Breakpoint 2 at 0x5555555fe445: file /home/david/Programming/cpp_dev/MrText/src/../include/MrText/NewRope.hpp, line 41.
+continue
Continuing.
[Inferior 1 (process 2582) exited normally]
+run
Starting program: /home/david/Programming/cpp_dev/MrText/build/tests/testlib 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/usr/lib64/libthread_db.so.1".

Breakpoint 1, NewRope::NewRope (this=0x7fffffffcbe8) at /home/david/Programming/cpp_dev/MrText/src/../include/MrText/NewRope.hpp:28
+n
+n
+n
+n
____C_A_T_C_H____T_E_S_T____8 () at /home/david/Programming/cpp_dev/MrText/tests/testlib.cpp:90
+s
std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> > (this=0x7fffffffcbf8, __s=0x5555556575e7 "test", __a=...) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/basic_string.h:650
+n
+n
+n
+n

Breakpoint 2, NewRope::insert_line (this=0x7fffffffcbe8, new_line="test") at /home/david/Programming/cpp_dev/MrText/src/../include/MrText/NewRope.hpp:41
+n
+n
+print *this
$4 = {
  root = std::shared_ptr<RopeNode> (use count 1, weak count 0) = {
    get() = 0x5555556d1e60
  }
}
+print line
No symbol "line" in current context.
+print this->right
There is no member or method named right.
+print this->root
$5 = std::shared_ptr<RopeNode> (use count 1, weak count 0) = {
  get() = 0x5555556d1e60
}
+print this->root.line
There is no member or method named line.
+backtrace full
#0  NewRope::insert_line (this=0x7fffffffcbe8, new_line="test") at /home/david/Programming/cpp_dev/MrText/src/../include/MrText/NewRope.hpp:47
        err = @0x7fffffffcbf8: <incomplete type>
#1  0x000055555559cea4 in ____C_A_T_C_H____T_E_S_T____8 () at /home/david/Programming/cpp_dev/MrText/tests/testlib.cpp:90
        rope = {
          root = std::shared_ptr<RopeNode> (use count 1, weak count 0) = {
            get() = 0x5555556d1e60
          }
        }
#2  0x00005555555858d7 in Catch::TestInvokerAsFunction::invoke (this=0x5555556cff10) at /home/david/Programming/cpp_dev/MrText/build/_deps/catch-src/single_include/catch2/catch.hpp:14317
No locals.
#3  0x000055555557f498 in Catch::TestCase::invoke (this=0x5555556ef150) at /home/david/Programming/cpp_dev/MrText/build/_deps/catch-src/single_include/catch2/catch.hpp:14156
No locals.
#4  0x000055555557f3a2 in Catch::RunContext::invokeActiveTestCase (this=0x7fffffffd3f0) at /home/david/Programming/cpp_dev/MrText/build/_deps/catch-src/single_include/catch2/catch.hpp:13016
        _ = {
          m_handler = 0x7fffffffd5d8
        }
#5  0x000055555557de75 in Catch::RunContext::runCurrentTest (this=0x7fffffffd3f0, redirectedCout="", redirectedCerr="") at /home/david/Programming/cpp_dev/MrText/build/_deps/catch-src/single_include/catch2/catch.hpp:12989
        testCaseInfo = @0x5555556ef150: {
          name = "Binary Tree Rope Practice.",
          className = "",
          description = "",
          tags = std::vector of length 1, capacity 1 = {"main"},
          lcaseTags = std::vector of length 1, capacity 1 = {"main"},
          lineInfo = {
            file = 0x555555656083 "/home/david/Programming/cpp_dev/MrText/tests/testlib.cpp",
            line = 87
          },
          properties = Catch::TestCaseInfo::None
        }
        testCaseSection = {
          name = "Binary Tree Rope Practice.",
          description = "",
          lineInfo = {
            file = 0x555555656083 "/home/david/Programming/cpp_dev/MrText/tests/testlib.cpp",
            line = 87
          }
        }
        prevAssertions = {
          passed = 26,
          failed = 0,
          failedButOk = 0
        }
        duration = 0
        timer = {
          m_nanoseconds = 1732476971520483334
        }
        assertions = {
          passed = 0,
          failed = 0,
          failedButOk = 140737488342544
        }
        missingAssertions = false
        testCaseSectionStats = {
          _vptr$SectionStats = 0x7fffffffd9a8,
          sectionInfo = {
            name = "\340\316\377\377\377\177\000\000\024\355[UUU\000\000X\321\377\377\377\177\000\000X\321\377\377\377\177\000\000\032\000\000\000\000\000\000\000X\321\377\377\377\177\000\000\033\000\000\000\000\000\000\000\200\vmUUU\000\000X\321\377\377\377\177\000\000\033\000\000\000\000\000\000\000\200\vmUUU\000\000X\321\377\377\377\177\000\000\000\317\377\377\377\177\000\000\200\vmUUU\000\000\032\000\000\000\000\000\000\000\032\000\000\000\000\000\000\000 \317\377\377\377\177\000\000\030\317\377\377\377\177", '\000' <repeats 11 times>, "\321\377\377\377\177\000\000@\317\377\377\377\177\000\000\203`eUUU\000\000W\000\000\000\000\000\000\000\000\223\320\037\026\370\373\351\320\321\377\377\377\177\000\000"...,
            description = "",
            lineInfo = {
              file = 0x7fffffffd158 "\200\vmUUU",
              line = 140737488343384
            }
          },
          assertions = {
            passed = 26,
            failed = 140737488343384,
            failedButOk = 27
          },
          durationInSeconds = 4.6355706153326264e-310,
          missingAssertions = 88
        }
#6  0x000055555557d1dd in Catch::RunContext::runTest (this=0x7fffffffd3f0, testCase=...) at /home/david/Programming/cpp_dev/MrText/build/_deps/catch-src/single_include/catch2/catch.hpp:12750
        prevTotals = {
          error = 0,
          assertions = {
            passed = 26,
            failed = 0,
            failedButOk = 0
          },
          testCases = {
            passed = 4,
            failed = 0,
            failedButOk = 0
          }
        }
        redirectedCout = ""
        redirectedCerr = ""
        testInfo = @0x5555556ef150: {
          name = "Binary Tree Rope Practice.",
          className = "",
          description = "",
          tags = std::vector of length 1, capacity 1 = {"main"},
          lcaseTags = std::vector of length 1, capacity 1 = {"main"},
          lineInfo = {
            file = 0x555555656083 "/home/david/Programming/cpp_dev/MrText/tests/testlib.cpp",
            line = 87
          },
          properties = Catch::TestCaseInfo::None
        }
        rootTracker = @0x5555556cf770: {
          _vptr$ITracker = 0x5555556b7bd0 <vtable for Catch::TestCaseTracking::SectionTracker+16>,
          m_nameAndLocation = {
            name = "{root}",
            location = {
              file = 0x555555654fb9 "/home/david/Programming/cpp_dev/MrText/build/_deps/catch-src/single_include/catch2/catch.hpp",
              line = 14359
            }
          }
        }
        deltaTotals = {
          error = 0,
          assertions = {
            passed = 1,
            failed = 0,
            failedButOk = 0
          },
          testCases = {
            passed = 1,
            failed = 0,
            failedButOk = 0
          }
        }
#7  0x0000555555581fbf in Catch::(anonymous namespace)::TestGroup::execute (this=0x7fffffffd3e0) at /home/david/Programming/cpp_dev/MrText/build/_deps/catch-src/single_include/catch2/catch.hpp:13343
        testCase = @0x5555556df460: 0x5555556ef150
        __range2 = std::set with 5 elements = {
          [0] = 0x5555556eee70,
          [1] = 0x5555556eef28,
          [2] = 0x5555556eefe0,
          [3] = 0x5555556ef098,
          [4] = 0x5555556ef150
        }
        __begin2 = 0x5555556ef150
        __end2 = 0x5
        invalidArgs = std::vector of length 0, capacity 0
        totals = {
          error = 0,
          assertions = {
            passed = 26,
            failed = 0,
            failedButOk = 0
          },
          testCases = {
            passed = 4,
            failed = 0,
            failedButOk = 0
          }
        }
#8  0x000055555558150f in Catch::Session::runInternal (this=0x7fffffffd6f8) at /home/david/Programming/cpp_dev/MrText/build/_deps/catch-src/single_include/catch2/catch.hpp:13549
        tests = {
          m_config = std::shared_ptr<Catch::Config> (use count 5, weak count 0) = {
            get() = 0x5555556d1130
          },
          m_context = {
            <Catch::IResultCapture> = {
              _vptr$IResultCapture = 0x5555556b7910 <vtable for Catch::RunContext+16>
            }, 
            <Catch::IRunner> = {
              _vptr$IRunner = 0x5555556b79d0 <vtable for Catch::RunContext+208>
            }, 
            members of Catch::RunContext:
            m_runInfo = {
              name = "testlib"
            },
            m_context = @0x5555556eec00,
            m_activeTestCase = 0x5555556ef150,
            m_testCaseTracker = 0x5555556d0ce0,
            m_lastResult = {
              nullableValue = 0x0,
              storage = "H\326\377\377\377\177\000\000 \326\377\377\377\177\000\000p\324\377\377\377\177\000\000\235\b\\UUU\000\000H\326\377\377\377\177\000\000\b\326\377\377\377\177\000\000\220\324\377\377\377\177\000\000\262\n\\UUU\000\000\b\326\377\377\377\177\000\000\b\326\377\377\377\177\000\000\260\324\377\377\377\177\000\000\230I[UUU\000\000\b\326\377\377\377\177\000\000\b\326\377\377\377\177\000\000p\326\377\377\377\177\000\000\351\021XUUU\000\000`\000mUUU\000\000\300\363lUUU\000"
            },
            m_config = std::shared_ptr<const Catch::IConfig> (use count 5, weak count 0) = {
              get() = 0x5555556d1130
            },
            m_totals = {
              error = 0,
              assertions = {
                passed = 26,
                failed = 0,
                failedButOk = 0
              },
              testCases = {
                passed = 4,
                failed = 0,
                failedButOk = 0
              }
            },
            m_reporter = std::unique_ptr<Catch::IStreamingReporter> = {
              get() = 0x5555556cf900
            },
            m_messages = std::vector of length 0, capacity 0,
            m_messageScopes = std::vector of length 0, capacity 0,
            m_lastAssertionInfo = {
              macroName = {
                static s_empty = <optimized out>,
                m_start = 0x5555556555f2 "TEST_CASE",
                m_size = 9
              },
              lineInfo = {
                file = 0x555555656083 "/home/david/Programming/cpp_dev/MrText/tests/testlib.cpp",
                line = 87
              },
              capturedExpression = {
                static s_empty = <optimized out>,
                m_start = 0x555555657608 "",
                m_size = 0
              },
              resultDisposition = Catch::ResultDisposition::Normal
            },
            m_unfinishedSections = std::vector of length 0, capacity 0,
            m_activeSections = std::vector of length 0, capacity 0,
            m_trackerContext = {
              m_rootTracker = std::shared_ptr<Catch::TestCaseTracking::ITracker> (use count 1, weak count 0) = {
                get() = 0x5555556cf770
              },
              m_currentTracker = 0x5555556d0ce0,
              m_runState = Catch::TestCaseTracking::TrackerContext::Executing
            },
            m_fatalConditionhandler = {
              m_started = true
            },
            m_lastAssertionPassed = true,
            m_shouldReportUnexpected = true,
            m_includeSuccessfulResults = false
          },
          m_tests = std::set with 5 elements = {
            [0] = 0x5555556eee70,
            [1] = 0x5555556eef28,
            [2] = 0x5555556eefe0,
            [3] = 0x5555556ef098,
            [4] = 0x5555556ef150
          },
          m_matches = std::vector of length 0, capacity 0
        }
        totals = {
          error = 0,
          assertions = {
            passed = 26,
            failed = 0,
            failedButOk = 0
          },
          testCases = {
            passed = 4,
            failed = 0,
            failedButOk = 0
          }
        }
        ex = @0x0: <incomplete type>
#9  0x00005555555812f7 in Catch::Session::run (this=0x7fffffffd6f8) at /home/david/Programming/cpp_dev/MrText/build/_deps/catch-src/single_include/catch2/catch.hpp:13505
        exitCode = 0
#10 0x00005555555bd343 in Catch::Session::run<char> (this=0x7fffffffd6f8, argc=1, argv=0x7fffffffd9a8) at /home/david/Programming/cpp_dev/MrText/build/_deps/catch-src/single_include/catch2/catch.hpp:13227
        returnCode = 0
#11 0x0000555555599a0f in main (argc=1, argv=0x7fffffffd9a8) at /home/david/Programming/cpp_dev/MrText/build/_deps/catch-src/single_include/catch2/catch.hpp:17504
No locals.
+s
std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::length (this=0x7fffffffcbf8) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/basic_string.h:1084
+n
NewRope::insert_line (this=0x7fffffffcbe8, new_line="test") at /home/david/Programming/cpp_dev/MrText/src/../include/MrText/NewRope.hpp:48
+backtrace full
#0  NewRope::insert_line (this=0x7fffffffcbe8, new_line="test") at /home/david/Programming/cpp_dev/MrText/src/../include/MrText/NewRope.hpp:48
        err = @0x7fffffffcbf8: <incomplete type>
#1  0x000055555559cea4 in ____C_A_T_C_H____T_E_S_T____8 () at /home/david/Programming/cpp_dev/MrText/tests/testlib.cpp:90
        rope = {
          root = std::shared_ptr<RopeNode> (use count 1, weak count 0) = {
            get() = 0x5555556d1e60
          }
        }
#2  0x00005555555858d7 in Catch::TestInvokerAsFunction::invoke (this=0x5555556cff10) at /home/david/Programming/cpp_dev/MrText/build/_deps/catch-src/single_include/catch2/catch.hpp:14317
No locals.
#3  0x000055555557f498 in Catch::TestCase::invoke (this=0x5555556ef150) at /home/david/Programming/cpp_dev/MrText/build/_deps/catch-src/single_include/catch2/catch.hpp:14156
No locals.
#4  0x000055555557f3a2 in Catch::RunContext::invokeActiveTestCase (this=0x7fffffffd3f0) at /home/david/Programming/cpp_dev/MrText/build/_deps/catch-src/single_include/catch2/catch.hpp:13016
        _ = {
          m_handler = 0x7fffffffd5d8
        }
#5  0x000055555557de75 in Catch::RunContext::runCurrentTest (this=0x7fffffffd3f0, redirectedCout="", redirectedCerr="") at /home/david/Programming/cpp_dev/MrText/build/_deps/catch-src/single_include/catch2/catch.hpp:12989
        testCaseInfo = @0x5555556ef150: {
          name = "Binary Tree Rope Practice.",
          className = "",
          description = "",
          tags = std::vector of length 1, capacity 1 = {"main"},
          lcaseTags = std::vector of length 1, capacity 1 = {"main"},
          lineInfo = {
            file = 0x555555656083 "/home/david/Programming/cpp_dev/MrText/tests/testlib.cpp",
            line = 87
          },
          properties = Catch::TestCaseInfo::None
        }
        testCaseSection = {
          name = "Binary Tree Rope Practice.",
          description = "",
          lineInfo = {
            file = 0x555555656083 "/home/david/Programming/cpp_dev/MrText/tests/testlib.cpp",
            line = 87
          }
        }
        prevAssertions = {
          passed = 26,
          failed = 0,
          failedButOk = 0
        }
        duration = 0
        timer = {
          m_nanoseconds = 1732476971520483334
        }
        assertions = {
          passed = 0,
          failed = 0,
          failedButOk = 140737488342544
        }
        missingAssertions = false
        testCaseSectionStats = {
          _vptr$SectionStats = 0x7fffffffd9a8,
          sectionInfo = {
            name = "\340\316\377\377\377\177\000\000\024\355[UUU\000\000X\321\377\377\377\177\000\000X\321\377\377\377\177\000\000\032\000\000\000\000\000\000\000X\321\377\377\377\177\000\000\033\000\000\000\000\000\000\000\200\vmUUU\000\000X\321\377\377\377\177\000\000\033\000\000\000\000\000\000\000\200\vmUUU\000\000X\321\377\377\377\177\000\000\000\317\377\377\377\177\000\000\200\vmUUU\000\000\032\000\000\000\000\000\000\000\032\000\000\000\000\000\000\000 \317\377\377\377\177\000\000\030\317\377\377\377\177", '\000' <repeats 11 times>, "\321\377\377\377\177\000\000@\317\377\377\377\177\000\000\203`eUUU\000\000W\000\000\000\000\000\000\000\000\223\320\037\026\370\373\351\320\321\377\377\377\177\000\000"...,
            description = "",
            lineInfo = {
              file = 0x7fffffffd158 "\200\vmUUU",
              line = 140737488343384
            }
          },
          assertions = {
            passed = 26,
            failed = 140737488343384,
            failedButOk = 27
          },
          durationInSeconds = 4.6355706153326264e-310,
          missingAssertions = 88
        }
#6  0x000055555557d1dd in Catch::RunContext::runTest (this=0x7fffffffd3f0, testCase=...) at /home/david/Programming/cpp_dev/MrText/build/_deps/catch-src/single_include/catch2/catch.hpp:12750
        prevTotals = {
          error = 0,
          assertions = {
            passed = 26,
            failed = 0,
            failedButOk = 0
          },
          testCases = {
            passed = 4,
            failed = 0,
            failedButOk = 0
          }
        }
        redirectedCout = ""
        redirectedCerr = ""
        testInfo = @0x5555556ef150: {
          name = "Binary Tree Rope Practice.",
          className = "",
          description = "",
          tags = std::vector of length 1, capacity 1 = {"main"},
          lcaseTags = std::vector of length 1, capacity 1 = {"main"},
          lineInfo = {
            file = 0x555555656083 "/home/david/Programming/cpp_dev/MrText/tests/testlib.cpp",
            line = 87
          },
          properties = Catch::TestCaseInfo::None
        }
        rootTracker = @0x5555556cf770: {
          _vptr$ITracker = 0x5555556b7bd0 <vtable for Catch::TestCaseTracking::SectionTracker+16>,
          m_nameAndLocation = {
            name = "{root}",
            location = {
              file = 0x555555654fb9 "/home/david/Programming/cpp_dev/MrText/build/_deps/catch-src/single_include/catch2/catch.hpp",
              line = 14359
            }
          }
        }
        deltaTotals = {
          error = 0,
          assertions = {
            passed = 1,
            failed = 0,
            failedButOk = 0
          },
          testCases = {
            passed = 1,
            failed = 0,
            failedButOk = 0
          }
        }
#7  0x0000555555581fbf in Catch::(anonymous namespace)::TestGroup::execute (this=0x7fffffffd3e0) at /home/david/Programming/cpp_dev/MrText/build/_deps/catch-src/single_include/catch2/catch.hpp:13343
        testCase = @0x5555556df460: 0x5555556ef150
        __range2 = std::set with 5 elements = {
          [0] = 0x5555556eee70,
          [1] = 0x5555556eef28,
          [2] = 0x5555556eefe0,
          [3] = 0x5555556ef098,
          [4] = 0x5555556ef150
        }
        __begin2 = 0x5555556ef150
        __end2 = 0x5
        invalidArgs = std::vector of length 0, capacity 0
        totals = {
          error = 0,
          assertions = {
            passed = 26,
            failed = 0,
            failedButOk = 0
          },
          testCases = {
            passed = 4,
            failed = 0,
            failedButOk = 0
          }
        }
#8  0x000055555558150f in Catch::Session::runInternal (this=0x7fffffffd6f8) at /home/david/Programming/cpp_dev/MrText/build/_deps/catch-src/single_include/catch2/catch.hpp:13549
        tests = {
          m_config = std::shared_ptr<Catch::Config> (use count 5, weak count 0) = {
            get() = 0x5555556d1130
          },
          m_context = {
            <Catch::IResultCapture> = {
              _vptr$IResultCapture = 0x5555556b7910 <vtable for Catch::RunContext+16>
            }, 
            <Catch::IRunner> = {
              _vptr$IRunner = 0x5555556b79d0 <vtable for Catch::RunContext+208>
            }, 
            members of Catch::RunContext:
            m_runInfo = {
              name = "testlib"
            },
            m_context = @0x5555556eec00,
            m_activeTestCase = 0x5555556ef150,
            m_testCaseTracker = 0x5555556d0ce0,
            m_lastResult = {
              nullableValue = 0x0,
              storage = "H\326\377\377\377\177\000\000 \326\377\377\377\177\000\000p\324\377\377\377\177\000\000\235\b\\UUU\000\000H\326\377\377\377\177\000\000\b\326\377\377\377\177\000\000\220\324\377\377\377\177\000\000\262\n\\UUU\000\000\b\326\377\377\377\177\000\000\b\326\377\377\377\177\000\000\260\324\377\377\377\177\000\000\230I[UUU\000\000\b\326\377\377\377\177\000\000\b\326\377\377\377\177\000\000p\326\377\377\377\177\000\000\351\021XUUU\000\000`\000mUUU\000\000\300\363lUUU\000"
            },
            m_config = std::shared_ptr<const Catch::IConfig> (use count 5, weak count 0) = {
              get() = 0x5555556d1130
            },
            m_totals = {
              error = 0,
              assertions = {
                passed = 26,
                failed = 0,
                failedButOk = 0
              },
              testCases = {
                passed = 4,
                failed = 0,
                failedButOk = 0
              }
            },
            m_reporter = std::unique_ptr<Catch::IStreamingReporter> = {
              get() = 0x5555556cf900
            },
            m_messages = std::vector of length 0, capacity 0,
            m_messageScopes = std::vector of length 0, capacity 0,
            m_lastAssertionInfo = {
              macroName = {
                static s_empty = <optimized out>,
                m_start = 0x5555556555f2 "TEST_CASE",
                m_size = 9
              },
              lineInfo = {
                file = 0x555555656083 "/home/david/Programming/cpp_dev/MrText/tests/testlib.cpp",
                line = 87
              },
              capturedExpression = {
                static s_empty = <optimized out>,
                m_start = 0x555555657608 "",
                m_size = 0
              },
              resultDisposition = Catch::ResultDisposition::Normal
            },
            m_unfinishedSections = std::vector of length 0, capacity 0,
            m_activeSections = std::vector of length 0, capacity 0,
            m_trackerContext = {
              m_rootTracker = std::shared_ptr<Catch::TestCaseTracking::ITracker> (use count 1, weak count 0) = {
                get() = 0x5555556cf770
              },
              m_currentTracker = 0x5555556d0ce0,
              m_runState = Catch::TestCaseTracking::TrackerContext::Executing
            },
            m_fatalConditionhandler = {
              m_started = true
            },
            m_lastAssertionPassed = true,
            m_shouldReportUnexpected = true,
            m_includeSuccessfulResults = false
          },
          m_tests = std::set with 5 elements = {
            [0] = 0x5555556eee70,
            [1] = 0x5555556eef28,
            [2] = 0x5555556eefe0,
            [3] = 0x5555556ef098,
            [4] = 0x5555556ef150
          },
          m_matches = std::vector of length 0, capacity 0
        }
        totals = {
          error = 0,
          assertions = {
            passed = 26,
            failed = 0,
            failedButOk = 0
          },
          testCases = {
            passed = 4,
            failed = 0,
            failedButOk = 0
          }
        }
        ex = @0x0: <incomplete type>
#9  0x00005555555812f7 in Catch::Session::run (this=0x7fffffffd6f8) at /home/david/Programming/cpp_dev/MrText/build/_deps/catch-src/single_include/catch2/catch.hpp:13505
        exitCode = 0
#10 0x00005555555bd343 in Catch::Session::run<char> (this=0x7fffffffd6f8, argc=1, argv=0x7fffffffd9a8) at /home/david/Programming/cpp_dev/MrText/build/_deps/catch-src/single_include/catch2/catch.hpp:13227
        returnCode = 0
#11 0x0000555555599a0f in main (argc=1, argv=0x7fffffffd9a8) at /home/david/Programming/cpp_dev/MrText/build/_deps/catch-src/single_include/catch2/catch.hpp:17504
No locals.
+exit
Reading symbols from ./build/tests/testlib...
+break NewRope
Breakpoint 1 at 0xaa2f5: file /home/david/Programming/cpp_dev/MrText/src/../include/MrText/NewRope.hpp, line 31.
+run
Starting program: /home/david/Programming/cpp_dev/MrText/build/tests/testlib 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/usr/lib64/libthread_db.so.1".

Breakpoint 1, NewRope::NewRope (this=0x7fffffffcbe8) at /home/david/Programming/cpp_dev/MrText/src/../include/MrText/NewRope.hpp:31
+n
+s
RopeNode::RopeNode (this=0x5555556eaa90, rope_root=true) at /home/david/Programming/cpp_dev/MrText/src/../include/MrText/NewRope.hpp:16
+s
std::unique_ptr<RopeNode, std::default_delete<RopeNode> >::unique_ptr<std::default_delete<RopeNode>, void>(decltype(nullptr)) (this=0x5555556eaa98) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/unique_ptr.h:355
+print *this
$1 = std::unique_ptr<RopeNode> = {
  get() = 0x0
}
+n
RopeNode::RopeNode (this=0x5555556eaa90, rope_root=true) at /home/david/Programming/cpp_dev/MrText/src/../include/MrText/NewRope.hpp:15
+print *this
$2 = {
  root_node = true,
  next_node = std::unique_ptr<RopeNode> = {
    get() = 0x0
  },
  weight = 2338053702200485232,
  line = <error: Cannot access memory at address 0x64616f6c7265766f>
}
+exit
Reading symbols from ./build/tests/testlib...
+break NewRope
Breakpoint 1 at 0xaa2f5: file /home/david/Programming/cpp_dev/MrText/src/../include/MrText/NewRope.hpp, line 31.
+run
Starting program: /home/david/Programming/cpp_dev/MrText/build/tests/testlib 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/usr/lib64/libthread_db.so.1".

Breakpoint 1, NewRope::NewRope (this=0x7fffffffcbe8) at /home/david/Programming/cpp_dev/MrText/src/../include/MrText/NewRope.hpp:31
+n
+n
+n
+print *this
$1 = {
  root_node = std::shared_ptr<RopeNode> (use count 1, weak count 0) = {
    get() = 0x5555556eba90
  }
}
+n
____C_A_T_C_H____T_E_S_T____8 () at /home/david/Programming/cpp_dev/MrText/tests/testlib.cpp:90
+print *this
No symbol "this" in current context.
+print rope
$2 = {
  root_node = std::shared_ptr<RopeNode> (use count 1, weak count 0) = {
    get() = 0x5555556eba90
  }
}
+print *rope->root_node
$3 = {
  root_node = true,
  next_node = std::unique_ptr<RopeNode> = {
    get() = 0x0
  },
  weight = 0,
  line = ""
}
+n

Program received signal SIGSEGV, Segmentation fault.
std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_data (this=0x18) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/basic_string.h:228
+exit
Reading symbols from ./build/tests/testlib...
+break NewRope
Breakpoint 1 at 0xaa2f5: file /home/david/Programming/cpp_dev/MrText/src/../include/MrText/NewRope.hpp, line 31.
+run
Starting program: /home/david/Programming/cpp_dev/MrText/build/tests/testlib 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/usr/lib64/libthread_db.so.1".

Breakpoint 1, NewRope::NewRope (this=0x7fffffffcbe8) at /home/david/Programming/cpp_dev/MrText/src/../include/MrText/NewRope.hpp:31
+n
+n
+n
+n
____C_A_T_C_H____T_E_S_T____8 () at /home/david/Programming/cpp_dev/MrText/tests/testlib.cpp:90
+s
std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> > (this=0x7fffffffcbf8, __s=0x5555556575e7 "test", __a=...) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/basic_string.h:650
+n
+n
+n
+n

Program received signal SIGSEGV, Segmentation fault.
std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_data (this=0x18) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/basic_string.h:228
+n
Catch::handleSignal (sig=0) at /home/david/Programming/cpp_dev/MrText/build/_deps/catch-src/single_include/catch2/catch.hpp:10896
+n
+n
+n
+n
+info locals
__range1 = @0x5555556bd010: {{
    id = 2,
    name = 0x555555656958 "SIGINT - Terminal interrupt signal"
  }, {
    id = 4,
    name = 0x55555565697b "SIGILL - Illegal instruction signal"
  }, {
    id = 8,
    name = 0x55555565699f "SIGFPE - Floating point error signal"
  }, {
    id = 11,
    name = 0x5555556569c4 "SIGSEGV - Segmentation violation signal"
  }, {
    id = 15,
    name = 0x5555556569ec "SIGTERM - Termination request signal"
  }, {
    id = 6,
    name = 0x555555656a11 "SIGABRT - Abort (abnormal termination) signal"
  }}
__begin1 = 0x5555556bd010 <Catch::signalDefs>
__end1 = 0x5555556bd070 <Catch::trim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::whitespaceChars>
name = 0x555555656947 "<unknown signal>"
+n
+n
+n
+n
+n
+n
+n
+n
+info locals
name = 0x5555556569c4 "SIGSEGV - Segmentation violation signal"
+exit
Not confirmed.
+stop
+reset
Undefined command: "reset".  Try "help".
+restart
Requires argument (checkpoint id to restart)
+exit
Reading symbols from ./build/tests/testlib...
+break NewRope
Breakpoint 1 at 0xaa2f5: file /home/david/Programming/cpp_dev/MrText/src/../include/MrText/NewRope.hpp, line 31.
+run
Starting program: /home/david/Programming/cpp_dev/MrText/build/tests/testlib 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/usr/lib64/libthread_db.so.1".

Breakpoint 1, NewRope::NewRope (this=0x7fffffffcbe8) at /home/david/Programming/cpp_dev/MrText/src/../include/MrText/NewRope.hpp:31
+print *this
$1 = {
  root_node = std::shared_ptr<RopeNode> (empty) = {
    get() = 0x0
  }
}
+print *this->root_node
Cannot access memory at address 0x0
+exit
Reading symbols from ./build/tests/testlib...
+break NewRope
Breakpoint 1 at 0xaa2f5: file /home/david/Programming/cpp_dev/MrText/src/../include/MrText/NewRope.hpp, line 32.
+run
Starting program: /home/david/Programming/cpp_dev/MrText/build/tests/testlib 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/usr/lib64/libthread_db.so.1".

Breakpoint 1, NewRope::NewRope (this=0x7fffffffcbf0) at /home/david/Programming/cpp_dev/MrText/src/../include/MrText/NewRope.hpp:32
+n
+n
+n
+info locals
No locals.
+print *this
$1 = {
  root_node = std::unique_ptr<RopeNode> = {
    get() = 0x5555556e9a90
  }
}
+print *this->root_node
$2 = {
  root_node = true,
  next_node = std::unique_ptr<RopeNode> = {
    get() = 0x0
  },
  weight = 0,
  line = ""
}
+n
____C_A_T_C_H____T_E_S_T____8 () at /home/david/Programming/cpp_dev/MrText/tests/testlib.cpp:90
+s
std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> > (this=0x7fffffffcbf8, __s=0x5555556575e7 "test", __a=...) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/basic_string.h:650
+info locals
__end = 0x555555575180 <Catch::handleSignal(int)> "\363\017\036\372UH\211\345H\203\3540\211}\374H\215\005\261\027\016"
+n
+n
+n
+n

Program received signal SIGSEGV, Segmentation fault.
std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_data (this=0x18) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/basic_string.h:228
+print *this->next_node
There is no member or method named next_node.
+print *this->root_node
There is no member or method named root_node.
+n
Catch::handleSignal (sig=0) at /home/david/Programming/cpp_dev/MrText/build/_deps/catch-src/single_include/catch2/catch.hpp:10896
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_data (this=0x18) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/basic_string.h:228
+n

Program received signal SIGSEGV, Segmentation fault.
std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_data (this=0x18) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/basic_string.h:228
+n

Program terminated with signal SIGSEGV, Segmentation fault.
The program no longer exists.
+exit
Reading symbols from ./build/tests/testlib...
+break NewRope
Breakpoint 1 at 0xaa2f5: file /home/david/Programming/cpp_dev/MrText/src/../include/MrText/NewRope.hpp, line 44.
+run
Starting program: /home/david/Programming/cpp_dev/MrText/build/tests/testlib 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/usr/lib64/libthread_db.so.1".

Breakpoint 1, NewRope::NewRope (this=0x7fffffffcbf0) at /home/david/Programming/cpp_dev/MrText/src/../include/MrText/NewRope.hpp:44
+print *this
$1 = {
  root_node = std::unique_ptr<RopeNode> = {
    get() = 0x0
  }
}
+print *this->root_node
Cannot access memory at address 0x0
+n
+n
+n
+print *this->root_node
$2 = {
  right = std::unique_ptr<RopeNode> = {
    get() = 0x5555556dbee0
  },
  left = std::unique_ptr<RopeNode> = {
    get() = 0x5555556d2e90
  },
  data = "",
  root_node = true,
  weight = 0
}
+exit
Reading symbols from ./build/tests/testlib...
+break NewRope
Breakpoint 1 at 0xaa2f5: file /home/david/Programming/cpp_dev/MrText/src/../include/MrText/NewRope.hpp, line 44.
+run
Starting program: /home/david/Programming/cpp_dev/MrText/build/tests/testlib 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/usr/lib64/libthread_db.so.1".

Breakpoint 1, NewRope::NewRope (this=0x7fffffffcbf0) at /home/david/Programming/cpp_dev/MrText/src/../include/MrText/NewRope.hpp:44
+n
+n
+n
+print *this->root_node->left
$1 = {
  right = std::unique_ptr<RopeNode> = {
    get() = 0x0
  },
  left = std::unique_ptr<RopeNode> = {
    get() = 0x0
  },
  data = "",
  root_node = false,
  weight = 0
}
+print *this->root_node->right
$2 = {
  right = std::unique_ptr<RopeNode> = {
    get() = 0x0
  },
  left = std::unique_ptr<RopeNode> = {
    get() = 0x0
  },
  data = "",
  root_node = false,
  weight = 0
}
+quit
Reading symbols from ./build/tests/testlib...
+break operator[]
Breakpoint 1 at 0x5aa2c: operator[]. (30 locations)
+run
Starting program: /home/david/Programming/cpp_dev/MrText/build/tests/testlib 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/usr/lib64/libthread_db.so.1".

Breakpoint 1.8, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator[] (this=0x7fffffffd6c8, __pos=0) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/basic_string.h:1249
+n
+n
Catch::(anonymous namespace)::parseSpecialTag (tag="main") at /home/david/Programming/cpp_dev/MrText/build/_deps/catch-src/single_include/catch2/catch.hpp:14015
+n
+n
+n
+n
+n
+n
+n
+n
+n
Catch::makeTestCase (_testCase=0x5555556d1650, _className="", nameAndTags=..., _lineInfo=...) at /home/david/Programming/cpp_dev/MrText/build/_deps/catch-src/single_include/catch2/catch.hpp:14062
+n
+n
+continue
Continuing.

Breakpoint 1.8, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator[] (this=0x7fffffffd6c8, __pos=0) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/basic_string.h:1249
+continue
Continuing.

Breakpoint 1.8, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator[] (this=0x7fffffffd6c8, __pos=0) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/basic_string.h:1249
+continue
Continuing.

Breakpoint 1.8, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator[] (this=0x7fffffffd6c8, __pos=0) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/basic_string.h:1249
+continue
Continuing.

Breakpoint 1.8, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator[] (this=0x7fffffffd368, __pos=0) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/basic_string.h:1249
+nest
Undefined command: "nest".  Try "help".
+n
+n
Catch::(anonymous namespace)::parseSpecialTag (tag="main") at /home/david/Programming/cpp_dev/MrText/build/_deps/catch-src/single_include/catch2/catch.hpp:14015
+continue
Continuing.

Breakpoint 1.8, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator[] (this=0x7fffffffd6c8, __pos=0) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/basic_string.h:1249
+n
+n
Catch::(anonymous namespace)::parseSpecialTag (tag="main") at /home/david/Programming/cpp_dev/MrText/build/_deps/catch-src/single_include/catch2/catch.hpp:14015
+continue
Continuing.

Breakpoint 1.8, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator[] (this=0x7fffffffd6c8, __pos=0) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/basic_string.h:1249
+n
+n
Catch::(anonymous namespace)::parseSpecialTag (tag="main") at /home/david/Programming/cpp_dev/MrText/build/_deps/catch-src/single_include/catch2/catch.hpp:14015
+continue
Continuing.

Breakpoint 1.8, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator[] (this=0x7fffffffd6c8, __pos=0) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/basic_string.h:1249
+n
+n
Catch::(anonymous namespace)::enforceNotReservedTag (tag="main", _lineInfo=...) at /home/david/Programming/cpp_dev/MrText/build/_deps/catch-src/single_include/catch2/catch.hpp:14038
+continue
Continuing.

Breakpoint 1.8, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator[] (this=0x7fffffffd6c8, __pos=0) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/basic_string.h:1249
+n
+n
Catch::makeTestCase (_testCase=0x5555556d16c0, _className="", nameAndTags=..., _lineInfo=...) at /home/david/Programming/cpp_dev/MrText/build/_deps/catch-src/single_include/catch2/catch.hpp:14073
+continue
Continuing.

Breakpoint 1.8, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator[] (this=0x7fffffffd368, __pos=0) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/basic_string.h:1249
+n
+n
Catch::(anonymous namespace)::parseSpecialTag (tag="main") at /home/david/Programming/cpp_dev/MrText/build/_deps/catch-src/single_include/catch2/catch.hpp:14015
+continue
Continuing.

Breakpoint 1.8, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator[] (this=0x7fffffffd6c8, __pos=0) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/basic_string.h:1249
+n
+n
Catch::(anonymous namespace)::parseSpecialTag (tag="main") at /home/david/Programming/cpp_dev/MrText/build/_deps/catch-src/single_include/catch2/catch.hpp:14015
+continue
Continuing.

Breakpoint 1.8, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator[] (this=0x7fffffffd6c8, __pos=0) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/basic_string.h:1249
+n
+n
Catch::(anonymous namespace)::parseSpecialTag (tag="main") at /home/david/Programming/cpp_dev/MrText/build/_deps/catch-src/single_include/catch2/catch.hpp:14015
+continue
Continuing.

Breakpoint 1.8, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator[] (this=0x7fffffffd6c8, __pos=0) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/basic_string.h:1249
+n
+n
Catch::(anonymous namespace)::enforceNotReservedTag (tag="main", _lineInfo=...) at /home/david/Programming/cpp_dev/MrText/build/_deps/catch-src/single_include/catch2/catch.hpp:14038
+continue
Continuing.

Breakpoint 1.8, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator[] (this=0x7fffffffd6c8, __pos=0) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/basic_string.h:1249
+n
+n
Catch::makeTestCase (_testCase=0x5555556d1ae0, _className="", nameAndTags=..., _lineInfo=...) at /home/david/Programming/cpp_dev/MrText/build/_deps/catch-src/single_include/catch2/catch.hpp:14073
+exit
Reading symbols from ./build/tests/testlib...
+break _insert
Breakpoint 1 at 0xfebba: file /home/david/Programming/cpp_dev/MrText/src/NewRope.cpp, line 35.
+run
Starting program: /home/david/Programming/cpp_dev/MrText/build/tests/testlib 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/usr/lib64/libthread_db.so.1".

Breakpoint 1, NewRope::_insert (this=0x7fffffffc978, node=std::unique_ptr<RopeNode> = {...}, str="Hello ") at /home/david/Programming/cpp_dev/MrText/src/NewRope.cpp:35
+print *this
$1 = {
  root_node = std::unique_ptr<RopeNode> = {
    get() = 0x0
  }
}
+quit
Reading symbols from ./build/tests/testlib...
+break NewRope
Breakpoint 1 at 0xfea58: file /home/david/Programming/cpp_dev/MrText/src/NewRope.cpp, line 20.
+run
Starting program: /home/david/Programming/cpp_dev/MrText/build/tests/testlib 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/usr/lib64/libthread_db.so.1".

Breakpoint 1, NewRope::NewRope (this=0x7fffffffc978) at /home/david/Programming/cpp_dev/MrText/src/NewRope.cpp:20
+n
+n
+n
+n
____C_A_T_C_H____T_E_S_T____8 () at /home/david/Programming/cpp_dev/MrText/tests/testlib.cpp:91
+n
+n
+s
NewRope::insert (this=0x7fffffffc978, str="Hello ") at /home/david/Programming/cpp_dev/MrText/src/NewRope.cpp:72
+s
std::unique_ptr<RopeNode, std::default_delete<RopeNode> >::unique_ptr (this=0x7fffffffc7c8) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/unique_ptr.h:360
+n
NewRope::insert (this=0x7fffffffc978, str="Hello ") at /home/david/Programming/cpp_dev/MrText/src/NewRope.cpp:73
+print *this
$1 = {
  root_node = std::unique_ptr<RopeNode> = {
    get() = 0x5555556d3e60
  }
}
+n
____C_A_T_C_H____T_E_S_T____8 () at /home/david/Programming/cpp_dev/MrText/tests/testlib.cpp:94
+n
+s
NewRope::print (this=0x7fffffffc978) at /home/david/Programming/cpp_dev/MrText/src/NewRope.cpp:76
+print *this
$2 = {
  root_node = std::unique_ptr<RopeNode> = {
    get() = 0x5555556d3e60
  }
}
+s
NewRope::_print (this=0x7fffffffc978, node=std::unique_ptr<RopeNode> = {...}) at /home/david/Programming/cpp_dev/MrText/src/NewRope.cpp:48
+backtrace full
#0  NewRope::_print (this=0x7fffffffc978, node=std::unique_ptr<RopeNode> = {...}) at /home/david/Programming/cpp_dev/MrText/src/NewRope.cpp:48
No locals.
#1  0x000055555565311c in NewRope::print (this=0x7fffffffc978) at /home/david/Programming/cpp_dev/MrText/src/NewRope.cpp:76
No locals.
#2  0x000055555559cfcc in ____C_A_T_C_H____T_E_S_T____8 () at /home/david/Programming/cpp_dev/MrText/tests/testlib.cpp:95
        test_buffer = {
          temp_buffer = Python Exception <class 'IndexError'>: list index out of range
<incomplete type>,
          backup_buffer = 0x7ffff7f9cd60
        }
        rope = {
          root_node = std::unique_ptr<RopeNode> = {
            get() = 0x5555556d3e60
          }
        }
        one = "Hello "
        two = "world!"
#3  0x0000555555585917 in Catch::TestInvokerAsFunction::invoke (this=0x5555556d1f10) at /home/david/Programming/cpp_dev/MrText/build/_deps/catch-src/single_include/catch2/catch.hpp:14317
No locals.
#4  0x000055555557f4d8 in Catch::TestCase::invoke (this=0x5555556f1150) at /home/david/Programming/cpp_dev/MrText/build/_deps/catch-src/single_include/catch2/catch.hpp:14156
No locals.
#5  0x000055555557f3e2 in Catch::RunContext::invokeActiveTestCase (this=0x7fffffffd3f0) at /home/david/Programming/cpp_dev/MrText/build/_deps/catch-src/single_include/catch2/catch.hpp:13016
        _ = {
          m_handler = 0x7fffffffd5d8
        }
#6  0x000055555557deb5 in Catch::RunContext::runCurrentTest (this=0x7fffffffd3f0, redirectedCout="", redirectedCerr="") at /home/david/Programming/cpp_dev/MrText/build/_deps/catch-src/single_include/catch2/catch.hpp:12989
        testCaseInfo = @0x5555556f1150: {
          name = "Binary Tree Rope Practice.",
          className = "",
          description = "",
          tags = std::vector of length 1, capacity 1 = {"main"},
          lcaseTags = std::vector of length 1, capacity 1 = {"main"},
          lineInfo = {
            file = 0x555555657083 "/home/david/Programming/cpp_dev/MrText/tests/testlib.cpp",
            line = 87
          },
          properties = Catch::TestCaseInfo::None
        }
        testCaseSection = {
          name = "Binary Tree Rope Practice.",
          description = "",
          lineInfo = {
            file = 0x555555657083 "/home/david/Programming/cpp_dev/MrText/tests/testlib.cpp",
            line = 87
          }
        }
        prevAssertions = {
          passed = 26,
          failed = 0,
          failedButOk = 0
        }
        duration = 0
        timer = {
          m_nanoseconds = 1732509435428185068
        }
        assertions = {
          passed = 0,
          failed = 0,
          failedButOk = 140737488342544
        }
        missingAssertions = false
        testCaseSectionStats = {
          _vptr$SectionStats = 0x7fffffffd9a8,
          sectionInfo = {
            name = "\340\316\377\377\377\177\000\000\344\362[UUU\000\000X\321\377\377\377\177\000\000X\321\377\377\377\177\000\000\032\000\000\000\000\000\000\000X\321\377\377\377\177\000\000\033\000\000\000\000\000\000\000\200+mUUU\000\000X\321\377\377\377\177\000\000\033\000\000\000\000\000\000\000\200+mUUU\000\000X\321\377\377\377\177\000\000\000\317\377\377\377\177\000\000\200+mUUU\000\000\032\000\000\000\000\000\000\000\032\000\000\000\000\000\000\000 \317\377\377\377\177\000\000\030\317\377\377\377\177", '\000' <repeats 11 times>, "\321\377\377\377\177\000\000@\317\377\377\377\177\000\000\203peUUU\000\000W\000\000\000\000\000\000\000\000E\a1\2634,6\320\321\377\377\377\177\000\000"...,
            description = "",
            lineInfo = {
              file = 0x7fffffffd158 "\200+mUUU",
              line = 140737488343384
            }
          },
          assertions = {
            passed = 26,
            failed = 140737488343384,
            failedButOk = 27
          },
          durationInSeconds = 4.635570615737365e-310,
          missingAssertions = 88
        }
#7  0x000055555557d21d in Catch::RunContext::runTest (this=0x7fffffffd3f0, testCase=...) at /home/david/Programming/cpp_dev/MrText/build/_deps/catch-src/single_include/catch2/catch.hpp:12750
        prevTotals = {
          error = 0,
          assertions = {
            passed = 26,
            failed = 0,
            failedButOk = 0
          },
          testCases = {
            passed = 4,
            failed = 0,
            failedButOk = 0
          }
        }
        redirectedCout = ""
        redirectedCerr = ""
        testInfo = @0x5555556f1150: {
          name = "Binary Tree Rope Practice.",
          className = "",
          description = "",
          tags = std::vector of length 1, capacity 1 = {"main"},
          lcaseTags = std::vector of length 1, capacity 1 = {"main"},
          lineInfo = {
            file = 0x555555657083 "/home/david/Programming/cpp_dev/MrText/tests/testlib.cpp",
            line = 87
          },
          properties = Catch::TestCaseInfo::None
        }
        rootTracker = @0x5555556d1770: {
          _vptr$ITracker = 0x5555556b9bc0 <vtable for Catch::TestCaseTracking::SectionTracker+16>,
          m_nameAndLocation = {
            name = "{root}",
            location = {
              file = 0x555555655fb9 "/home/david/Programming/cpp_dev/MrText/build/_deps/catch-src/single_include/catch2/catch.hpp",
              line = 14359
            }
          }
        }
        deltaTotals = {
          error = 0,
          assertions = {
            passed = 1,
            failed = 0,
            failedButOk = 0
          },
          testCases = {
            passed = 1,
            failed = 0,
            failedButOk = 0
          }
        }
#8  0x0000555555581fff in Catch::(anonymous namespace)::TestGroup::execute (this=0x7fffffffd3e0) at /home/david/Programming/cpp_dev/MrText/build/_deps/catch-src/single_include/catch2/catch.hpp:13343
        testCase = @0x5555556e1460: 0x5555556f1150
        __range2 = std::set with 5 elements = {
          [0] = 0x5555556f0e70,
          [1] = 0x5555556f0f28,
          [2] = 0x5555556f0fe0,
          [3] = 0x5555556f1098,
          [4] = 0x5555556f1150
        }
        __begin2 = 0x5555556f1150
        __end2 = 0x5
        invalidArgs = std::vector of length 0, capacity 0
        totals = {
          error = 0,
          assertions = {
            passed = 26,
            failed = 0,
            failedButOk = 0
          },
          testCases = {
            passed = 4,
            failed = 0,
            failedButOk = 0
          }
        }
#9  0x000055555558154f in Catch::Session::runInternal (this=0x7fffffffd6f8) at /home/david/Programming/cpp_dev/MrText/build/_deps/catch-src/single_include/catch2/catch.hpp:13549
        tests = {
          m_config = std::shared_ptr<Catch::Config> (use count 5, weak count 0) = {
            get() = 0x5555556d3130
          },
          m_context = {
            <Catch::IResultCapture> = {
              _vptr$IResultCapture = 0x5555556b9900 <vtable for Catch::RunContext+16>
            }, 
            <Catch::IRunner> = {
              _vptr$IRunner = 0x5555556b99c0 <vtable for Catch::RunContext+208>
            }, 
            members of Catch::RunContext:
            m_runInfo = {
              name = "testlib"
            },
            m_context = @0x5555556f0c00,
            m_activeTestCase = 0x5555556f1150,
            m_testCaseTracker = 0x5555556d2ce0,
            m_lastResult = {
              nullableValue = 0x0,
              storage = "H\326\377\377\377\177\000\000 \326\377\377\377\177\000\000p\324\377\377\377\177\000\000m\016\\UUU\000\000H\326\377\377\377\177\000\000\b\326\377\377\377\177\000\000\220\324\377\377\377\177\000\000\202\020\\UUU\000\000\b\326\377\377\377\177\000\000\b\326\377\377\377\177\000\000\260\324\377\377\377\177\000\000hO[UUU\000\000\b\326\377\377\377\177\000\000\b\326\377\377\377\177\000\000p\326\377\377\377\177\000\000)\022XUUU\000\000` mUUU\000\000\300\023mUUU\000"
            },
            m_config = std::shared_ptr<const Catch::IConfig> (use count 5, weak count 0) = {
              get() = 0x5555556d3130
            },
            m_totals = {
              error = 0,
              assertions = {
                passed = 26,
                failed = 0,
                failedButOk = 0
              },
              testCases = {
                passed = 4,
                failed = 0,
                failedButOk = 0
              }
            },
            m_reporter = std::unique_ptr<Catch::IStreamingReporter> = {
              get() = 0x5555556d1900
            },
            m_messages = std::vector of length 0, capacity 0,
            m_messageScopes = std::vector of length 0, capacity 0,
            m_lastAssertionInfo = {
              macroName = {
                static s_empty = <optimized out>,
                m_start = 0x5555556565f2 "TEST_CASE",
                m_size = 9
              },
              lineInfo = {
                file = 0x555555657083 "/home/david/Programming/cpp_dev/MrText/tests/testlib.cpp",
                line = 87
              },
              capturedExpression = {
                static s_empty = <optimized out>,
                m_start = 0x555555659540 "",
                m_size = 0
              },
              resultDisposition = Catch::ResultDisposition::Normal
            },
            m_unfinishedSections = std::vector of length 0, capacity 0,
            m_activeSections = std::vector of length 0, capacity 0,
            m_trackerContext = {
              m_rootTracker = std::shared_ptr<Catch::TestCaseTracking::ITracker> (use count 1, weak count 0) = {
                get() = 0x5555556d1770
              },
              m_currentTracker = 0x5555556d2ce0,
              m_runState = Catch::TestCaseTracking::TrackerContext::Executing
            },
            m_fatalConditionhandler = {
              m_started = true
            },
            m_lastAssertionPassed = true,
            m_shouldReportUnexpected = true,
            m_includeSuccessfulResults = false
          },
          m_tests = std::set with 5 elements = {
            [0] = 0x5555556f0e70,
            [1] = 0x5555556f0f28,
            [2] = 0x5555556f0fe0,
            [3] = 0x5555556f1098,
            [4] = 0x5555556f1150
          },
          m_matches = std::vector of length 0, capacity 0
        }
        totals = {
          error = 0,
          assertions = {
            passed = 26,
            failed = 0,
            failedButOk = 0
          },
          testCases = {
            passed = 4,
            failed = 0,
            failedButOk = 0
          }
        }
        ex = @0x0: <incomplete type>
#10 0x0000555555581337 in Catch::Session::run (this=0x7fffffffd6f8) at /home/david/Programming/cpp_dev/MrText/build/_deps/catch-src/single_include/catch2/catch.hpp:13505
        exitCode = 0
#11 0x00005555555bd913 in Catch::Session::run<char> (this=0x7fffffffd6f8, argc=1, argv=0x7fffffffd9a8) at /home/david/Programming/cpp_dev/MrText/build/_deps/catch-src/single_include/catch2/catch.hpp:13227
        returnCode = 0
#12 0x0000555555599a4f in main (argc=1, argv=0x7fffffffd9a8) at /home/david/Programming/cpp_dev/MrText/build/_deps/catch-src/single_include/catch2/catch.hpp:17504
No locals.
+backtrace full
#0  NewRope::_print (this=0x7fffffffc978, node=std::unique_ptr<RopeNode> = {...}) at /home/david/Programming/cpp_dev/MrText/src/NewRope.cpp:48
No locals.
#1  0x000055555565311c in NewRope::print (this=0x7fffffffc978) at /home/david/Programming/cpp_dev/MrText/src/NewRope.cpp:76
No locals.
#2  0x000055555559cfcc in ____C_A_T_C_H____T_E_S_T____8 () at /home/david/Programming/cpp_dev/MrText/tests/testlib.cpp:95
        test_buffer = {
          temp_buffer = Python Exception <class 'IndexError'>: list index out of range
<incomplete type>,
          backup_buffer = 0x7ffff7f9cd60
        }
        rope = {
          root_node = std::unique_ptr<RopeNode> = {
            get() = 0x5555556d3e60
          }
        }
        one = "Hello "
        two = "world!"
#3  0x0000555555585917 in Catch::TestInvokerAsFunction::invoke (this=0x5555556d1f10) at /home/david/Programming/cpp_dev/MrText/build/_deps/catch-src/single_include/catch2/catch.hpp:14317
No locals.
#4  0x000055555557f4d8 in Catch::TestCase::invoke (this=0x5555556f1150) at /home/david/Programming/cpp_dev/MrText/build/_deps/catch-src/single_include/catch2/catch.hpp:14156
No locals.
#5  0x000055555557f3e2 in Catch::RunContext::invokeActiveTestCase (this=0x7fffffffd3f0) at /home/david/Programming/cpp_dev/MrText/build/_deps/catch-src/single_include/catch2/catch.hpp:13016
        _ = {
          m_handler = 0x7fffffffd5d8
        }
#6  0x000055555557deb5 in Catch::RunContext::runCurrentTest (this=0x7fffffffd3f0, redirectedCout="", redirectedCerr="") at /home/david/Programming/cpp_dev/MrText/build/_deps/catch-src/single_include/catch2/catch.hpp:12989
        testCaseInfo = @0x5555556f1150: {
          name = "Binary Tree Rope Practice.",
          className = "",
          description = "",
          tags = std::vector of length 1, capacity 1 = {"main"},
          lcaseTags = std::vector of length 1, capacity 1 = {"main"},
          lineInfo = {
            file = 0x555555657083 "/home/david/Programming/cpp_dev/MrText/tests/testlib.cpp",
            line = 87
          },
          properties = Catch::TestCaseInfo::None
        }
        testCaseSection = {
          name = "Binary Tree Rope Practice.",
          description = "",
          lineInfo = {
            file = 0x555555657083 "/home/david/Programming/cpp_dev/MrText/tests/testlib.cpp",
            line = 87
          }
        }
        prevAssertions = {
          passed = 26,
          failed = 0,
          failedButOk = 0
        }
        duration = 0
        timer = {
          m_nanoseconds = 1732509435428185068
        }
        assertions = {
          passed = 0,
          failed = 0,
          failedButOk = 140737488342544
        }
        missingAssertions = false
        testCaseSectionStats = {
          _vptr$SectionStats = 0x7fffffffd9a8,
          sectionInfo = {
            name = "\340\316\377\377\377\177\000\000\344\362[UUU\000\000X\321\377\377\377\177\000\000X\321\377\377\377\177\000\000\032\000\000\000\000\000\000\000X\321\377\377\377\177\000\000\033\000\000\000\000\000\000\000\200+mUUU\000\000X\321\377\377\377\177\000\000\033\000\000\000\000\000\000\000\200+mUUU\000\000X\321\377\377\377\177\000\000\000\317\377\377\377\177\000\000\200+mUUU\000\000\032\000\000\000\000\000\000\000\032\000\000\000\000\000\000\000 \317\377\377\377\177\000\000\030\317\377\377\377\177", '\000' <repeats 11 times>, "\321\377\377\377\177\000\000@\317\377\377\377\177\000\000\203peUUU\000\000W\000\000\000\000\000\000\000\000E\a1\2634,6\320\321\377\377\377\177\000\000"...,
            description = "",
            lineInfo = {
              file = 0x7fffffffd158 "\200+mUUU",
              line = 140737488343384
            }
          },
          assertions = {
            passed = 26,
            failed = 140737488343384,
            failedButOk = 27
          },
          durationInSeconds = 4.635570615737365e-310,
          missingAssertions = 88
        }
#7  0x000055555557d21d in Catch::RunContext::runTest (this=0x7fffffffd3f0, testCase=...) at /home/david/Programming/cpp_dev/MrText/build/_deps/catch-src/single_include/catch2/catch.hpp:12750
        prevTotals = {
          error = 0,
          assertions = {
            passed = 26,
            failed = 0,
            failedButOk = 0
          },
          testCases = {
            passed = 4,
            failed = 0,
            failedButOk = 0
          }
        }
        redirectedCout = ""
        redirectedCerr = ""
        testInfo = @0x5555556f1150: {
          name = "Binary Tree Rope Practice.",
          className = "",
          description = "",
          tags = std::vector of length 1, capacity 1 = {"main"},
          lcaseTags = std::vector of length 1, capacity 1 = {"main"},
          lineInfo = {
            file = 0x555555657083 "/home/david/Programming/cpp_dev/MrText/tests/testlib.cpp",
            line = 87
          },
          properties = Catch::TestCaseInfo::None
        }
        rootTracker = @0x5555556d1770: {
          _vptr$ITracker = 0x5555556b9bc0 <vtable for Catch::TestCaseTracking::SectionTracker+16>,
          m_nameAndLocation = {
            name = "{root}",
            location = {
              file = 0x555555655fb9 "/home/david/Programming/cpp_dev/MrText/build/_deps/catch-src/single_include/catch2/catch.hpp",
              line = 14359
            }
          }
        }
        deltaTotals = {
          error = 0,
          assertions = {
            passed = 1,
            failed = 0,
            failedButOk = 0
          },
          testCases = {
            passed = 1,
            failed = 0,
            failedButOk = 0
          }
        }
#8  0x0000555555581fff in Catch::(anonymous namespace)::TestGroup::execute (this=0x7fffffffd3e0) at /home/david/Programming/cpp_dev/MrText/build/_deps/catch-src/single_include/catch2/catch.hpp:13343
        testCase = @0x5555556e1460: 0x5555556f1150
        __range2 = std::set with 5 elements = {
          [0] = 0x5555556f0e70,
          [1] = 0x5555556f0f28,
          [2] = 0x5555556f0fe0,
          [3] = 0x5555556f1098,
          [4] = 0x5555556f1150
        }
        __begin2 = 0x5555556f1150
        __end2 = 0x5
        invalidArgs = std::vector of length 0, capacity 0
        totals = {
          error = 0,
          assertions = {
            passed = 26,
            failed = 0,
            failedButOk = 0
          },
          testCases = {
            passed = 4,
            failed = 0,
            failedButOk = 0
          }
        }
#9  0x000055555558154f in Catch::Session::runInternal (this=0x7fffffffd6f8) at /home/david/Programming/cpp_dev/MrText/build/_deps/catch-src/single_include/catch2/catch.hpp:13549
        tests = {
          m_config = std::shared_ptr<Catch::Config> (use count 5, weak count 0) = {
            get() = 0x5555556d3130
          },
          m_context = {
            <Catch::IResultCapture> = {
              _vptr$IResultCapture = 0x5555556b9900 <vtable for Catch::RunContext+16>
            }, 
            <Catch::IRunner> = {
              _vptr$IRunner = 0x5555556b99c0 <vtable for Catch::RunContext+208>
            }, 
            members of Catch::RunContext:
            m_runInfo = {
              name = "testlib"
            },
            m_context = @0x5555556f0c00,
            m_activeTestCase = 0x5555556f1150,
            m_testCaseTracker = 0x5555556d2ce0,
            m_lastResult = {
              nullableValue = 0x0,
              storage = "H\326\377\377\377\177\000\000 \326\377\377\377\177\000\000p\324\377\377\377\177\000\000m\016\\UUU\000\000H\326\377\377\377\177\000\000\b\326\377\377\377\177\000\000\220\324\377\377\377\177\000\000\202\020\\UUU\000\000\b\326\377\377\377\177\000\000\b\326\377\377\377\177\000\000\260\324\377\377\377\177\000\000hO[UUU\000\000\b\326\377\377\377\177\000\000\b\326\377\377\377\177\000\000p\326\377\377\377\177\000\000)\022XUUU\000\000` mUUU\000\000\300\023mUUU\000"
            },
            m_config = std::shared_ptr<const Catch::IConfig> (use count 5, weak count 0) = {
              get() = 0x5555556d3130
            },
            m_totals = {
              error = 0,
              assertions = {
                passed = 26,
                failed = 0,
                failedButOk = 0
              },
              testCases = {
                passed = 4,
                failed = 0,
                failedButOk = 0
              }
            },
            m_reporter = std::unique_ptr<Catch::IStreamingReporter> = {
              get() = 0x5555556d1900
            },
            m_messages = std::vector of length 0, capacity 0,
            m_messageScopes = std::vector of length 0, capacity 0,
            m_lastAssertionInfo = {
              macroName = {
                static s_empty = <optimized out>,
                m_start = 0x5555556565f2 "TEST_CASE",
                m_size = 9
              },
              lineInfo = {
                file = 0x555555657083 "/home/david/Programming/cpp_dev/MrText/tests/testlib.cpp",
                line = 87
              },
              capturedExpression = {
                static s_empty = <optimized out>,
                m_start = 0x555555659540 "",
                m_size = 0
              },
              resultDisposition = Catch::ResultDisposition::Normal
            },
            m_unfinishedSections = std::vector of length 0, capacity 0,
            m_activeSections = std::vector of length 0, capacity 0,
            m_trackerContext = {
              m_rootTracker = std::shared_ptr<Catch::TestCaseTracking::ITracker> (use count 1, weak count 0) = {
                get() = 0x5555556d1770
              },
              m_currentTracker = 0x5555556d2ce0,
              m_runState = Catch::TestCaseTracking::TrackerContext::Executing
            },
            m_fatalConditionhandler = {
              m_started = true
            },
            m_lastAssertionPassed = true,
            m_shouldReportUnexpected = true,
            m_includeSuccessfulResults = false
          },
          m_tests = std::set with 5 elements = {
            [0] = 0x5555556f0e70,
            [1] = 0x5555556f0f28,
            [2] = 0x5555556f0fe0,
            [3] = 0x5555556f1098,
            [4] = 0x5555556f1150
          },
          m_matches = std::vector of length 0, capacity 0
        }
        totals = {
          error = 0,
          assertions = {
            passed = 26,
            failed = 0,
            failedButOk = 0
          },
          testCases = {
            passed = 4,
            failed = 0,
            failedButOk = 0
          }
        }
        ex = @0x0: <incomplete type>
#10 0x0000555555581337 in Catch::Session::run (this=0x7fffffffd6f8) at /home/david/Programming/cpp_dev/MrText/build/_deps/catch-src/single_include/catch2/catch.hpp:13505
        exitCode = 0
#11 0x00005555555bd913 in Catch::Session::run<char> (this=0x7fffffffd6f8, argc=1, argv=0x7fffffffd9a8) at /home/david/Programming/cpp_dev/MrText/build/_deps/catch-src/single_include/catch2/catch.hpp:13227
        returnCode = 0
#12 0x0000555555599a4f in main (argc=1, argv=0x7fffffffd9a8) at /home/david/Programming/cpp_dev/MrText/build/_deps/catch-src/single_include/catch2/catch.hpp:17504
No locals.
+n
+print *this
$3 = {
  root_node = std::unique_ptr<RopeNode> = {
    get() = 0x5555556d3e60
  }
}
+n
+n
+print *this
$4 = {
  root_node = std::unique_ptr<RopeNode> = {
    get() = 0x5555556d3e60
  }
}
+n
+n
NewRope::print (this=0x7fffffffc978) at /home/david/Programming/cpp_dev/MrText/src/NewRope.cpp:77
+n
+n
____C_A_T_C_H____T_E_S_T____8 () at /home/david/Programming/cpp_dev/MrText/tests/testlib.cpp:97
+n
+s
operator"" _catch_sr(char const*, unsigned long) (rawChars=0x555555658369 "REQUIRE", size=7) at /home/david/Programming/cpp_dev/MrText/build/_deps/catch-src/single_include/catch2/catch.hpp:684
+n
[Inferior 1 (process 16936) exited with code 01]
+print *this
No symbol "this" in current context.
+exit
Reading symbols from ./build/tests/testlib...
+break _insert
Breakpoint 1 at 0xfebba: file /home/david/Programming/cpp_dev/MrText/src/NewRope.cpp, line 35.
+run
Starting program: /home/david/Programming/cpp_dev/MrText/build/tests/testlib 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/usr/lib64/libthread_db.so.1".

Breakpoint 1, NewRope::_insert (this=0x7fffffffc978, node=std::unique_ptr<RopeNode> = {...}, str="Hello ") at /home/david/Programming/cpp_dev/MrText/src/NewRope.cpp:35
+n
+n
+n

Breakpoint 1, NewRope::_insert (this=0x7fffffffc978, node=std::unique_ptr<RopeNode> = {...}, str="Hello ") at /home/david/Programming/cpp_dev/MrText/src/NewRope.cpp:35
+print *this
$1 = {
  root_node = std::unique_ptr<RopeNode> = {
    get() = 0x0
  }
}
+exit
Reading symbols from ./build/tests/testlib...
+break NewRope
Breakpoint 1 at 0xfea58: file /home/david/Programming/cpp_dev/MrText/src/NewRope.cpp, line 20.
+run
Starting program: /home/david/Programming/cpp_dev/MrText/build/tests/testlib 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/usr/lib64/libthread_db.so.1".

Breakpoint 1, NewRope::NewRope (this=0x7fffffffc978) at /home/david/Programming/cpp_dev/MrText/src/NewRope.cpp:20
+print *this
$1 = {
  root_node = std::unique_ptr<RopeNode> = {
    get() = 0x7fffffffc9c0
  }
}
+n
+n
+n
+print *this
$2 = {
  root_node = std::unique_ptr<RopeNode> = {
    get() = 0x5555556d3e60
  }
}
+n
____C_A_T_C_H____T_E_S_T____8 () at /home/david/Programming/cpp_dev/MrText/tests/testlib.cpp:91
+n
+n
+s
NewRope::insert (this=0x7fffffffc978, str="Hello ") at /home/david/Programming/cpp_dev/MrText/src/NewRope.cpp:72
+print *this
$3 = {
  root_node = std::unique_ptr<RopeNode> = {
    get() = 0x5555556d3e60
  }
}
+n
+n
____C_A_T_C_H____T_E_S_T____8 () at /home/david/Programming/cpp_dev/MrText/tests/testlib.cpp:94
+s
NewRope::insert (this=0x7fffffffc978, str="world!") at /home/david/Programming/cpp_dev/MrText/src/NewRope.cpp:72
+print *this
$4 = {
  root_node = std::unique_ptr<RopeNode> = {
    get() = 0x5555556d3e60
  }
}
+n
+n
____C_A_T_C_H____T_E_S_T____8 () at /home/david/Programming/cpp_dev/MrText/tests/testlib.cpp:95
+print *this
No symbol "this" in current context.
+s
NewRope::print (this=0x7fffffffc978) at /home/david/Programming/cpp_dev/MrText/src/NewRope.cpp:76
+print *this
$5 = {
  root_node = std::unique_ptr<RopeNode> = {
    get() = 0x5555556d3e60
  }
}
+s
NewRope::_print (this=0x7fffffffc978, node=std::unique_ptr<RopeNode> = {...}) at /home/david/Programming/cpp_dev/MrText/src/NewRope.cpp:48
+print *this
$6 = {
  root_node = std::unique_ptr<RopeNode> = {
    get() = 0x5555556d3e60
  }
}
+n
+s
std::unique_ptr<RopeNode, std::default_delete<RopeNode> >::operator-> (this=0x7fffffffc978) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/unique_ptr.h:458
+print *this
$7 = std::unique_ptr<RopeNode> = {
  get() = 0x5555556d3e60
}
+n
NewRope::_print (this=0x7fffffffc978, node=std::unique_ptr<RopeNode> = {...}) at /home/david/Programming/cpp_dev/MrText/src/NewRope.cpp:50
+print *this
$8 = {
  root_node = std::unique_ptr<RopeNode> = {
    get() = 0x5555556d3e60
  }
}
+n
+s
std::unique_ptr<RopeNode, std::default_delete<RopeNode> >::operator-> (this=0x7fffffffc978) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/unique_ptr.h:458
+n
NewRope::_print (this=0x7fffffffc978, node=std::unique_ptr<RopeNode> = {...}) at /home/david/Programming/cpp_dev/MrText/src/NewRope.cpp:53
+print *this
$9 = {
  root_node = std::unique_ptr<RopeNode> = {
    get() = 0x5555556d3e60
  }
}
+print *node
$10 = {
  right = std::unique_ptr<RopeNode> = {
    get() = 0x5555556d4e90
  },
  left = std::unique_ptr<RopeNode> = {
    get() = 0x0
  },
  data = "",
  root_node = true,
  weight = 0
}
+n
NewRope::print (this=0x7fffffffc978) at /home/david/Programming/cpp_dev/MrText/src/NewRope.cpp:77
+n
+n
____C_A_T_C_H____T_E_S_T____8 () at /home/david/Programming/cpp_dev/MrText/tests/testlib.cpp:97
+s
operator"" _catch_sr(char const*, unsigned long) (rawChars=0x555555658369 "REQUIRE", size=7) at /home/david/Programming/cpp_dev/MrText/build/_deps/catch-src/single_include/catch2/catch.hpp:684
+n
____C_A_T_C_H____T_E_S_T____8 () at /home/david/Programming/cpp_dev/MrText/tests/testlib.cpp:98
+s
operator"" _catch_sr(char const*, unsigned long) (rawChars=0x555555658369 "REQUIRE", size=7) at /home/david/Programming/cpp_dev/MrText/build/_deps/catch-src/single_include/catch2/catch.hpp:684
+print *this
No symbol "this" in current context.
+print *rawChars
$11 = 82 'R'
+s
Catch::StringRef::StringRef (this=0x7fffffffc7c8, rawChars=0x555555658369 "REQUIRE", size=7) at /home/david/Programming/cpp_dev/MrText/build/_deps/catch-src/single_include/catch2/catch.hpp:622
+print *this
$12 = {
  static s_empty = <optimized out>,
  m_start = 0x555555658369 "REQUIRE",
  m_size = 140737488341456
}
+s
+s
Catch::SourceLineInfo::SourceLineInfo (this=0x7fffffffc8e0, _file=0x555555657083 "/home/david/Programming/cpp_dev/MrText/tests/testlib.cpp", _line=98) at /home/david/Programming/cpp_dev/MrText/build/_deps/catch-src/single_include/catch2/catch.hpp:505
+s
+s
Catch::StringRef::StringRef (this=0x7fffffffc8d0, rawChars=0x55555565861f "rope[0] == 'H'") at /home/david/Programming/cpp_dev/MrText/build/_deps/catch-src/single_include/catch2/catch.hpp:13902
+print *this
$13 = {
  static s_empty = <optimized out>,
  m_start = 0x55555565861f "rope[0] == 'H'",
  m_size = 14
}
+s
Catch::AssertionHandler::AssertionHandler (this=0x7fffffffc988, macroName=..., lineInfo=..., capturedExpression=..., resultDisposition=Catch::ResultDisposition::Normal) at /home/david/Programming/cpp_dev/MrText/build/_deps/catch-src/single_include/catch2/catch.hpp:8217
+print *this
$14 = {
  m_assertionInfo = {
    macroName = {
      static s_empty = <optimized out>,
      m_start = 0x555555658369 "REQUIRE",
      m_size = 7
    },
    lineInfo = {
      file = 0x555555657083 "/home/david/Programming/cpp_dev/MrText/tests/testlib.cpp",
      line = 98
    },
    capturedExpression = {
      static s_empty = <optimized out>,
      m_start = 0x55555565861f "rope[0] == 'H'",
      m_size = 14
    },
    resultDisposition = Catch::ResultDisposition::Normal
  },
  m_reaction = {
    shouldDebugBreak = false,
    shouldThrow = false
  },
  m_completed = false,
  m_resultCapture = @0x5555556e5820
}
+n
+n
[Inferior 1 (process 17046) exited with code 01]
+info locals
No frame selected.
+print *this
No symbol "this" in current context.
+n
The program is not being run.
+break _index
Breakpoint 2 at 0x555555652e43: file /home/david/Programming/cpp_dev/MrText/src/NewRope.cpp, line 55.
+delete 
+break _index
Breakpoint 3 at 0x555555652e43: file /home/david/Programming/cpp_dev/MrText/src/NewRope.cpp, line 55.
+run
Starting program: /home/david/Programming/cpp_dev/MrText/build/tests/testlib 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/usr/lib64/libthread_db.so.1".

Breakpoint 3, NewRope::_index (this=0x7fffffffc978, node=std::unique_ptr<RopeNode> = {...}, idx=0) at /home/david/Programming/cpp_dev/MrText/src/NewRope.cpp:55
+print *this
$15 = {
  root_node = std::unique_ptr<RopeNode> = {
    get() = 0x5555556d3e60
  }
}
+print *node
$16 = {
  right = std::unique_ptr<RopeNode> = {
    get() = 0x5555556d4e90
  },
  left = std::unique_ptr<RopeNode> = {
    get() = 0x0
  },
  data = "",
  root_node = true,
  weight = 0
}
+print *node->right
$17 = {
  right = std::unique_ptr<RopeNode> = {
    get() = 0x5555556ddee0
  },
  left = std::unique_ptr<RopeNode> = {
    get() = 0x0
  },
  data = "Hello ",
  root_node = false,
  weight = 6
}
+print *node->right->right
$18 = {
  right = std::unique_ptr<RopeNode> = {
    get() = 0x0
  },
  left = std::unique_ptr<RopeNode> = {
    get() = 0x0
  },
  data = "world!",
  root_node = false,
  weight = 6
}
+exit
Reading symbols from ./build/tests/testlib...
+break _index
Breakpoint 1 at 0xfee43: file /home/david/Programming/cpp_dev/MrText/src/NewRope.cpp, line 57.
+print *this
No symbol "this" in current context.
+run
Starting program: /home/david/Programming/cpp_dev/MrText/build/tests/testlib 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/usr/lib64/libthread_db.so.1".

Breakpoint 1, NewRope::_index (this=0x7fffffffc978, node=std::unique_ptr<RopeNode> = {...}, idx=0) at /home/david/Programming/cpp_dev/MrText/src/NewRope.cpp:57
+print *node
$1 = {
  right = std::unique_ptr<RopeNode> = {
    get() = 0x5555556d4e90
  },
  left = std::unique_ptr<RopeNode> = {
    get() = 0x0
  },
  data = "",
  root_node = true,
  weight = 0
}
+print *node->right.data
There is no member or method named data.
+print *node->right->data
No symbol "operator*" in current context.
+print *node->right
$2 = {
  right = std::unique_ptr<RopeNode> = {
    get() = 0x5555556ddee0
  },
  left = std::unique_ptr<RopeNode> = {
    get() = 0x0
  },
  data = "Hello ",
  root_node = false,
  weight = 6
}
+print *node->right->right
$3 = {
  right = std::unique_ptr<RopeNode> = {
    get() = 0x0
  },
  left = std::unique_ptr<RopeNode> = {
    get() = 0x0
  },
  data = "world!",
  root_node = false,
  weight = 6
}
+print *node
$4 = {
  right = std::unique_ptr<RopeNode> = {
    get() = 0x5555556d4e90
  },
  left = std::unique_ptr<RopeNode> = {
    get() = 0x0
  },
  data = "",
  root_node = true,
  weight = 0
}
+exir
Undefined command: "exir".  Try "help".
+exit
Reading symbols from ./build/tests/testlib...
+break _index
Breakpoint 1 at 0xfeddf: file /home/david/Programming/cpp_dev/MrText/src/NewRope.cpp, line 45.
+run
Starting program: /home/david/Programming/cpp_dev/MrText/build/tests/testlib 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/usr/lib64/libthread_db.so.1".

Breakpoint 1, NewRope::_index[abi:cxx11](std::unique_ptr<RopeNode, std::default_delete<RopeNode> > const&, unsigned long) const (this=0x7fffffffc958, node=std::unique_ptr<RopeNode> = {...}, idx=0) at /home/david/Programming/cpp_dev/MrText/src/NewRope.cpp:45
+s
std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string (this=0x7fffffffca18) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/basic_string.h:532
+n
+n
NewRope::_index[abi:cxx11](std::unique_ptr<RopeNode, std::default_delete<RopeNode> > const&, unsigned long) const (this=0x7fffffffc958, node=std::unique_ptr<RopeNode> = {...}, idx=0) at /home/david/Programming/cpp_dev/MrText/src/NewRope.cpp:50
+print *node
$1 = {
  right = std::unique_ptr<RopeNode> = {
    get() = 0x0
  },
  left = std::unique_ptr<RopeNode> = {
    get() = 0x5555556d4e90
  },
  data = "Hello ",
  root_node = false,
  weight = 12
}
+s
std::unique_ptr<RopeNode, std::default_delete<RopeNode> >::operator-> (this=0x7fffffffc958) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/unique_ptr.h:458
+n
NewRope::_index[abi:cxx11](std::unique_ptr<RopeNode, std::default_delete<RopeNode> > const&, unsigned long) const (this=0x7fffffffc958, node=std::unique_ptr<RopeNode> = {...}, idx=0) at /home/david/Programming/cpp_dev/MrText/src/NewRope.cpp:51
+s
std::unique_ptr<RopeNode, std::default_delete<RopeNode> >::operator-> (this=0x7fffffffc958) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/unique_ptr.h:458
+n

Breakpoint 1, NewRope::_index[abi:cxx11](std::unique_ptr<RopeNode, std::default_delete<RopeNode> > const&, unsigned long) const (this=0x7fffffffc958, node=std::unique_ptr<RopeNode> = {...}, idx=0) at /home/david/Programming/cpp_dev/MrText/src/NewRope.cpp:45
+frame info
No symbol "info" in current context.
+info frame
Stack level 0, frame at 0x7fffffffc6e0:
 rip = 0x555555652ddf in NewRope::_index[abi:cxx11](std::unique_ptr<RopeNode, std::default_delete<RopeNode> > const&, unsigned long) const (/home/david/Programming/cpp_dev/MrText/src/NewRope.cpp:45); saved rip = 0x555555652e27
 called by frame at 0x7fffffffc7a0
 source language c++.
 Arglist at 0x7fffffffc6d0, args: this=0x7fffffffc958, node=std::unique_ptr<RopeNode> = {...}, idx=0
 Locals at 0x7fffffffc6d0, Previous frame's sp is 0x7fffffffc6e0
 Saved registers:
  rbp at 0x7fffffffc6d0, rip at 0x7fffffffc6d8
+print *rip
No symbol "rip" in current context.
+print rip
No symbol "rip" in current context.
+print *this
$2 = {
  root_node = std::unique_ptr<RopeNode> = {
    get() = 0x5555556d3e60
  }
}
+print *node
$3 = {
  right = std::unique_ptr<RopeNode> = {
    get() = 0x0
  },
  left = std::unique_ptr<RopeNode> = {
    get() = 0x0
  },
  data = "world!",
  root_node = false,
  weight = 6
}
+n
+s
std::unique_ptr<RopeNode, std::default_delete<RopeNode> >::operator-> (this=0x5555556d3e68) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/unique_ptr.h:458
+n
NewRope::_index[abi:cxx11](std::unique_ptr<RopeNode, std::default_delete<RopeNode> > const&, unsigned long) const (this=0x7fffffffc958, node=std::unique_ptr<RopeNode> = {...}, idx=0) at /home/david/Programming/cpp_dev/MrText/src/NewRope.cpp:51
+s
std::unique_ptr<RopeNode, std::default_delete<RopeNode> >::operator-> (this=0x5555556d3e68) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/unique_ptr.h:458
+n

Breakpoint 1, NewRope::_index[abi:cxx11](std::unique_ptr<RopeNode, std::default_delete<RopeNode> > const&, unsigned long) const (this=0x7fffffffc958, node=std::unique_ptr<RopeNode> = {...}, idx=0) at /home/david/Programming/cpp_dev/MrText/src/NewRope.cpp:45
+print *node
Cannot access memory at address 0x0
+n
+s
std::unique_ptr<RopeNode, std::default_delete<RopeNode> >::operator-> (this=0x5555556d4e98) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/unique_ptr.h:458
+n

Program received signal SIGSEGV, Segmentation fault.
0x0000555555652e00 in NewRope::_index[abi:cxx11](std::unique_ptr<RopeNode, std::default_delete<RopeNode> > const&, unsigned long) const (this=0x7fffffffc958, node=std::unique_ptr<RopeNode> = {...}, idx=0) at /home/david/Programming/cpp_dev/MrText/src/NewRope.cpp:50
+s
Catch::handleSignal (sig=-781782726) at /home/david/Programming/cpp_dev/MrText/build/_deps/catch-src/single_include/catch2/catch.hpp:10896
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+quit
Reading symbols from ./build/tests/testlib...
+break _index
Breakpoint 1 at 0xfeddf: file /home/david/Programming/cpp_dev/MrText/src/NewRope.cpp, line 45.
+run
Starting program: /home/david/Programming/cpp_dev/MrText/build/tests/testlib 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/usr/lib64/libthread_db.so.1".

Breakpoint 1, NewRope::_index[abi:cxx11](std::unique_ptr<RopeNode, std::default_delete<RopeNode> > const&, unsigned long) const (this=0x7fffffffc958, node=std::unique_ptr<RopeNode> = {...}, idx=0) at /home/david/Programming/cpp_dev/MrText/src/NewRope.cpp:45
warning: Source file is more recent than executable.
+n
+s
std::unique_ptr<RopeNode, std::default_delete<RopeNode> >::operator-> (this=0x7fffffffc958) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/unique_ptr.h:458
+n
NewRope::_index[abi:cxx11](std::unique_ptr<RopeNode, std::default_delete<RopeNode> > const&, unsigned long) const (this=0x7fffffffc958, node=std::unique_ptr<RopeNode> = {...}, idx=0) at /home/david/Programming/cpp_dev/MrText/src/NewRope.cpp:51
+s
std::unique_ptr<RopeNode, std::default_delete<RopeNode> >::operator-> (this=0x7fffffffc958) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/unique_ptr.h:458
+n

Breakpoint 1, NewRope::_index[abi:cxx11](std::unique_ptr<RopeNode, std::default_delete<RopeNode> > const&, unsigned long) const (this=0x7fffffffc958, node=std::unique_ptr<RopeNode> = {...}, idx=0) at /home/david/Programming/cpp_dev/MrText/src/NewRope.cpp:45
+print *node
$1 = {
  right = std::unique_ptr<RopeNode> = {
    get() = 0x0
  },
  left = std::unique_ptr<RopeNode> = {
    get() = 0x0
  },
  data = "world!",
  root_node = false,
  weight = 6
}
+n
+s
std::unique_ptr<RopeNode, std::default_delete<RopeNode> >::operator-> (this=0x5555556d3e68) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/unique_ptr.h:458
+n
NewRope::_index[abi:cxx11](std::unique_ptr<RopeNode, std::default_delete<RopeNode> > const&, unsigned long) const (this=0x7fffffffc958, node=std::unique_ptr<RopeNode> = {...}, idx=0) at /home/david/Programming/cpp_dev/MrText/src/NewRope.cpp:51
+s
std::unique_ptr<RopeNode, std::default_delete<RopeNode> >::operator-> (this=0x5555556d3e68) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/unique_ptr.h:458
+n

Breakpoint 1, NewRope::_index[abi:cxx11](std::unique_ptr<RopeNode, std::default_delete<RopeNode> > const&, unsigned long) const (this=0x7fffffffc958, node=std::unique_ptr<RopeNode> = {...}, idx=0) at /home/david/Programming/cpp_dev/MrText/src/NewRope.cpp:45
+exit
Reading symbols from ./build/tests/testlib...
+break _index
Breakpoint 1 at 0xfede8: file /home/david/Programming/cpp_dev/MrText/src/NewRope.cpp, line 45.
+run
Starting program: /home/david/Programming/cpp_dev/MrText/build/tests/testlib 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/usr/lib64/libthread_db.so.1".

Breakpoint 1, NewRope::_index[abi:cxx11](std::unique_ptr<RopeNode, std::default_delete<RopeNode> > const&, unsigned long) const (this=0x7fffffffc958, node=std::unique_ptr<RopeNode> = {...}, idx=0) at /home/david/Programming/cpp_dev/MrText/src/NewRope.cpp:45
+n
+s
std::unique_ptr<RopeNode, std::default_delete<RopeNode> >::operator-> (this=0x7fffffffc958) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/unique_ptr.h:458
+n
NewRope::_index[abi:cxx11](std::unique_ptr<RopeNode, std::default_delete<RopeNode> > const&, unsigned long) const (this=0x7fffffffc958, node=std::unique_ptr<RopeNode> = {...}, idx=0) at /home/david/Programming/cpp_dev/MrText/src/NewRope.cpp:51
+print *node
$1 = {
  right = std::unique_ptr<RopeNode> = {
    get() = 0x0
  },
  left = std::unique_ptr<RopeNode> = {
    get() = 0x5555556d4e90
  },
  data = "Hello ",
  root_node = false,
  weight = 12
}
+s
std::unique_ptr<RopeNode, std::default_delete<RopeNode> >::operator-> (this=0x7fffffffc958) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/unique_ptr.h:458
+n
NewRope::_index[abi:cxx11](std::unique_ptr<RopeNode, std::default_delete<RopeNode> > const&, unsigned long) const (this=0x7fffffffc958, node=std::unique_ptr<RopeNode> = {...}, idx=0) at /home/david/Programming/cpp_dev/MrText/src/NewRope.cpp:54
+s
std::unique_ptr<RopeNode, std::default_delete<RopeNode> >::operator-> (this=0x7fffffffc958) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/unique_ptr.h:458
+n

Breakpoint 1, NewRope::_index[abi:cxx11](std::unique_ptr<RopeNode, std::default_delete<RopeNode> > const&, unsigned long) const (this=0x7fffffffc958, node=std::unique_ptr<RopeNode> = {...}, idx=0) at /home/david/Programming/cpp_dev/MrText/src/NewRope.cpp:45
+n
+s
std::unique_ptr<RopeNode, std::default_delete<RopeNode> >::operator-> (this=0x5555556d3e68) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/unique_ptr.h:458
+n
NewRope::_index[abi:cxx11](std::unique_ptr<RopeNode, std::default_delete<RopeNode> > const&, unsigned long) const (this=0x7fffffffc958, node=std::unique_ptr<RopeNode> = {...}, idx=0) at /home/david/Programming/cpp_dev/MrText/src/NewRope.cpp:51
+s
std::unique_ptr<RopeNode, std::default_delete<RopeNode> >::operator-> (this=0x5555556d3e68) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/unique_ptr.h:458
+n
NewRope::_index[abi:cxx11](std::unique_ptr<RopeNode, std::default_delete<RopeNode> > const&, unsigned long) const (this=0x7fffffffc958, node=std::unique_ptr<RopeNode> = {...}, idx=0) at /home/david/Programming/cpp_dev/MrText/src/NewRope.cpp:52
+print *node
$2 = {
  right = std::unique_ptr<RopeNode> = {
    get() = 0x0
  },
  left = std::unique_ptr<RopeNode> = {
    get() = 0x0
  },
  data = "world!",
  root_node = false,
  weight = 6
}
+n
+n
+n
+n
+n
[Inferior 1 (process 171037) exited with code 01]
+exit
Reading symbols from ./build/tests/testlib...
+break _index
Breakpoint 1 at 0xfedcf: file /home/david/Programming/cpp_dev/MrText/src/NewRope.cpp, line 49.
+run
Starting program: /home/david/Programming/cpp_dev/MrText/build/tests/testlib 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/usr/lib64/libthread_db.so.1".

Breakpoint 1, NewRope::_index[abi:cxx11](std::unique_ptr<RopeNode, std::default_delete<RopeNode> > const&, unsigned long) const (this=0x7fffffffc958, node=std::unique_ptr<RopeNode> = {...}, idx=0) at /home/david/Programming/cpp_dev/MrText/src/NewRope.cpp:49
warning: Source file is more recent than executable.
+print idx
$1 = 0
+print node->weight
$2 = 12
+exit
Reading symbols from ./build/tests/testlib...
+break _index
Breakpoint 1 at 0xfedef: file /home/david/Programming/cpp_dev/MrText/src/NewRope.cpp, line 45.
+run
Starting program: /home/david/Programming/cpp_dev/MrText/build/tests/testlib 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/usr/lib64/libthread_db.so.1".

Breakpoint 1, NewRope::_index[abi:cxx11](std::unique_ptr<RopeNode, std::default_delete<RopeNode> > const&, unsigned long) const (this=0x7fffffffc958, node=std::unique_ptr<RopeNode> = {...}, idx=0) at /home/david/Programming/cpp_dev/MrText/src/NewRope.cpp:45
warning: Source file is more recent than executable.
warning: Error detected on fd 0
error detected on stdin
Reading symbols from ./build/tests/testlib...
+break _index
Breakpoint 1 at 0xfedef: file /home/david/Programming/cpp_dev/MrText/src/NewRope.cpp, line 45.
+run
Starting program: /home/david/Programming/cpp_dev/MrText/build/tests/testlib 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/usr/lib64/libthread_db.so.1".

Breakpoint 1, NewRope::_index[abi:cxx11](std::unique_ptr<RopeNode, std::default_delete<RopeNode> > const&, unsigned long) const (this=0x7fffffffc958, node=std::unique_ptr<RopeNode> = {...}, idx=0) at /home/david/Programming/cpp_dev/MrText/src/NewRope.cpp:45
warning: Source file is more recent than executable.
+n
+print idx
$1 = 0
+s
std::unique_ptr<RopeNode, std::default_delete<RopeNode> >::operator-> (this=0x7fffffffc958) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/unique_ptr.h:458
+n
NewRope::_index[abi:cxx11](std::unique_ptr<RopeNode, std::default_delete<RopeNode> > const&, unsigned long) const (this=0x7fffffffc958, node=std::unique_ptr<RopeNode> = {...}, idx=0) at /home/david/Programming/cpp_dev/MrText/src/NewRope.cpp:50
+s
std::unique_ptr<RopeNode, std::default_delete<RopeNode> >::operator-> (this=0x7fffffffc958) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/unique_ptr.h:458
+n
NewRope::_index[abi:cxx11](std::unique_ptr<RopeNode, std::default_delete<RopeNode> > const&, unsigned long) const (this=0x7fffffffc958, node=std::unique_ptr<RopeNode> = {...}, idx=0) at /home/david/Programming/cpp_dev/MrText/src/NewRope.cpp:53
+s
std::unique_ptr<RopeNode, std::default_delete<RopeNode> >::operator-> (this=0x7fffffffc958) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/unique_ptr.h:458
+n

Breakpoint 1, NewRope::_index[abi:cxx11](std::unique_ptr<RopeNode, std::default_delete<RopeNode> > const&, unsigned long) const (this=0x7fffffffc958, node=std::unique_ptr<RopeNode> = {...}, idx=0) at /home/david/Programming/cpp_dev/MrText/src/NewRope.cpp:45
+n
+s
std::unique_ptr<RopeNode, std::default_delete<RopeNode> >::operator-> (this=0x5555556d3e68) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/unique_ptr.h:458
+n
NewRope::_index[abi:cxx11](std::unique_ptr<RopeNode, std::default_delete<RopeNode> > const&, unsigned long) const (this=0x7fffffffc958, node=std::unique_ptr<RopeNode> = {...}, idx=0) at /home/david/Programming/cpp_dev/MrText/src/NewRope.cpp:50
+s
std::unique_ptr<RopeNode, std::default_delete<RopeNode> >::operator-> (this=0x5555556d3e68) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/unique_ptr.h:458
+n
NewRope::_index[abi:cxx11](std::unique_ptr<RopeNode, std::default_delete<RopeNode> > const&, unsigned long) const (this=0x7fffffffc958, node=std::unique_ptr<RopeNode> = {...}, idx=0) at /home/david/Programming/cpp_dev/MrText/src/NewRope.cpp:51
+print *node
$2 = {
  right = std::unique_ptr<RopeNode> = {
    get() = 0x0
  },
  left = std::unique_ptr<RopeNode> = {
    get() = 0x0
  },
  data = "world!",
  root_node = false,
  weight = 6
}
+exit
Reading symbols from ./build/tests/testlib...
+break _index
Breakpoint 1 at 0xfedef: file /home/david/Programming/cpp_dev/MrText/src/NewRope.cpp, line 45.
+run
Starting program: /home/david/Programming/cpp_dev/MrText/build/tests/testlib 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/usr/lib64/libthread_db.so.1".

Breakpoint 1, NewRope::_index[abi:cxx11](std::unique_ptr<RopeNode, std::default_delete<RopeNode> > const&, unsigned long) const (this=0x7fffffffc958, node=std::unique_ptr<RopeNode> = {...}, idx=0) at /home/david/Programming/cpp_dev/MrText/src/NewRope.cpp:45
+print *node
$1 = {
  right = std::unique_ptr<RopeNode> = {
    get() = 0x0
  },
  left = std::unique_ptr<RopeNode> = {
    get() = 0x5555556d4e90
  },
  data = "Hello ",
  root_node = false,
  weight = 12
}
+s
std::unique_ptr<RopeNode, std::default_delete<RopeNode> >::operator bool (this=0x7fffffffc958) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/unique_ptr.h:482
+exit
Reading symbols from ./build/tests/testlib...
+break _index
Breakpoint 1 at 0xfefcf: file /home/david/Programming/cpp_dev/MrText/src/NewRope.cpp, line 43.
+run
Starting program: /home/david/Programming/cpp_dev/MrText/build/tests/testlib 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/usr/lib64/libthread_db.so.1".

Breakpoint 1, NewRope::_index[abi:cxx11](std::unique_ptr<RopeNode, std::default_delete<RopeNode> > const&, unsigned long) const (this=0x7fffffffc8f0, node=std::unique_ptr<RopeNode> = {...}, idx=0) at /home/david/Programming/cpp_dev/MrText/src/NewRope.cpp:43
+print *this
$1 = {
  root_node = std::unique_ptr<RopeNode> = {
    get() = 0x5555556d3e60
  }
}
+print *this->root_node
$2 = {
  right = std::unique_ptr<RopeNode> = {
    get() = 0x0
  },
  left = std::unique_ptr<RopeNode> = {
    get() = 0x5555556d4e90
  },
  data = "Hello ",
  proot = std::unique_ptr<RopeNode> = {
    get() = 0x0
  },
  weight = 10
}
+n
+print *node
$3 = {
  right = std::unique_ptr<RopeNode> = {
    get() = 0x0
  },
  left = std::unique_ptr<RopeNode> = {
    get() = 0x5555556d4e90
  },
  data = "Hello ",
  proot = std::unique_ptr<RopeNode> = {
    get() = 0x0
  },
  weight = 10
}
+exit
Reading symbols from ./build/tests/testlib...
+break _index
Breakpoint 1 at 0xfefcf: file /home/david/Programming/cpp_dev/MrText/src/NewRope.cpp, line 43.
+run
Starting program: /home/david/Programming/cpp_dev/MrText/build/tests/testlib 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/usr/lib64/libthread_db.so.1".

Breakpoint 1, NewRope::_index[abi:cxx11](std::unique_ptr<RopeNode, std::default_delete<RopeNode> > const&, unsigned long) const (this=0x7fffffffc8f0, node=std::unique_ptr<RopeNode> = {...}, idx=0) at /home/david/Programming/cpp_dev/MrText/src/NewRope.cpp:43
+n
+print *node
$1 = {
  right = std::unique_ptr<RopeNode> = {
    get() = 0x0
  },
  left = std::unique_ptr<RopeNode> = {
    get() = 0x5555556d4e90
  },
  data = "Hello ",
  root_node = std::unique_ptr<RopeNode> = {
    get() = 0x0
  },
  weight = 10
}
+s
std::unique_ptr<RopeNode, std::default_delete<RopeNode> >::operator-> (this=0x7fffffffc8f0) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/unique_ptr.h:458
+n
NewRope::_index[abi:cxx11](std::unique_ptr<RopeNode, std::default_delete<RopeNode> > const&, unsigned long) const (this=0x7fffffffc8f0, node=std::unique_ptr<RopeNode> = {...}, idx=0) at /home/david/Programming/cpp_dev/MrText/src/NewRope.cpp:53
Quit
+quit
Reading symbols from ./build/tests/testlib...
+break _index
Breakpoint 1 at 0xfefcf: file /home/david/Programming/cpp_dev/MrText/src/NewRope.cpp, line 43.
+run
Starting program: /home/david/Programming/cpp_dev/MrText/build/tests/testlib 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/usr/lib64/libthread_db.so.1".

Breakpoint 1, NewRope::_index[abi:cxx11](std::unique_ptr<RopeNode, std::default_delete<RopeNode> > const&, unsigned long) const (this=0x7fffffffc8f0, node=std::unique_ptr<RopeNode> = {...}, idx=0) at /home/david/Programming/cpp_dev/MrText/src/NewRope.cpp:43
+n
+print *node
$1 = {
  right = std::unique_ptr<RopeNode> = {
    get() = 0x0
  },
  left = std::unique_ptr<RopeNode> = {
    get() = 0x5555556d4e90
  },
  data = "Hello ",
  root_node = std::unique_ptr<RopeNode> = {
    get() = 0x0
  },
  weight = 10
}
+s
std::unique_ptr<RopeNode, std::default_delete<RopeNode> >::operator-> (this=0x7fffffffc8f0) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/unique_ptr.h:458
+n
NewRope::_index[abi:cxx11](std::unique_ptr<RopeNode, std::default_delete<RopeNode> > const&, unsigned long) const (this=0x7fffffffc8f0, node=std::unique_ptr<RopeNode> = {...}, idx=0) at /home/david/Programming/cpp_dev/MrText/src/NewRope.cpp:48
+exit
Reading symbols from ./build/tests/testlib...
+break _index
Breakpoint 1 at 0xfefcf: file /home/david/Programming/cpp_dev/MrText/src/NewRope.cpp, line 43.
+run
Starting program: /home/david/Programming/cpp_dev/MrText/build/tests/testlib 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/usr/lib64/libthread_db.so.1".

Breakpoint 1, NewRope::_index[abi:cxx11](std::unique_ptr<RopeNode, std::default_delete<RopeNode> > const&, unsigned long) const (this=0x7fffffffc8f0, node=std::unique_ptr<RopeNode> = {...}, idx=0) at /home/david/Programming/cpp_dev/MrText/src/NewRope.cpp:43
warning: Error detected on fd 0
error detected on stdin
Reading symbols from ./build/tests/testlib...
+break _index
Breakpoint 1 at 0xfefcf: file /home/david/Programming/cpp_dev/MrText/src/NewRope.cpp, line 43.
+run
Starting program: /home/david/Programming/cpp_dev/MrText/build/tests/testlib 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/usr/lib64/libthread_db.so.1".

Breakpoint 1, NewRope::_index[abi:cxx11](std::unique_ptr<RopeNode, std::default_delete<RopeNode> > const&, unsigned long) const (this=0x7fffffffc8f0, node=std::unique_ptr<RopeNode> = {...}, idx=0) at /home/david/Programming/cpp_dev/MrText/src/NewRope.cpp:43
+n
+print *node
$1 = {
  right = std::unique_ptr<RopeNode> = {
    get() = 0x0
  },
  left = std::unique_ptr<RopeNode> = {
    get() = 0x5555556d4e90
  },
  data = "Hello ",
  root_node = std::unique_ptr<RopeNode> = {
    get() = 0x0
  },
  weight = 10
}
+s
std::unique_ptr<RopeNode, std::default_delete<RopeNode> >::operator-> (this=0x7fffffffc8f0) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/unique_ptr.h:458
+n
NewRope::_index[abi:cxx11](std::unique_ptr<RopeNode, std::default_delete<RopeNode> > const&, unsigned long) const (this=0x7fffffffc8f0, node=std::unique_ptr<RopeNode> = {...}, idx=0) at /home/david/Programming/cpp_dev/MrText/src/NewRope.cpp:49
+s
std::unique_ptr<RopeNode, std::default_delete<RopeNode> >::operator-> (this=0x7fffffffc8f0) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/unique_ptr.h:458
+n
NewRope::_index[abi:cxx11](std::unique_ptr<RopeNode, std::default_delete<RopeNode> > const&, unsigned long) const (this=0x7fffffffc8f0, node=std::unique_ptr<RopeNode> = {...}, idx=0) at /home/david/Programming/cpp_dev/MrText/src/NewRope.cpp:52
+s
std::unique_ptr<RopeNode, std::default_delete<RopeNode> >::operator-> (this=0x7fffffffc8f0) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/unique_ptr.h:458
+n
NewRope::_index[abi:cxx11](std::unique_ptr<RopeNode, std::default_delete<RopeNode> > const&, unsigned long) const (this=0x7fffffffc8f0, node=std::unique_ptr<RopeNode> = {...}, idx=0) at /home/david/Programming/cpp_dev/MrText/src/NewRope.cpp:54
+n
[Inferior 1 (process 172597) exited with code 01]
+exit
Reading symbols from ./build/tests/testlib...
+break _index
Breakpoint 1 at 0xfef80: file /home/david/Programming/cpp_dev/MrText/src/NewRope.cpp, line 43.
+run
Starting program: /home/david/Programming/cpp_dev/MrText/build/tests/testlib 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/usr/lib64/libthread_db.so.1".

Breakpoint 1, NewRope::_index (this=0x7fffffffc930, node=std::unique_ptr<RopeNode> = {...}, idx=0) at /home/david/Programming/cpp_dev/MrText/src/NewRope.cpp:43
+n
+print *this
$1 = {
  root_node = std::unique_ptr<RopeNode> = {
    get() = 0x5555556d3e60
  }
}
+print *node
$2 = {
  right = std::unique_ptr<RopeNode> = {
    get() = 0x0
  },
  left = std::unique_ptr<RopeNode> = {
    get() = 0x5555556d4e90
  },
  data = "Hello ",
  root_node = std::unique_ptr<RopeNode> = {
    get() = 0x0
  },
  weight = 10
}
+s
std::unique_ptr<RopeNode, std::default_delete<RopeNode> >::operator-> (this=0x7fffffffc930) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/unique_ptr.h:458
+n
NewRope::_index (this=0x7fffffffc930, node=std::unique_ptr<RopeNode> = {...}, idx=0) at /home/david/Programming/cpp_dev/MrText/src/NewRope.cpp:48
+s
std::unique_ptr<RopeNode, std::default_delete<RopeNode> >::operator-> (this=0x7fffffffc930) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/unique_ptr.h:458
+n
NewRope::_index (this=0x7fffffffc930, node=std::unique_ptr<RopeNode> = {...}, idx=0) at /home/david/Programming/cpp_dev/MrText/src/NewRope.cpp:49
+n

Breakpoint 1, NewRope::_index (this=0x7fffffffc930, node=std::unique_ptr<RopeNode> = {...}, idx=0) at /home/david/Programming/cpp_dev/MrText/src/NewRope.cpp:43
+print *node
$3 = {
  right = std::unique_ptr<RopeNode> = {
    get() = 0x0
  },
  left = std::unique_ptr<RopeNode> = {
    get() = 0x0
  },
  data = "sir.",
  root_node = std::unique_ptr<RopeNode> = {
    get() = 0x0
  },
  weight = 4
}
+exit
Reading symbols from ./build/tests/testlib...
+break _index
Breakpoint 1 at 0xfef80: file /home/david/Programming/cpp_dev/MrText/src/NewRope.cpp, line 43.
+run
Starting program: /home/david/Programming/cpp_dev/MrText/build/tests/testlib 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/usr/lib64/libthread_db.so.1".

Breakpoint 1, NewRope::_index (this=0x7fffffffc930, node=std::unique_ptr<RopeNode> = {...}, idx=0) at /home/david/Programming/cpp_dev/MrText/src/NewRope.cpp:43
+n
+s
std::unique_ptr<RopeNode, std::default_delete<RopeNode> >::operator-> (this=0x7fffffffc930) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/unique_ptr.h:458
+n
NewRope::_index (this=0x7fffffffc930, node=std::unique_ptr<RopeNode> = {...}, idx=0) at /home/david/Programming/cpp_dev/MrText/src/NewRope.cpp:48
+s
std::unique_ptr<RopeNode, std::default_delete<RopeNode> >::operator-> (this=0x7fffffffc930) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/unique_ptr.h:458
+n
NewRope::_index (this=0x7fffffffc930, node=std::unique_ptr<RopeNode> = {...}, idx=0) at /home/david/Programming/cpp_dev/MrText/src/NewRope.cpp:49
+print *node
$1 = {
  right = std::unique_ptr<RopeNode> = {
    get() = 0x0
  },
  left = std::unique_ptr<RopeNode> = {
    get() = 0x5555556d4e90
  },
  data = "Hello ",
  root_node = std::unique_ptr<RopeNode> = {
    get() = 0x0
  },
  weight = 10
}
+exit
Reading symbols from ./build/tests/testlib...
+break _index
Breakpoint 1 at 0xfef80: file /home/david/Programming/cpp_dev/MrText/src/NewRope.cpp, line 43.
+run
Starting program: /home/david/Programming/cpp_dev/MrText/build/tests/testlib 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/usr/lib64/libthread_db.so.1".

Breakpoint 1, NewRope::_index (this=0x7fffffffc930, node=std::unique_ptr<RopeNode> = {...}, idx=0) at /home/david/Programming/cpp_dev/MrText/src/NewRope.cpp:43
+n
+s
std::unique_ptr<RopeNode, std::default_delete<RopeNode> >::operator-> (this=0x7fffffffc930) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/unique_ptr.h:458
+n
NewRope::_index (this=0x7fffffffc930, node=std::unique_ptr<RopeNode> = {...}, idx=0) at /home/david/Programming/cpp_dev/MrText/src/NewRope.cpp:48
+s
std::unique_ptr<RopeNode, std::default_delete<RopeNode> >::operator-> (this=0x7fffffffc930) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/unique_ptr.h:458
+n
NewRope::_index (this=0x7fffffffc930, node=std::unique_ptr<RopeNode> = {...}, idx=0) at /home/david/Programming/cpp_dev/MrText/src/NewRope.cpp:50
+s
std::unique_ptr<RopeNode, std::default_delete<RopeNode> >::operator-> (this=0x7fffffffc930) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/unique_ptr.h:458
+n
NewRope::_index (this=0x7fffffffc930, node=std::unique_ptr<RopeNode> = {...}, idx=0) at /home/david/Programming/cpp_dev/MrText/src/NewRope.cpp:51
+s
std::unique_ptr<RopeNode, std::default_delete<RopeNode> >::operator-> (this=0x7fffffffc930) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/unique_ptr.h:458
+n

Breakpoint 1, NewRope::_index (this=0x7fffffffc930, node=std::unique_ptr<RopeNode> = {...}, idx=0) at /home/david/Programming/cpp_dev/MrText/src/NewRope.cpp:43
+print *node
$1 = {
  right = std::unique_ptr<RopeNode> = {
    get() = 0x0
  },
  left = std::unique_ptr<RopeNode> = {
    get() = 0x0
  },
  data = "sir.",
  root_node = std::unique_ptr<RopeNode> = {
    get() = 0x0
  },
  weight = 4
}
+s
std::unique_ptr<RopeNode, std::default_delete<RopeNode> >::operator bool (this=0x5555556d3e68) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/unique_ptr.h:482
+n
NewRope::_index (this=0x7fffffffc930, node=std::unique_ptr<RopeNode> = {...}, idx=0) at /home/david/Programming/cpp_dev/MrText/src/NewRope.cpp:47
+s
std::unique_ptr<RopeNode, std::default_delete<RopeNode> >::operator-> (this=0x5555556d3e68) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/unique_ptr.h:458
+n
NewRope::_index (this=0x7fffffffc930, node=std::unique_ptr<RopeNode> = {...}, idx=0) at /home/david/Programming/cpp_dev/MrText/src/NewRope.cpp:48
+n
+s
std::unique_ptr<RopeNode, std::default_delete<RopeNode> >::operator-> (this=0x5555556d3e68) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/unique_ptr.h:458
+n
NewRope::_index (this=0x7fffffffc930, node=std::unique_ptr<RopeNode> = {...}, idx=0) at /home/david/Programming/cpp_dev/MrText/src/NewRope.cpp:61
+n
+n
[Inferior 1 (process 173286) exited with code 01]
+exit
Reading symbols from ./build/tests/testlib...
+break rope
Function "rope" not defined.
+break Rope
Breakpoint 1 at 0xfacdd: file /home/david/Programming/cpp_dev/MrText/src/Rope.cpp, line 14.
+run
Starting program: /home/david/Programming/cpp_dev/MrText/build/tests/testlib 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/usr/lib64/libthread_db.so.1".

Breakpoint 1, Rope<5u>::Rope (this=0x7fffffffcbc0) at /home/david/Programming/cpp_dev/MrText/src/Rope.cpp:14
+print *this
$1 = {
  static KeyArrSize = 4,
  root = std::shared_ptr<Node<5u>> (empty) = {
    get() = 0x0
  }
}
+n
+print *this
$2 = {
  static KeyArrSize = 4,
  root = std::shared_ptr<Node<5u>> (use count 1, weak count 0) = {
    get() = 0x5555556e5120
  }
}
+print *this->root
$3 = {
  static KeysLessOne = 4,
  key_cnt = 0,
  leaf = false,
  keys = {
    _M_elems = {0, 0, 0, 0}
  },
  children = {
    _M_elems = {std::shared_ptr<Node<5u>> (empty) = {
        get() = 0x0
      }, std::shared_ptr<Node<5u>> (empty) = {
        get() = 0x0
      }, std::shared_ptr<Node<5u>> (empty) = {
        get() = 0x0
      }, std::shared_ptr<Node<5u>> (empty) = {
        get() = 0x0
      }, std::shared_ptr<Node<5u>> (empty) = {
        get() = 0x0
      }}
Quit
+n
+n
+print *this->root
$4 = {
  static KeysLessOne = 4,
  key_cnt = 1,
  leaf = false,
  keys = {
    _M_elems = {0, 0, 0, 0}
  },
  children = {
    _M_elems = {std::shared_ptr<Node<5u>> (empty) = {
        get() = 0x0
      }, std::shared_ptr<Node<5u>> (empty) = {
        get() = 0x0
      }, std::shared_ptr<Node<5u>> (empty) = {
        get() = 0x0
      }, std::shared_ptr<Node<5u>> (empty) = {
        get() = 0x0
      }, std::shared_ptr<Node<5u>> (empty) = {
        get() = 0x0
      }}
  },
  data = ""
}
+print *this->root
$5 = {
  static KeysLessOne = 4,
  key_cnt = 1,
  leaf = false,
  keys = {
    _M_elems = {0, 0, 0, 0}
  },
  children = {
    _M_elems = {std::shared_ptr<Node<5u>> (empty) = {
        get() = 0x0
      }, std::shared_ptr<Node<5u>> (empty) = {
        get() = 0x0
      }, std::shared_ptr<Node<5u>> (empty) = {
        get() = 0x0
      }, std::shared_ptr<Node<5u>> (empty) = {
        get() = 0x0
      }, std::shared_ptr<Node<5u>> (empty) = {
        get() = 0x0
      }}
  },
  data = ""
}
+exit
Reading symbols from ./build/tests/testlib...
+break Rope
Breakpoint 1 at 0xfaecd: file /home/david/Programming/cpp_dev/MrText/src/Rope.cpp, line 15.
+run
Starting program: /home/david/Programming/cpp_dev/MrText/build/tests/testlib 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/usr/lib64/libthread_db.so.1".

Breakpoint 1, Rope<5u>::Rope (this=0x7fffffffcbc0) at /home/david/Programming/cpp_dev/MrText/src/Rope.cpp:15
+n
____C_A_T_C_H____T_E_S_T____6 () at /home/david/Programming/cpp_dev/MrText/tests/testlib.cpp:80
+print *rope
No symbol "operator*" in current context.
+print rope
$1 = {
  static KeysLessOne = 4,
  root = std::shared_ptr<Node<5u>> (use count 1, weak count 0) = {
    get() = 0x5555556e5120
  }
}
+print *rope->root
$2 = {
  static KeysLessOne = 4,
  key_cnt = 0,
  leaf = false,
  keys = {
    _M_elems = {0, 0, 0, 0}
  },
  children = {
    _M_elems = {std::shared_ptr<Node<5u>> (empty) = {
        get() = 0x0
      }, std::shared_ptr<Node<5u>> (empty) = {
        get() = 0x0
      }, std::shared_ptr<Node<5u>> (empty) = {
        get() = 0x0
      }, std::shared_ptr<Node<5u>> (empty) = {
        get() = 0x0
      }, std::shared_ptr<Node<5u>> (empty) = {
        get() = 0x0
      }}
  },
  data = ""
}
+set var rope->root->key_cnt = 4
+print *rope->root
$3 = {
  static KeysLessOne = 4,
  key_cnt = 4,
  leaf = false,
  keys = {
    _M_elems = {0, 0, 0, 0}
  },
  children = {
    _M_elems = {std::shared_ptr<Node<5u>> (empty) = {
        get() = 0x0
      }, std::shared_ptr<Node<5u>> (empty) = {
        get() = 0x0
      }, std::shared_ptr<Node<5u>> (empty) = {
        get() = 0x0
      }, std::shared_ptr<Node<5u>> (empty) = {
        get() = 0x0
      }, std::shared_ptr<Node<5u>> (empty) = {
        get() = 0x0
      }}
  },
  data = ""
}
+s
std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string (this=0x7fffffffcbd8, __str="Hello World!") at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/basic_string.h:554
+n
+n
+n
+n

Program received signal SIGSEGV, Segmentation fault.
0x000055555564eb91 in Rope<5u>::_insert_non_full (this=0x7fffffffcbc0, node=std::shared_ptr<Node<5u>> (use count 3, weak count 0) = {...}, line_number=0) at /home/david/Programming/cpp_dev/MrText/src/Rope.cpp:37
+print *node
$4 = {
  static KeysLessOne = 4,
  key_cnt = 0,
  leaf = true,
  keys = {
    _M_elems = {0, 0, 0, 0}
  },
  children = {
    _M_elems = {std::shared_ptr<Node<5u>> (use count 1, weak count 0) = {
        get() = 0x5555556e5120
      }, std::shared_ptr<Node<5u>> (empty) = {
        get() = 0x0
      }, std::shared_ptr<Node<5u>> (empty) = {
        get() = 0x0
      }, std::shared_ptr<Node<5u>> (empty) = {
        get() = 0x0
      }, std::shared_ptr<Node<5u>> (empty) = {
        get() = 0x0
      }}
  },
  data = "Hello World!"
}
+print *node->children[0]
$5 = {
  static KeysLessOne = 4,
  key_cnt = 4,
  leaf = false,
  keys = {
    _M_elems = {0, 0, 0, 0}
  },
  children = {
    _M_elems = {std::shared_ptr<Node<5u>> (empty) = {
        get() = 0x0
      }, std::shared_ptr<Node<5u>> (empty) = {
        get() = 0x0
      }, std::shared_ptr<Node<5u>> (empty) = {
        get() = 0x0
      }, std::shared_ptr<Node<5u>> (empty) = {
        get() = 0x0
      }, std::shared_ptr<Node<5u>> (empty) = {
        get() = 0x0
      }}
  },
  data = ""
}
+run
Program not restarted.
+continue
Continuing.

Program received signal SIGSEGV, Segmentation fault.
0x000055555564eb91 in Rope<5u>::_insert_non_full (this=0x7fffffffcbc0, node=std::shared_ptr<Node<5u>> (use count 3, weak count 0) = {...}, line_number=0) at /home/david/Programming/cpp_dev/MrText/src/Rope.cpp:37
+exit
Reading symbols from ./build/tests/testlib...
+break BTree
Breakpoint 1 at 0xfcea5: file /home/david/Programming/cpp_dev/MrText/src/BTree.cpp, line 36.
+run
Starting program: /home/david/Programming/cpp_dev/MrText/build/tests/testlib 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/usr/lib64/libthread_db.so.1".

Breakpoint 1, BTree<char, 3>::BTree (this=0x7fffffffcc08) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:36
+print *this
$1 = {
  root = std::shared_ptr<BTreeNode<char, 3>> (use count 1431827544, weak count 21844) = {
    get() = 0x555555637039 <std::__shared_ptr_access<Catch::ITestInvoker, (__gnu_cxx::_Lock_policy)2, false, false>::_M_get() const+25>
  }
}
+print *this->root->keys
$2 = 72 'H'
+n
+n
+n
+n
____C_A_T_C_H____T_E_S_T____6 () at /home/david/Programming/cpp_dev/MrText/tests/testlib.cpp:78
+n
+s
BTree<char, 3>::insert_char (this=0x7fffffffcc08, val=97 'a') at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:53
+print *this
$3 = {
  root = std::shared_ptr<BTreeNode<char, 3>> (use count 1, weak count 0) = {
    get() = 0x5555556cf760
  }
}
+print *this-root
No symbol "operator-" in current context.
+print *this->root
$4 = {
  keys = "aV",
  children = {std::shared_ptr<BTreeNode<char, 3>> (empty) = {
      get() = 0x0
    }, std::shared_ptr<BTreeNode<char, 3>> (empty) = {
      get() = 0x0
    }, std::shared_ptr<BTreeNode<char, 3>> (empty) = {
      get() = 0x0
    }},
  children_info = {std::shared_ptr<TextInfo> (empty) = {
      get() = 0x0
    }, std::shared_ptr<TextInfo> (empty) = {
      get() = 0x0
    }, std::shared_ptr<TextInfo> (empty) = {
      get() = 0x0
    }},
  cur_key_count = 1,
  leaf = true,
  weight = 0,
  text = "",
  info = {
    bytes = 0,
    chars = 0,
    line_breaks = 0
  }
}
+exit
Reading symbols from ./build/tests/testlib...
+break BTree
Breakpoint 1 at 0xfd035: file /home/david/Programming/cpp_dev/MrText/src/BTree.cpp, line 36.
+run
Starting program: /home/david/Programming/cpp_dev/MrText/build/tests/testlib 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/usr/lib64/libthread_db.so.1".

Breakpoint 1, BTree<int, 3>::BTree (this=0x7fffffffcc08) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:36
+print *this->root
$1 = {
  keys = {281314120, -208616611},
  children = {<error reading variable: Cannot access memory at address 0x486400000080ec89>, <error reading variable: Cannot access memory at address 0x48b07d8948f84591>, <error reading variable: Cannot access memory at address 0x48a8758b48904591>},
  children_info = {<error reading variable: Cannot access memory at address 0xe8c68948907d8b50>, <error reading variable: Cannot access memory at address 0xa07d8348a0558950>, <error reading variable: Cannot access memory at address 0x26fe8d87d95>},
  cur_key_count = 2424146760,
  leaf = 72,
  weight = 2689960776,
  text = Python Exception <class 'OverflowError'>: int too big to convert
,
  info = {
    bytes = 10985840007979925504,
    chars = 1001555243142472,
    line_breaks = 9046966394503415296
  }
}
+n
+n
+n
+print *this->root
$2 = {
  keys = {1431656144, 5},
  children = {std::shared_ptr<BTreeNode<int, 3>> (empty) = {
      get() = 0x0
    }, std::shared_ptr<BTreeNode<int, 3>> (empty) = {
      get() = 0x0
    }, std::shared_ptr<BTreeNode<int, 3>> (empty) = {
      get() = 0x0
    }},
  children_info = {std::shared_ptr<TextInfo> (empty) = {
      get() = 0x0
    }, std::shared_ptr<TextInfo> (empty) = {
      get() = 0x0
    }, std::shared_ptr<TextInfo> (empty) = {
      get() = 0x0
    }},
  cur_key_count = 0,
  leaf = true,
  weight = 0,
Quit
+eixt
Undefined command: "eixt".  Try "help".
+exit
Reading symbols from ./build/tests/testlib...
+break BTree
Breakpoint 1 at 0xfd035: file /home/david/Programming/cpp_dev/MrText/src/BTree.cpp, line 36.
+run
Starting program: /home/david/Programming/cpp_dev/MrText/build/tests/testlib 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/usr/lib64/libthread_db.so.1".

Breakpoint 1, BTree<int, 3>::BTree (this=0x7fffffffcc08) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:36
+print *this
$1 = {
  root = std::shared_ptr<BTreeNode<int, 3>> (use count 1431827576, weak count 21844) = {
    get() = 0x555555637059 <std::__shared_ptr_access<Catch::ITestInvoker, (__gnu_cxx::_Lock_policy)2, false, false>::_M_get() const+25>
  }
}
+run
Program not restarted.
+n
+n
+n
+print *this
$2 = {
  root = std::shared_ptr<BTreeNode<int, 3>> (use count 1, weak count 0) = {
    get() = 0x5555556d0760
  }
}
+print *this->root
$3 = {
  keys = {0, 0},
  children = {std::shared_ptr<BTreeNode<int, 3>> (empty) = {
      get() = 0x0
    }, std::shared_ptr<BTreeNode<int, 3>> (empty) = {
      get() = 0x0
    }, std::shared_ptr<BTreeNode<int, 3>> (empty) = {
      get() = 0x0
    }},
  children_info = {std::shared_ptr<TextInfo> (empty) = {
      get() = 0x0
    }, std::shared_ptr<TextInfo> (empty) = {
      get() = 0x0
    }, std::shared_ptr<TextInfo> (empty) = {
      get() = 0x0
    }},
  cur_key_count = 0,
  leaf = true,
  weight = 0,
  text = "",
  info = {
    bytes = 0,
    chars = 0,
    line_breaks = 0
  }
}
+n
____C_A_T_C_H____T_E_S_T____6 () at /home/david/Programming/cpp_dev/MrText/tests/testlib.cpp:78
+n
+print *this->root
No symbol "this" in current context.
+s
BTree<int, 3>::insert_char (this=0x7fffffffcc08, val=2) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:53
+print *this->root
$4 = {
  keys = {1, 0},
  children = {std::shared_ptr<BTreeNode<int, 3>> (empty) = {
      get() = 0x0
    }, std::shared_ptr<BTreeNode<int, 3>> (empty) = {
      get() = 0x0
    }, std::shared_ptr<BTreeNode<int, 3>> (empty) = {
      get() = 0x0
    }},
  children_info = {std::shared_ptr<TextInfo> (empty) = {
      get() = 0x0
    }, std::shared_ptr<TextInfo> (empty) = {
      get() = 0x0
    }, std::shared_ptr<TextInfo> (empty) = {
      get() = 0x0
    }},
  cur_key_count = 1,
  leaf = true,
  weight = 0,
  text = "",
  info = {
    bytes = 0,
    chars = 0,
    line_breaks = 0
  }
}
+n
+n
+n
____C_A_T_C_H____T_E_S_T____6 () at /home/david/Programming/cpp_dev/MrText/tests/testlib.cpp:80
+n

Program received signal SIGSEGV, Segmentation fault.
0x0000555555650eaa in BTree<int, 3>::insert_non_full (this=0x7fffffffcc08, arg_node=std::shared_ptr<BTreeNode<int, 3>> (use count 1, weak count 0) = {...}, val=3) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:125
+n
Catch::handleSignal (sig=32767) at /home/david/Programming/cpp_dev/MrText/build/_deps/catch-src/single_include/catch2/catch.hpp:10896
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+run
Starting program: /home/david/Programming/cpp_dev/MrText/build/tests/testlib 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/usr/lib64/libthread_db.so.1".

Breakpoint 1, BTree<int, 3>::BTree (this=0x7fffffffcc08) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:36
warning: Error detected on fd 0
error detected on stdin
Reading symbols from ./build/tests/testlib...
+break BTree
Breakpoint 1 at 0xfd035: file /home/david/Programming/cpp_dev/MrText/src/BTree.cpp, line 36.
+run
Starting program: /home/david/Programming/cpp_dev/MrText/build/tests/testlib 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/usr/lib64/libthread_db.so.1".

Breakpoint 1, BTree<int, 3>::BTree (this=0x7fffffffcc08) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:36
warning: Error detected on fd 0
error detected on stdin
Reading symbols from ./build/tests/testlib...
+break BTree
Breakpoint 1 at 0xfd035: file /home/david/Programming/cpp_dev/MrText/src/BTree.cpp, line 36.
+run
Starting program: /home/david/Programming/cpp_dev/MrText/build/tests/testlib 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/usr/lib64/libthread_db.so.1".

Breakpoint 1, BTree<int, 3>::BTree (this=0x7fffffffcc08) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:36
+n
+n
+n
+n
____C_A_T_C_H____T_E_S_T____6 () at /home/david/Programming/cpp_dev/MrText/tests/testlib.cpp:78
+print tree
$1 = {
  root = std::shared_ptr<BTreeNode<int, 3>> (use count 1, weak count 0) = {
    get() = 0x5555556d0760
  }
}
+print tree->root
$2 = std::shared_ptr<BTreeNode<int, 3>> (use count 1, weak count 0) = {
  get() = 0x5555556d0760
}
+s
BTree<int, 3>::insert_char (this=0x7fffffffcc08, val=1) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:53
+print *this->root
$3 = {
  keys = {0, 0},
  children = {std::shared_ptr<BTreeNode<int, 3>> (empty) = {
      get() = 0x0
    }, std::shared_ptr<BTreeNode<int, 3>> (empty) = {
      get() = 0x0
    }, std::shared_ptr<BTreeNode<int, 3>> (empty) = {
      get() = 0x0
    }},
  children_info = {std::shared_ptr<TextInfo> (empty) = {
      get() = 0x0
    }, std::shared_ptr<TextInfo> (empty) = {
      get() = 0x0
    }, std::shared_ptr<TextInfo> (empty) = {
      get() = 0x0
    }},
  cur_key_count = 0,
  leaf = true,
  weight = 0,
  text = "",
  info = {
    bytes = 0,
    chars = 0,
    line_breaks = 0
  }
}
+n
+s
BTree<int, 3>::insert_non_full (this=0x7fffffffcc08, arg_node=std::shared_ptr<BTreeNode<int, 3>> (use count 1, weak count 0) = {...}, val=1) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:112
+print *arg_node
$4 = {
  keys = {0, 0},
  children = {std::shared_ptr<BTreeNode<int, 3>> (empty) = {
      get() = 0x0
    }, std::shared_ptr<BTreeNode<int, 3>> (empty) = {
      get() = 0x0
    }, std::shared_ptr<BTreeNode<int, 3>> (empty) = {
      get() = 0x0
    }},
  children_info = {std::shared_ptr<TextInfo> (empty) = {
      get() = 0x0
    }, std::shared_ptr<TextInfo> (empty) = {
      get() = 0x0
    }, std::shared_ptr<TextInfo> (empty) = {
      get() = 0x0
    }},
  cur_key_count = 0,
  leaf = true,
  weight = 0,
  text = "",
  info = {
    bytes = 0,
    chars = 0,
    line_breaks = 0
  }
}
+s
std::__shared_ptr_access<BTreeNode<int, 3>, (__gnu_cxx::_Lock_policy)2, false, false>::operator-> (this=0x7fffffffcc08) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/shared_ptr_base.h:1358
+n
BTree<int, 3>::insert_non_full (this=0x7fffffffcc08, arg_node=std::shared_ptr<BTreeNode<int, 3>> (use count 1, weak count 0) = {...}, val=1) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:114
+s
std::__shared_ptr_access<BTreeNode<int, 3>, (__gnu_cxx::_Lock_policy)2, false, false>::operator-> (this=0x7fffffffcc08) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/shared_ptr_base.h:1358
+n
BTree<int, 3>::insert_non_full (this=0x7fffffffcc08, arg_node=std::shared_ptr<BTreeNode<int, 3>> (use count 1, weak count 0) = {...}, val=1) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:115
+n
+n
+n
+n
+print *arg_node->root
There is no member or method named root.
+print *arg_node
$5 = {
  keys = {1, 0},
  children = {std::shared_ptr<BTreeNode<int, 3>> (empty) = {
      get() = 0x0
    }, std::shared_ptr<BTreeNode<int, 3>> (empty) = {
      get() = 0x0
    }, std::shared_ptr<BTreeNode<int, 3>> (empty) = {
      get() = 0x0
    }},
  children_info = {std::shared_ptr<TextInfo> (empty) = {
      get() = 0x0
    }, std::shared_ptr<TextInfo> (empty) = {
      get() = 0x0
    }, std::shared_ptr<TextInfo> (empty) = {
      get() = 0x0
    }},
  cur_key_count = 1,
  leaf = true,
  weight = 0,
  text = "",
  info = {
    bytes = 0,
    chars = 0,
    line_breaks = 0
  }
}
+s
BTree<int, 3>::insert_char (this=0x7fffffffcc08, val=1) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:67
+print *this
$6 = {
  root = std::shared_ptr<BTreeNode<int, 3>> (use count 1, weak count 0) = {
    get() = 0x5555556d0760
  }
}
+print *this->root
$7 = {
  keys = {1, 0},
  children = {std::shared_ptr<BTreeNode<int, 3>> (empty) = {
      get() = 0x0
    }, std::shared_ptr<BTreeNode<int, 3>> (empty) = {
      get() = 0x0
    }, std::shared_ptr<BTreeNode<int, 3>> (empty) = {
      get() = 0x0
    }},
  children_info = {std::shared_ptr<TextInfo> (empty) = {
      get() = 0x0
    }, std::shared_ptr<TextInfo> (empty) = {
      get() = 0x0
    }, std::shared_ptr<TextInfo> (empty) = {
      get() = 0x0
    }},
  cur_key_count = 1,
  leaf = true,
  weight = 0,
  text = "",
  info = {
    bytes = 0,
    chars = 0,
    line_breaks = 0
  }
}
+s
____C_A_T_C_H____T_E_S_T____6 () at /home/david/Programming/cpp_dev/MrText/tests/testlib.cpp:79
+s
BTree<int, 3>::insert_char (this=0x7fffffffcc08, val=2) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:53
+s
std::__shared_ptr_access<BTreeNode<int, 3>, (__gnu_cxx::_Lock_policy)2, false, false>::operator-> (this=0x7fffffffcc08) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/shared_ptr_base.h:1358
+n
BTree<int, 3>::insert_char (this=0x7fffffffcc08, val=2) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:65
+s
BTree<int, 3>::insert_non_full (this=0x7fffffffcc08, arg_node=std::shared_ptr<BTreeNode<int, 3>> (use count 1, weak count 0) = {...}, val=2) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:112
+print *arg_node
$8 = {
  keys = {1, 0},
  children = {std::shared_ptr<BTreeNode<int, 3>> (empty) = {
      get() = 0x0
    }, std::shared_ptr<BTreeNode<int, 3>> (empty) = {
      get() = 0x0
    }, std::shared_ptr<BTreeNode<int, 3>> (empty) = {
      get() = 0x0
    }},
  children_info = {std::shared_ptr<TextInfo> (empty) = {
      get() = 0x0
    }, std::shared_ptr<TextInfo> (empty) = {
      get() = 0x0
    }, std::shared_ptr<TextInfo> (empty) = {
      get() = 0x0
    }},
  cur_key_count = 1,
  leaf = true,
  weight = 0,
  text = "",
  info = {
    bytes = 0,
    chars = 0,
    line_breaks = 0
  }
}
+n
+s
std::__shared_ptr_access<BTreeNode<int, 3>, (__gnu_cxx::_Lock_policy)2, false, false>::operator-> (this=0x7fffffffcc08) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/shared_ptr_base.h:1358
+n
BTree<int, 3>::insert_non_full (this=0x7fffffffcc08, arg_node=std::shared_ptr<BTreeNode<int, 3>> (use count 1, weak count 0) = {...}, val=2) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:115
+n
+n
+n
+n
+print *arg_node
$9 = {
  keys = {1, 2},
  children = {std::shared_ptr<BTreeNode<int, 3>> (empty) = {
      get() = 0x0
    }, std::shared_ptr<BTreeNode<int, 3>> (empty) = {
      get() = 0x0
    }, std::shared_ptr<BTreeNode<int, 3>> (empty) = {
      get() = 0x0
    }},
  children_info = {std::shared_ptr<TextInfo> (empty) = {
      get() = 0x0
    }, std::shared_ptr<TextInfo> (empty) = {
      get() = 0x0
    }, std::shared_ptr<TextInfo> (empty) = {
      get() = 0x0
    }},
  cur_key_count = 2,
  leaf = true,
  weight = 0,
  text = "",
  info = {
    bytes = 0,
    chars = 0,
    line_breaks = 0
  }
}
+s
BTree<int, 3>::insert_char (this=0x7fffffffcc08, val=2) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:67
+s
____C_A_T_C_H____T_E_S_T____6 () at /home/david/Programming/cpp_dev/MrText/tests/testlib.cpp:80
+s
BTree<int, 3>::insert_char (this=0x7fffffffcc08, val=3) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:53
+s
std::__shared_ptr_access<BTreeNode<int, 3>, (__gnu_cxx::_Lock_policy)2, false, false>::operator-> (this=0x7fffffffcc08) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/shared_ptr_base.h:1358
+n
BTree<int, 3>::insert_char (this=0x7fffffffcc08, val=3) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:54
+n
+n
+n
+print *node
$10 = {
  keys = {0, 0},
  children = {std::shared_ptr<BTreeNode<int, 3>> (empty) = {
      get() = 0x0
    }, std::shared_ptr<BTreeNode<int, 3>> (empty) = {
      get() = 0x0
    }, std::shared_ptr<BTreeNode<int, 3>> (empty) = {
      get() = 0x0
    }},
  children_info = {std::shared_ptr<TextInfo> (empty) = {
      get() = 0x0
    }, std::shared_ptr<TextInfo> (empty) = {
      get() = 0x0
    }, std::shared_ptr<TextInfo> (empty) = {
      get() = 0x0
    }},
  cur_key_count = 0,
  leaf = false,
  weight = 0,
  text = "",
  info = {
    bytes = 0,
    chars = 0,
    line_breaks = 0
  }
}
+print *root
$11 = {
  keys = {1, 2},
  children = {std::shared_ptr<BTreeNode<int, 3>> (empty) = {
      get() = 0x0
    }, std::shared_ptr<BTreeNode<int, 3>> (empty) = {
      get() = 0x0
    }, std::shared_ptr<BTreeNode<int, 3>> (empty) = {
      get() = 0x0
    }},
  children_info = {std::shared_ptr<TextInfo> (empty) = {
      get() = 0x0
    }, std::shared_ptr<TextInfo> (empty) = {
      get() = 0x0
    }, std::shared_ptr<TextInfo> (empty) = {
      get() = 0x0
    }},
  cur_key_count = 2,
  leaf = true,
  weight = 0,
  text = "",
  info = {
    bytes = 0,
    chars = 0,
    line_breaks = 0
  }
}
+s
std::__shared_ptr_access<BTreeNode<int, 3>, (__gnu_cxx::_Lock_policy)2, false, false>::operator-> (this=0x7fffffffcbd8) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/shared_ptr_base.h:1358
+n
BTree<int, 3>::insert_char (this=0x7fffffffcc08, val=3) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:61
+s
std::shared_ptr<BTreeNode<int, 3> >::operator= (this=0x7fffffffcc08) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/shared_ptr.h:413
+n
BTree<int, 3>::insert_char (this=0x7fffffffcc08, val=3) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:62
+s
BTree<int, 3>::split_child (this=0x7fffffffcc08, arg_node=std::shared_ptr<BTreeNode<int, 3>> (use count 2, weak count 0) = {...}, idx=0) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:73
+print *arg_node
$12 = {
  keys = {0, 0},
  children = {std::shared_ptr<BTreeNode<int, 3>> (use count 1, weak count 0) = {
      get() = 0x5555556d0760
    }, std::shared_ptr<BTreeNode<int, 3>> (empty) = {
      get() = 0x0
    }, std::shared_ptr<BTreeNode<int, 3>> (empty) = {
      get() = 0x0
    }},
  children_info = {std::shared_ptr<TextInfo> (empty) = {
      get() = 0x0
    }, std::shared_ptr<TextInfo> (empty) = {
      get() = 0x0
    }, std::shared_ptr<TextInfo> (empty) = {
      get() = 0x0
    }},
  cur_key_count = 0,
  leaf = false,
  weight = 0,
  text = "",
  info = {
    bytes = 0,
    chars = 0,
    line_breaks = 0
  }
}
+s
std::__shared_ptr_access<BTreeNode<int, 3>, (__gnu_cxx::_Lock_policy)2, false, false>::operator-> (this=0x7fffffffcbd8) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/shared_ptr_base.h:1358
+n
BTree<int, 3>::split_child (this=0x7fffffffcc08, arg_node=std::shared_ptr<BTreeNode<int, 3>> (use count 2, weak count 0) = {...}, idx=0) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:74
+s
std::shared_ptr<BTreeNode<int, 3> >::shared_ptr (this=0x7fffffffcb28) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/shared_ptr.h:201
+n
BTree<int, 3>::split_child (this=0x7fffffffcc08, arg_node=std::shared_ptr<BTreeNode<int, 3>> (use count 2, weak count 0) = {...}, idx=0) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:76
+n
+n
+s
std::__shared_ptr_access<BTreeNode<int, 3>, (__gnu_cxx::_Lock_policy)2, false, false>::operator-> (this=0x7fffffffcb28) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/shared_ptr_base.h:1358
+n
BTree<int, 3>::split_child (this=0x7fffffffcc08, arg_node=std::shared_ptr<BTreeNode<int, 3>> (use count 2, weak count 0) = {...}, idx=0) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:84
+n
+s
std::__shared_ptr_access<BTreeNode<int, 3>, (__gnu_cxx::_Lock_policy)2, false, false>::operator-> (this=0x7fffffffcb38) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/shared_ptr_base.h:1358
+n
BTree<int, 3>::split_child (this=0x7fffffffcc08, arg_node=std::shared_ptr<BTreeNode<int, 3>> (use count 2, weak count 0) = {...}, idx=0) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:94
+print *arg_node
$13 = {
  keys = {0, 0},
  children = {std::shared_ptr<BTreeNode<int, 3>> (use count 2, weak count 0) = {
      get() = 0x5555556d0760
    }, std::shared_ptr<BTreeNode<int, 3>> (empty) = {
      get() = 0x0
    }, std::shared_ptr<BTreeNode<int, 3>> (empty) = {
      get() = 0x0
    }},
  children_info = {std::shared_ptr<TextInfo> (empty) = {
      get() = 0x0
    }, std::shared_ptr<TextInfo> (empty) = {
      get() = 0x0
    }, std::shared_ptr<TextInfo> (empty) = {
      get() = 0x0
    }},
  cur_key_count = 0,
  leaf = false,
  weight = 0,
  text = "",
  info = {
    bytes = 0,
    chars = 0,
    line_breaks = 0
  }
}
+print *arg_node->children[0]
$14 = {
  keys = {1, 2},
  children = {std::shared_ptr<BTreeNode<int, 3>> (empty) = {
      get() = 0x0
    }, std::shared_ptr<BTreeNode<int, 3>> (empty) = {
      get() = 0x0
    }, std::shared_ptr<BTreeNode<int, 3>> (empty) = {
      get() = 0x0
    }},
  children_info = {std::shared_ptr<TextInfo> (empty) = {
      get() = 0x0
    }, std::shared_ptr<TextInfo> (empty) = {
      get() = 0x0
    }, std::shared_ptr<TextInfo> (empty) = {
      get() = 0x0
    }},
  cur_key_count = 2,
  leaf = true,
  weight = 0,
  text = "",
  info = {
    bytes = 0,
    chars = 0,
    line_breaks = 0
  }
}
+s
std::__shared_ptr_access<BTreeNode<int, 3>, (__gnu_cxx::_Lock_policy)2, false, false>::operator-> (this=0x7fffffffcb38) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/shared_ptr_base.h:1358
+n
BTree<int, 3>::split_child (this=0x7fffffffcc08, arg_node=std::shared_ptr<BTreeNode<int, 3>> (use count 2, weak count 0) = {...}, idx=0) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:96
+n
+n
+n
+n
+s
std::__shared_ptr_access<BTreeNode<int, 3>, (__gnu_cxx::_Lock_policy)2, false, false>::operator-> (this=0x7fffffffcbd8) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/shared_ptr_base.h:1358
+n
BTree<int, 3>::split_child (this=0x7fffffffcc08, arg_node=std::shared_ptr<BTreeNode<int, 3>> (use count 2, weak count 0) = {...}, idx=0) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:108
+s
std::shared_ptr<BTreeNode<int, 3> >::~shared_ptr (this=0x7fffffffcb28) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/shared_ptr.h:175
+n
BTree<int, 3>::insert_char (this=0x7fffffffcc08, val=3) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:63
+s
BTree<int, 3>::insert_non_full (this=0x7fffffffcc08, arg_node=std::shared_ptr<BTreeNode<int, 3>> (use count 2, weak count 0) = {...}, val=3) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:112
+print *arg_node
$15 = {
  keys = {1, 0},
  children = {std::shared_ptr<BTreeNode<int, 3>> (use count 1, weak count 0) = {
      get() = 0x5555556d0760
    }, std::shared_ptr<BTreeNode<int, 3>> (use count 1, weak count 0) = {
      get() = 0x5555556e6e10
    }, std::shared_ptr<BTreeNode<int, 3>> (empty) = {
      get() = 0x0
    }},
  children_info = {std::shared_ptr<TextInfo> (empty) = {
      get() = 0x0
    }, std::shared_ptr<TextInfo> (empty) = {
      get() = 0x0
    }, std::shared_ptr<TextInfo> (empty) = {
      get() = 0x0
    }},
  cur_key_count = 1,
  leaf = false,
  weight = 0,
  text = "",
  info = {
    bytes = 0,
    chars = 0,
    line_breaks = 0
  }
}
+n
+s
std::__shared_ptr_access<BTreeNode<int, 3>, (__gnu_cxx::_Lock_policy)2, false, false>::operator-> (this=0x7fffffffcbd8) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/shared_ptr_base.h:1358
+n
BTree<int, 3>::insert_non_full (this=0x7fffffffcc08, arg_node=std::shared_ptr<BTreeNode<int, 3>> (use count 2, weak count 0) = {...}, val=3) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:121
+print *this
$16 = {
  root = std::shared_ptr<BTreeNode<int, 3>> (use count 2, weak count 0) = {
    get() = 0x5555556d2240
  }
}
+n
+n
+n
+s
std::__shared_ptr_access<BTreeNode<int, 3>, (__gnu_cxx::_Lock_policy)2, false, false>::operator-> (this=0x7fffffffcbd8) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/shared_ptr_base.h:1358
+n

Program received signal SIGSEGV, Segmentation fault.
0x0000555555650eaa in BTree<int, 3>::insert_non_full (this=0x7fffffffcc08, arg_node=std::shared_ptr<BTreeNode<int, 3>> (use count 1, weak count 0) = {...}, val=3) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:125
+print *arg_node
$17 = {
  keys = {0, 0},
  children = {std::shared_ptr<BTreeNode<int, 3>> (empty) = {
      get() = 0x0
    }, std::shared_ptr<BTreeNode<int, 3>> (empty) = {
      get() = 0x0
    }, std::shared_ptr<BTreeNode<int, 3>> (empty) = {
      get() = 0x0
    }},
  children_info = {std::shared_ptr<TextInfo> (empty) = {
      get() = 0x0
    }, std::shared_ptr<TextInfo> (empty) = {
      get() = 0x0
    }, std::shared_ptr<TextInfo> (empty) = {
      get() = 0x0
    }},
  cur_key_count = 0,
  leaf = false,
  weight = 0,
  text = "",
  info = {
    bytes = 0,
    chars = 0,
    line_breaks = 0
  }
}
+print *arg_node
$18 = {
  keys = {0, 0},
  children = {std::shared_ptr<BTreeNode<int, 3>> (empty) = {
      get() = 0x0
    }, std::shared_ptr<BTreeNode<int, 3>> (empty) = {
      get() = 0x0
    }, std::shared_ptr<BTreeNode<int, 3>> (empty) = {
      get() = 0x0
    }},
  children_info = {std::shared_ptr<TextInfo> (empty) = {
      get() = 0x0
    }, std::shared_ptr<TextInfo> (empty) = {
      get() = 0x0
    }, std::shared_ptr<TextInfo> (empty) = {
      get() = 0x0
    }},
  cur_key_count = 0,
  leaf = false,
  weight = 0,
  text = "",
  info = {
    bytes = 0,
    chars = 0,
    line_breaks = 0
  }
}
+reverse-step
Target multi-thread does not support this command.
+reverse-next
Target multi-thread does not support this command.
+quit
Reading symbols from ./build/tests/testlib...
+break BTree
Breakpoint 1 at 0xfd035: file /home/david/Programming/cpp_dev/MrText/src/BTree.cpp, line 36.
+run
Starting program: /home/david/Programming/cpp_dev/MrText/build/tests/testlib 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/usr/lib64/libthread_db.so.1".

Breakpoint 1, BTree<int, 3>::BTree (this=0x7fffffffcc08) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:36
+n
+n
+n
+n
____C_A_T_C_H____T_E_S_T____6 () at /home/david/Programming/cpp_dev/MrText/tests/testlib.cpp:78
+n
+n
+s
BTree<int, 3>::insert_char (this=0x7fffffffcc08, val=3) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:53
+s
std::__shared_ptr_access<BTreeNode<int, 3>, (__gnu_cxx::_Lock_policy)2, false, false>::operator-> (this=0x7fffffffcc08) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/shared_ptr_base.h:1358
+n
BTree<int, 3>::insert_char (this=0x7fffffffcc08, val=3) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:54
+n
+n
+n
+n
+n
+n
+s
BTree<int, 3>::insert_non_full (this=0x7fffffffcc08, arg_node=std::shared_ptr<BTreeNode<int, 3>> (use count 2, weak count 0) = {...}, val=3) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:112
+print *arg_node
$1 = {
  keys = {1, 0},
  children = {std::shared_ptr<BTreeNode<int, 3>> (use count 1, weak count 0) = {
      get() = 0x5555556d0760
    }, std::shared_ptr<BTreeNode<int, 3>> (use count 1, weak count 0) = {
      get() = 0x5555556e6e10
    }, std::shared_ptr<BTreeNode<int, 3>> (empty) = {
      get() = 0x0
    }},
  children_info = {std::shared_ptr<TextInfo> (empty) = {
      get() = 0x0
    }, std::shared_ptr<TextInfo> (empty) = {
      get() = 0x0
    }, std::shared_ptr<TextInfo> (empty) = {
      get() = 0x0
    }},
  cur_key_count = 1,
  leaf = false,
  weight = 0,
  text = "",
  info = {
    bytes = 0,
    chars = 0,
    line_breaks = 0
  }
}
+print idx
$2 = -13312
+n
+print idx
$3 = 0
+s
std::__shared_ptr_access<BTreeNode<int, 3>, (__gnu_cxx::_Lock_policy)2, false, false>::operator-> (this=0x7fffffffcbd8) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/shared_ptr_base.h:1358
+n
BTree<int, 3>::insert_non_full (this=0x7fffffffcc08, arg_node=std::shared_ptr<BTreeNode<int, 3>> (use count 2, weak count 0) = {...}, val=3) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:121
+n
+print idx
$4 = 0
+n
+print idx
$5 = 1
+s
std::__shared_ptr_access<BTreeNode<int, 3>, (__gnu_cxx::_Lock_policy)2, false, false>::operator-> (this=0x7fffffffcbd8) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/shared_ptr_base.h:1358
+n
BTree<int, 3>::insert_non_full (this=0x7fffffffcc08, arg_node=std::shared_ptr<BTreeNode<int, 3>> (use count 2, weak count 0) = {...}, val=3) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:131
+print idx
$6 = 1
+print arg_node->children[1]
$7 = std::shared_ptr<BTreeNode<int, 3>> (use count 1, weak count 0) = {
  get() = 0x5555556e6e10
}
+print val
$8 = 3
+s
std::__shared_ptr_access<BTreeNode<int, 3>, (__gnu_cxx::_Lock_policy)2, false, false>::operator-> (this=0x7fffffffcbd8) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/shared_ptr_base.h:1358
+n

Program received signal SIGSEGV, Segmentation fault.
0x0000555555650eaa in BTree<int, 3>::insert_non_full (this=0x7fffffffcc08, arg_node=std::shared_ptr<BTreeNode<int, 3>> (use count 1, weak count 0) = {...}, val=3) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:125
+exit
Reading symbols from ./build/tests/testlib...
+break BTree
Breakpoint 1 at 0xfd0a5: file /home/david/Programming/cpp_dev/MrText/src/BTree.cpp, line 36.
+run
Starting program: /home/david/Programming/cpp_dev/MrText/build/tests/testlib 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/usr/lib64/libthread_db.so.1".

Breakpoint 1, BTree<int, 3>::BTree (this=0x7fffffffcc08) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:36
+n
+n
+n
+n
____C_A_T_C_H____T_E_S_T____6 () at /home/david/Programming/cpp_dev/MrText/tests/testlib.cpp:78
+n
+n
+s
BTree<int, 3>::insert_char (this=0x7fffffffcc08, val=3) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:53
+s
std::__shared_ptr_access<BTreeNode<int, 3>, (__gnu_cxx::_Lock_policy)2, false, false>::operator-> (this=0x7fffffffcc08) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/shared_ptr_base.h:1358
+n
BTree<int, 3>::insert_char (this=0x7fffffffcc08, val=3) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:54
+n
+n
+n
+n
+n
+n
+s
std::shared_ptr<BTreeNode<int, 3> >::shared_ptr (this=0x7fffffffcba8) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/shared_ptr.h:203
+n

Program received signal SIGSEGV, Segmentation fault.
0x0000555555650ed5 in BTree<int, 3>::insert_non_full (this=0x7fffffffcc08, arg_node=std::shared_ptr<BTreeNode<int, 3>> (use count 2, weak count 0) = {...}, val=3) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:125
+s
Catch::handleSignal (sig=1676385705) at /home/david/Programming/cpp_dev/MrText/build/_deps/catch-src/single_include/catch2/catch.hpp:10896
+n
+quit
Reading symbols from ./build/tests/testlib...
+break BTree
Breakpoint 1 at 0xfd0a5: file /home/david/Programming/cpp_dev/MrText/src/BTree.cpp, line 36.
+target record-full
Process record: the program is not being run.
+run
Starting program: /home/david/Programming/cpp_dev/MrText/build/tests/testlib 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/usr/lib64/libthread_db.so.1".

Breakpoint 1, BTree<int, 3>::BTree (this=0x7fffffffcc08) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:36
+target record-full
+n
+n
Process record does not support instruction 0xc5 at address 0x7ffff7b8c549.
Process record: failed to record execution log.

Program stopped.
0x00007ffff7b8c549 in ?? () from /usr/lib64/libc.so.6
+reverse-next
+next 
Cannot find bounds of current function
+reverse-step
+step 
Cannot find bounds of current function
+run
Starting program: /home/david/Programming/cpp_dev/MrText/build/tests/testlib 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/usr/lib64/libthread_db.so.1".

Breakpoint 1, BTree<int, 3>::BTree (this=0x7fffffffcc08) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:36
+n
+n
+n
+n
____C_A_T_C_H____T_E_S_T____6 () at /home/david/Programming/cpp_dev/MrText/tests/testlib.cpp:78
+n
+n
+s
BTree<int, 3>::insert_char (this=0x7fffffffcc08, val=3) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:53
+n
+n
+n
+n
+n
+n
+s
std::shared_ptr<BTreeNode<int, 3> >::shared_ptr (this=0x7fffffffcbb8) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/shared_ptr.h:203
+n
BTree<int, 3>::insert_char (this=0x7fffffffcc08, val=3) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:63
+s
std::shared_ptr<BTreeNode<int, 3> >::shared_ptr (this=0x7fffffffcba8) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/shared_ptr.h:203
+n

Program received signal SIGSEGV, Segmentation fault.
0x0000555555650ed5 in BTree<int, 3>::insert_non_full (this=0x7fffffffcc08, arg_node=std::shared_ptr<BTreeNode<int, 3>> (use count 2, weak count 0) = {...}, val=3) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:125
+print *arg_node
$1 = {
  keys = {0, 0},
  children = {std::shared_ptr<BTreeNode<int, 3>> (empty) = {
      get() = 0x0
    }, std::shared_ptr<BTreeNode<int, 3>> (empty) = {
      get() = 0x0
    }, std::shared_ptr<BTreeNode<int, 3>> (empty) = {
      get() = 0x0
    }},
  children_info = {std::shared_ptr<TextInfo> (empty) = {
      get() = 0x0
    }, std::shared_ptr<TextInfo> (empty) = {
      get() = 0x0
    }, std::shared_ptr<TextInfo> (empty) = {
      get() = 0x0
    }},
  cur_key_count = 0,
  leaf = false,
  weight = 0,
  text = "",
  info = {
    bytes = 0,
    chars = 0,
    line_breaks = 0
  }
}
+stop
+run
Starting program: /home/david/Programming/cpp_dev/MrText/build/tests/testlib 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/usr/lib64/libthread_db.so.1".

Breakpoint 1, BTree<int, 3>::BTree (this=0x7fffffffcc08) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:36
+exit
+reverse-step
Target multi-thread does not support this command.
+run
Starting program: /home/david/Programming/cpp_dev/MrText/build/tests/testlib 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/usr/lib64/libthread_db.so.1".

Breakpoint 1, BTree<int, 3>::BTree (this=0x7fffffffcc08) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:36
+n
+n
+n
+n
____C_A_T_C_H____T_E_S_T____6 () at /home/david/Programming/cpp_dev/MrText/tests/testlib.cpp:78
+n
+n
+s
BTree<int, 3>::insert_char (this=0x7fffffffcc08, val=3) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:53
+n
+n
+n
+n
+s
std::__shared_ptr_access<BTreeNode<int, 3>, (__gnu_cxx::_Lock_policy)2, false, false>::operator-> (this=0x7fffffffcbd8) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/shared_ptr_base.h:1358
+n
BTree<int, 3>::insert_char (this=0x7fffffffcc08, val=3) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:61
+s
std::shared_ptr<BTreeNode<int, 3> >::operator= (this=0x7fffffffcc08) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/shared_ptr.h:413
+n
BTree<int, 3>::insert_char (this=0x7fffffffcc08, val=3) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:62
+print *node
$2 = {
  keys = {0, 0},
  children = {std::shared_ptr<BTreeNode<int, 3>> (use count 1, weak count 0) = {
      get() = 0x5555556d0760
    }, std::shared_ptr<BTreeNode<int, 3>> (empty) = {
      get() = 0x0
    }, std::shared_ptr<BTreeNode<int, 3>> (empty) = {
      get() = 0x0
    }},
  children_info = {std::shared_ptr<TextInfo> (empty) = {
      get() = 0x0
    }, std::shared_ptr<TextInfo> (empty) = {
      get() = 0x0
    }, std::shared_ptr<TextInfo> (empty) = {
      get() = 0x0
    }},
  cur_key_count = 0,
  leaf = false,
  weight = 0,
  text = "",
  info = {
    bytes = 0,
    chars = 0,
    line_breaks = 0
  }
}
+s
std::shared_ptr<BTreeNode<int, 3> >::shared_ptr (this=0x7fffffffcbb8) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/shared_ptr.h:203
+n
BTree<int, 3>::insert_char (this=0x7fffffffcc08, val=3) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:63
+n

Program received signal SIGSEGV, Segmentation fault.
0x0000555555650ed5 in BTree<int, 3>::insert_non_full (this=0x7fffffffcc08, arg_node=std::shared_ptr<BTreeNode<int, 3>> (use count 2, weak count 0) = {...}, val=3) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:125
+print *arg_node
$3 = {
  keys = {0, 0},
  children = {std::shared_ptr<BTreeNode<int, 3>> (empty) = {
      get() = 0x0
    }, std::shared_ptr<BTreeNode<int, 3>> (empty) = {
      get() = 0x0
    }, std::shared_ptr<BTreeNode<int, 3>> (empty) = {
      get() = 0x0
    }},
  children_info = {std::shared_ptr<TextInfo> (empty) = {
      get() = 0x0
    }, std::shared_ptr<TextInfo> (empty) = {
      get() = 0x0
    }, std::shared_ptr<TextInfo> (empty) = {
      get() = 0x0
    }},
  cur_key_count = 0,
  leaf = false,
  weight = 0,
  text = "",
  info = {
    bytes = 0,
    chars = 0,
    line_breaks = 0
  }
}
+print idx
$4 = 0
+print val
$5 = 3
+s
Catch::handleSignal (sig=-664279752) at /home/david/Programming/cpp_dev/MrText/build/_deps/catch-src/single_include/catch2/catch.hpp:10896
+run
Starting program: /home/david/Programming/cpp_dev/MrText/build/tests/testlib 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/usr/lib64/libthread_db.so.1".

Breakpoint 1, BTree<int, 3>::BTree (this=0x7fffffffcc08) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:36
+n
+n
+n
+n
____C_A_T_C_H____T_E_S_T____6 () at /home/david/Programming/cpp_dev/MrText/tests/testlib.cpp:78
+n
+n
+s
BTree<int, 3>::insert_char (this=0x7fffffffcc08, val=3) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:53
+s
std::__shared_ptr_access<BTreeNode<int, 3>, (__gnu_cxx::_Lock_policy)2, false, false>::operator-> (this=0x7fffffffcc08) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/shared_ptr_base.h:1358
+n
BTree<int, 3>::insert_char (this=0x7fffffffcc08, val=3) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:54
+s
std::shared_ptr<BTreeNode<int, 3> >::shared_ptr (this=0x7fffffffcbd8) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/shared_ptr.h:201
+n
BTree<int, 3>::insert_char (this=0x7fffffffcc08, val=3) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:56
+s
std::make_unique<BTreeNode<int, 3>, char const (&) [1], bool> (__args=@0x7fffffffcbcf: false, __args=@0x7fffffffcbcf: false) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/unique_ptr.h:1077
+n
BTree<int, 3>::insert_char (this=0x7fffffffcc08, val=3) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:57
+n
+s
std::__shared_ptr_access<BTreeNode<int, 3>, (__gnu_cxx::_Lock_policy)2, false, false>::operator-> (this=0x7fffffffcbd8) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/shared_ptr_base.h:1358
+n
BTree<int, 3>::insert_char (this=0x7fffffffcc08, val=3) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:61
+s
std::shared_ptr<BTreeNode<int, 3> >::operator= (this=0x7fffffffcc08) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/shared_ptr.h:413
+n
BTree<int, 3>::insert_char (this=0x7fffffffcc08, val=3) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:62
+s
std::shared_ptr<BTreeNode<int, 3> >::shared_ptr (this=0x7fffffffcbb8) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/shared_ptr.h:203
+n
BTree<int, 3>::insert_char (this=0x7fffffffcc08, val=3) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:63
+s
std::shared_ptr<BTreeNode<int, 3> >::shared_ptr (this=0x7fffffffcba8) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/shared_ptr.h:203
+print *this
$6 = std::shared_ptr<BTreeNode<int, 3>> (empty) = {
  get() = 0x0
}
+s
std::__shared_ptr<BTreeNode<int, 3>, (__gnu_cxx::_Lock_policy)2>::__shared_ptr (this=0x7fffffffcba8) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/shared_ptr_base.h:1523
+s
std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count (this=0x7fffffffcbb0, __r=...) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/shared_ptr_base.h:1075
+s
+s
std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_add_ref_copy (this=0x5555556d19e0) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/shared_ptr_base.h:152
+s
__gnu_cxx::__atomic_add_dispatch (__mem=0x5555556d19e8, __val=1) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/ext/atomicity.h:108
+s
__gnu_cxx::__is_single_threaded () at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/ext/atomicity.h:52
+s
__gnu_cxx::__atomic_add_dispatch (__mem=0x5555556d19e8, __val=1) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/ext/atomicity.h:108
+s
+s
__gnu_cxx::__atomic_add_single (__mem=0x5555556d19e8, __val=1) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/ext/atomicity.h:92
+s
__gnu_cxx::__atomic_add_dispatch (__mem=0x5555556d19e8, __val=1) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/ext/atomicity.h:109
+s
std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_add_ref_copy (this=0x5555556d19e0) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/shared_ptr_base.h:152
+s
std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count (this=0x7fffffffcbb0, __r=...) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/shared_ptr_base.h:1077
+s
BTree<int, 3>::insert_non_full (this=0x7fffffffcc08, arg_node=std::shared_ptr<BTreeNode<int, 3>> (use count 3, weak count 0) = {...}, val=3) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:112
+s
std::__shared_ptr_access<BTreeNode<int, 3>, (__gnu_cxx::_Lock_policy)2, false, false>::operator-> (this=0x7fffffffcba8) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/shared_ptr_base.h:1358
+s
std::__shared_ptr_access<BTreeNode<int, 3>, (__gnu_cxx::_Lock_policy)2, false, false>::_M_get (this=0x7fffffffcba8) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/shared_ptr_base.h:1364
+print *this
$7 = {<No data fields>}
+s
std::__shared_ptr<BTreeNode<int, 3>, (__gnu_cxx::_Lock_policy)2>::get (this=0x7fffffffcba8) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/shared_ptr_base.h:1667
+print M_ptr
No symbol "M_ptr" in current context.
+print *this
$8 = {
  <std::__shared_ptr_access<BTreeNode<int, 3>, (__gnu_cxx::_Lock_policy)2, false, false>> = {<No data fields>}, 
  members of std::__shared_ptr<BTreeNode<int, 3>, (__gnu_cxx::_Lock_policy)2>:
  _M_ptr = 0x5555556d2240,
  _M_refcount = {
    _M_pi = 0x5555556d19e0
  }
}
+print *this->_M_ptr
$9 = {
  keys = {1, 0},
  children = {std::shared_ptr<BTreeNode<int, 3>> (use count 1, weak count 0) = {
      get() = 0x5555556d0760
    }, std::shared_ptr<BTreeNode<int, 3>> (use count 1, weak count 0) = {
      get() = 0x5555556e6e10
    }, std::shared_ptr<BTreeNode<int, 3>> (empty) = {
      get() = 0x0
    }},
  children_info = {std::shared_ptr<TextInfo> (empty) = {
      get() = 0x0
    }, std::shared_ptr<TextInfo> (empty) = {
      get() = 0x0
    }, std::shared_ptr<TextInfo> (empty) = {
      get() = 0x0
    }},
  cur_key_count = 1,
  leaf = false,
  weight = 0,
  text = "",
  info = {
    bytes = 0,
    chars = 0,
    line_breaks = 0
  }
}
+s
BTree<int, 3>::insert_non_full (this=0x7fffffffcc08, arg_node=std::shared_ptr<BTreeNode<int, 3>> (use count 3, weak count 0) = {...}, val=3) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:114
+s
std::__shared_ptr_access<BTreeNode<int, 3>, (__gnu_cxx::_Lock_policy)2, false, false>::operator-> (this=0x7fffffffcba8) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/shared_ptr_base.h:1358
+s
std::__shared_ptr_access<BTreeNode<int, 3>, (__gnu_cxx::_Lock_policy)2, false, false>::_M_get (this=0x7fffffffcba8) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/shared_ptr_base.h:1364
+n
BTree<int, 3>::insert_non_full (this=0x7fffffffcc08, arg_node=std::shared_ptr<BTreeNode<int, 3>> (use count 3, weak count 0) = {...}, val=3) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:121
+s
std::__shared_ptr_access<BTreeNode<int, 3>, (__gnu_cxx::_Lock_policy)2, false, false>::operator-> (this=0x7fffffffcba8) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/shared_ptr_base.h:1358
+n
BTree<int, 3>::insert_non_full (this=0x7fffffffcc08, arg_node=std::shared_ptr<BTreeNode<int, 3>> (use count 3, weak count 0) = {...}, val=3) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:124
+print idx
$10 = 0
+s
+print idx
$11 = 1
+arg_node->children[idx]
Undefined command: "arg_node->children".  Try "help".
+print *arg_node->children[1]
$12 = {
  keys = {0, 0},
  children = {std::shared_ptr<BTreeNode<int, 3>> (empty) = {
      get() = 0x0
    }, std::shared_ptr<BTreeNode<int, 3>> (empty) = {
      get() = 0x0
    }, std::shared_ptr<BTreeNode<int, 3>> (empty) = {
      get() = 0x0
    }},
  children_info = {std::shared_ptr<TextInfo> (empty) = {
      get() = 0x0
    }, std::shared_ptr<TextInfo> (empty) = {
      get() = 0x0
    }, std::shared_ptr<TextInfo> (empty) = {
      get() = 0x0
    }},
  cur_key_count = 0,
  leaf = false,
  weight = 0,
  text = "",
  info = {
    bytes = 0,
    chars = 0,
    line_breaks = 0
  }
}
+print ORDER
$13 = 3
+s
std::__shared_ptr_access<BTreeNode<int, 3>, (__gnu_cxx::_Lock_policy)2, false, false>::operator-> (this=0x7fffffffcba8) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/shared_ptr_base.h:1358
+n
BTree<int, 3>::insert_non_full (this=0x7fffffffcc08, arg_node=std::shared_ptr<BTreeNode<int, 3>> (use count 3, weak count 0) = {...}, val=3) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:131
+print *arg_node
$14 = {
  keys = {1, 0},
  children = {std::shared_ptr<BTreeNode<int, 3>> (use count 1, weak count 0) = {
      get() = 0x5555556d0760
    }, std::shared_ptr<BTreeNode<int, 3>> (use count 1, weak count 0) = {
      get() = 0x5555556e6e10
    }, std::shared_ptr<BTreeNode<int, 3>> (empty) = {
      get() = 0x0
    }},
  children_info = {std::shared_ptr<TextInfo> (empty) = {
      get() = 0x0
    }, std::shared_ptr<TextInfo> (empty) = {
      get() = 0x0
    }, std::shared_ptr<TextInfo> (empty) = {
      get() = 0x0
    }},
  cur_key_count = 1,
  leaf = false,
  weight = 0,
  text = "",
  info = {
    bytes = 0,
    chars = 0,
    line_breaks = 0
  }
}
+print *this
$15 = {
  root = std::shared_ptr<BTreeNode<int, 3>> (use count 3, weak count 0) = {
    get() = 0x5555556d2240
  }
}
+print *this->root
$16 = {
  keys = {1, 0},
  children = {std::shared_ptr<BTreeNode<int, 3>> (use count 1, weak count 0) = {
      get() = 0x5555556d0760
    }, std::shared_ptr<BTreeNode<int, 3>> (use count 1, weak count 0) = {
      get() = 0x5555556e6e10
    }, std::shared_ptr<BTreeNode<int, 3>> (empty) = {
      get() = 0x0
    }},
  children_info = {std::shared_ptr<TextInfo> (empty) = {
      get() = 0x0
    }, std::shared_ptr<TextInfo> (empty) = {
      get() = 0x0
    }, std::shared_ptr<TextInfo> (empty) = {
      get() = 0x0
    }},
  cur_key_count = 1,
  leaf = false,
  weight = 0,
  text = "",
  info = {
    bytes = 0,
    chars = 0,
    line_breaks = 0
  }
}
+print idx
$17 = 1
+arg_node->children[1]
Undefined command: "arg_node->children".  Try "help".
+print *arg_node->children[1]
$18 = {
  keys = {0, 0},
  children = {std::shared_ptr<BTreeNode<int, 3>> (empty) = {
      get() = 0x0
    }, std::shared_ptr<BTreeNode<int, 3>> (empty) = {
      get() = 0x0
    }, std::shared_ptr<BTreeNode<int, 3>> (empty) = {
      get() = 0x0
    }},
  children_info = {std::shared_ptr<TextInfo> (empty) = {
      get() = 0x0
    }, std::shared_ptr<TextInfo> (empty) = {
      get() = 0x0
    }, std::shared_ptr<TextInfo> (empty) = {
      get() = 0x0
    }},
  cur_key_count = 0,
  leaf = false,
  weight = 0,
  text = "",
  info = {
    bytes = 0,
    chars = 0,
    line_breaks = 0
  }
}
+run
Starting program: /home/david/Programming/cpp_dev/MrText/build/tests/testlib 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/usr/lib64/libthread_db.so.1".

Breakpoint 1, BTree<int, 3>::BTree (this=0x7fffffffcc08) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:36
+n
+n
+n
+n
____C_A_T_C_H____T_E_S_T____6 () at /home/david/Programming/cpp_dev/MrText/tests/testlib.cpp:78
+s
BTree<int, 3>::insert_char (this=0x7fffffffcc08, val=1) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:53
+print *root->cur_key_count
Cannot access memory at address 0x0
+s
std::__shared_ptr_access<BTreeNode<int, 3>, (__gnu_cxx::_Lock_policy)2, false, false>::operator-> (this=0x7fffffffcc08) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/shared_ptr_base.h:1358
+n
BTree<int, 3>::insert_char (this=0x7fffffffcc08, val=1) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:65
+s
std::shared_ptr<BTreeNode<int, 3> >::shared_ptr (this=0x7fffffffcb98) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/shared_ptr.h:203
+n
BTree<int, 3>::insert_char (this=0x7fffffffcc08, val=1) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:67
+print *this
$19 = {
  root = std::shared_ptr<BTreeNode<int, 3>> (use count 1, weak count 0) = {
    get() = 0x5555556d0760
  }
}
+print *this->root
$20 = {
  keys = {1, 0},
  children = {std::shared_ptr<BTreeNode<int, 3>> (empty) = {
      get() = 0x0
    }, std::shared_ptr<BTreeNode<int, 3>> (empty) = {
      get() = 0x0
    }, std::shared_ptr<BTreeNode<int, 3>> (empty) = {
      get() = 0x0
    }},
  children_info = {std::shared_ptr<TextInfo> (empty) = {
      get() = 0x0
    }, std::shared_ptr<TextInfo> (empty) = {
      get() = 0x0
    }, std::shared_ptr<TextInfo> (empty) = {
      get() = 0x0
    }},
  cur_key_count = 1,
  leaf = true,
  weight = 0,
  text = "",
  info = {
    bytes = 0,
    chars = 0,
    line_breaks = 0
  }
}
+s
____C_A_T_C_H____T_E_S_T____6 () at /home/david/Programming/cpp_dev/MrText/tests/testlib.cpp:79
+s
BTree<int, 3>::insert_char (this=0x7fffffffcc08, val=2) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:53
+s
std::__shared_ptr_access<BTreeNode<int, 3>, (__gnu_cxx::_Lock_policy)2, false, false>::operator-> (this=0x7fffffffcc08) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/shared_ptr_base.h:1358
+n
BTree<int, 3>::insert_char (this=0x7fffffffcc08, val=2) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:65
+s
std::shared_ptr<BTreeNode<int, 3> >::shared_ptr (this=0x7fffffffcb98) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/shared_ptr.h:203
+n
BTree<int, 3>::insert_char (this=0x7fffffffcc08, val=2) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:67
+print *this
$21 = {
  root = std::shared_ptr<BTreeNode<int, 3>> (use count 1, weak count 0) = {
    get() = 0x5555556d0760
  }
}
+print *this->root
$22 = {
  keys = {1, 2},
  children = {std::shared_ptr<BTreeNode<int, 3>> (empty) = {
      get() = 0x0
    }, std::shared_ptr<BTreeNode<int, 3>> (empty) = {
      get() = 0x0
    }, std::shared_ptr<BTreeNode<int, 3>> (empty) = {
      get() = 0x0
    }},
  children_info = {std::shared_ptr<TextInfo> (empty) = {
      get() = 0x0
    }, std::shared_ptr<TextInfo> (empty) = {
      get() = 0x0
    }, std::shared_ptr<TextInfo> (empty) = {
      get() = 0x0
    }},
  cur_key_count = 2,
  leaf = true,
  weight = 0,
  text = "",
  info = {
    bytes = 0,
    chars = 0,
    line_breaks = 0
  }
}
+s
____C_A_T_C_H____T_E_S_T____6 () at /home/david/Programming/cpp_dev/MrText/tests/testlib.cpp:80
+s
BTree<int, 3>::insert_char (this=0x7fffffffcc08, val=3) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:53
+s
std::__shared_ptr_access<BTreeNode<int, 3>, (__gnu_cxx::_Lock_policy)2, false, false>::operator-> (this=0x7fffffffcc08) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/shared_ptr_base.h:1358
+s
std::__shared_ptr_access<BTreeNode<int, 3>, (__gnu_cxx::_Lock_policy)2, false, false>::_M_get (this=0x7fffffffcc08) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/shared_ptr_base.h:1364
+n
BTree<int, 3>::insert_char (this=0x7fffffffcc08, val=3) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:54
+s
std::shared_ptr<BTreeNode<int, 3> >::shared_ptr (this=0x7fffffffcbd8) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/shared_ptr.h:201
+n
BTree<int, 3>::insert_char (this=0x7fffffffcc08, val=3) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:56
+n
+n
+s
std::__shared_ptr_access<BTreeNode<int, 3>, (__gnu_cxx::_Lock_policy)2, false, false>::operator-> (this=0x7fffffffcbd8) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/shared_ptr_base.h:1358
+n
BTree<int, 3>::insert_char (this=0x7fffffffcc08, val=3) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:61
+s
std::shared_ptr<BTreeNode<int, 3> >::operator= (this=0x7fffffffcc08) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/shared_ptr.h:413
+n
BTree<int, 3>::insert_char (this=0x7fffffffcc08, val=3) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:62
+print *node
$23 = {
  keys = {0, 0},
  children = {std::shared_ptr<BTreeNode<int, 3>> (use count 1, weak count 0) = {
      get() = 0x5555556d0760
    }, std::shared_ptr<BTreeNode<int, 3>> (empty) = {
      get() = 0x0
    }, std::shared_ptr<BTreeNode<int, 3>> (empty) = {
      get() = 0x0
    }},
  children_info = {std::shared_ptr<TextInfo> (empty) = {
      get() = 0x0
    }, std::shared_ptr<TextInfo> (empty) = {
      get() = 0x0
    }, std::shared_ptr<TextInfo> (empty) = {
      get() = 0x0
    }},
  cur_key_count = 0,
  leaf = false,
  weight = 0,
  text = "",
  info = {
    bytes = 0,
    chars = 0,
    line_breaks = 0
  }
}
+print *node->children[0]
$24 = {
  keys = {1, 2},
  children = {std::shared_ptr<BTreeNode<int, 3>> (empty) = {
      get() = 0x0
    }, std::shared_ptr<BTreeNode<int, 3>> (empty) = {
      get() = 0x0
    }, std::shared_ptr<BTreeNode<int, 3>> (empty) = {
      get() = 0x0
    }},
  children_info = {std::shared_ptr<TextInfo> (empty) = {
      get() = 0x0
    }, std::shared_ptr<TextInfo> (empty) = {
      get() = 0x0
    }, std::shared_ptr<TextInfo> (empty) = {
      get() = 0x0
    }},
  cur_key_count = 2,
  leaf = true,
  weight = 0,
  text = "",
  info = {
    bytes = 0,
    chars = 0,
    line_breaks = 0
  }
}
+exit
Reading symbols from ./build/tests/testlib...
+break insert
Breakpoint 1 at 0x5cb05: insert. (11 locations)
+break delete
Function "delete" not defined.
+delete
+break Rope
Breakpoint 2 at 0xfb4a4: file /home/david/Programming/cpp_dev/MrText/src/Rope.cpp, line 15.
+run
Starting program: /home/david/Programming/cpp_dev/MrText/build/tests/testlib 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/usr/lib64/libthread_db.so.1".

Breakpoint 2, Rope<5u>::Rope (this=0x7fffffffcb40) at /home/david/Programming/cpp_dev/MrText/src/Rope.cpp:15
+exit
Reading symbols from ./build/tests/testlib...
+break Rope
Breakpoint 1 at 0xa9aa4: file /home/david/Programming/cpp_dev/MrText/src/../include/MrText/Rope.hpp, line 31.
+run
Starting program: /home/david/Programming/cpp_dev/MrText/build/tests/testlib 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/usr/lib64/libthread_db.so.1".

Breakpoint 1, Rope::Rope (this=0x7fffffffcb38) at /home/david/Programming/cpp_dev/MrText/src/../include/MrText/Rope.hpp:31
+n
+n
____C_A_T_C_H____T_E_S_T____6 () at /home/david/Programming/cpp_dev/MrText/tests/testlib.cpp:82
+s
std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string (this=0x7fffffffcbb8, __str="left") at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/basic_string.h:554
+s
std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_get_allocator (this=0x7fffffffcbf8) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/basic_string.h:347
+s
__gnu_cxx::__alloc_traits<std::allocator<char>, char>::_S_select_on_copy (__a=...) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/ext/alloc_traits.h:98
+s
std::allocator_traits<std::allocator<char> >::select_on_container_copy_construction (__rhs=...) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/alloc_traits.h:621
+s
std::allocator<char>::allocator (this=0x7fffffffca77, __a=...) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/allocator.h:166
+s
std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string (this=0x7fffffffcbb8, __str="left") at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/basic_string.h:553
+s
std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider::_Alloc_hider (this=0x7fffffffcbb8, __dat=0x7fffffffcbc8 "", __a=...) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/basic_string.h:198
+s
std::allocator<char>::allocator (this=0x7fffffffcbb8, __a=...) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/allocator.h:166
+s
std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider::_Alloc_hider (this=0x7fffffffcbb8, __dat=0x7fffffffcbc8 "", __a=...) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/basic_string.h:198
+s
std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string (this=0x7fffffffcbb8, __str="left") at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/basic_string.h:556
+s
std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_data (this=0x7fffffffcbf8) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/basic_string.h:228
+s
std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_data (this=0x7fffffffcbf8) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/basic_string.h:228
+s
std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::length (this=0x7fffffffcbf8) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/basic_string.h:1084
+s
std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*> (this=0x7fffffffcbb8, __beg=0x7fffffffcc08 "left", __end=0x7fffffffcc0c "") at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/basic_string.tcc:225
+s
std::distance<char*> (__first=0x7fffffffcc08 "left", __last=0x7fffffffcc0c "") at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/stl_iterator_base_funcs.h:151
+s
std::__distance<char*> (__first=0x7fffffffcc08 "left", __last=0x7fffffffcc0c "") at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/stl_iterator_base_funcs.h:106
+s
std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*> (this=0x7fffffffcbb8, __beg=0x7fffffffcc08 "left", __end=0x7fffffffcc0c "") at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/basic_string.tcc:225
+s
+s
+s
std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag)::_Guard::_Guard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) (this=0x7fffffffc9a0, __s=0x7fffffffcbb8) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/basic_string.tcc:239
+s
std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*> (this=0x7fffffffcbb8, __beg=0x7fffffffcc08 "left", __end=0x7fffffffcc0c "") at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/basic_string.tcc:247
+s
std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_data (this=0x7fffffffcbb8) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/basic_string.h:228
+s
std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy_chars (__p=0x7fffffffcbc8 "", __k1=0x7fffffffcc08 "left", __k2=0x7fffffffcc0c "") at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/basic_string.h:483
+n
std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*> (this=0x7fffffffcbb8, __beg=0x7fffffffcc08 "left", __end=0x7fffffffcc0c "") at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/basic_string.tcc:249
+n
+n
+n
std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string (this=0x7fffffffcbb8, __str="left") at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/basic_string.h:558
+n

Program received signal SIGSEGV, Segmentation fault.
0x000055555564f277 in Rope::_insert (this=0x7fffffffcb38, node=std::shared_ptr<Node> (empty) = {...}, new_line="left") at /home/david/Programming/cpp_dev/MrText/src/Rope.cpp:26
warning: Source file is more recent than executable.
+exit
Reading symbols from ./build/tests/testlib...
+break BRope
Breakpoint 1 at 0xfd5f5: file /home/david/Programming/cpp_dev/MrText/src/BTree.cpp, line 10.
+run
Starting program: /home/david/Programming/cpp_dev/MrText/build/tests/testlib 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/usr/lib64/libthread_db.so.1".

Breakpoint 1, BRope::BRope (this=0x7fffffffcb08) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:10
+print *this
$1 = {
  root = {
    keys = {
      _M_elems = {{
          first = 17977337015440676608,
          second = std::shared_ptr<BTreeNode> (use count 1207959552, weak count 1224232330) = {
            get() = 0x7fffffffcbd0
          }
        }, {
          first = 19,
          second = std::shared_ptr<BTreeNode> (use count -12448, weak count 32766) = {
            get() = 0x7fffffffcf38
          }
        }}
    },
    children = {
      _M_elems = {{
          first = 93824993899200,
          second = <error reading variable: Cannot access memory at address 0xf97c54c47cd29708>
        }, {
          first = 140737488342064,
          second = std::shared_ptr<BTreeNode> (expired, weak count 0) = {
            get() = 0x555555575121 <Catch::FatalConditionHandler::engage_platform()+209>
          }
        }, {
          first = 6,
          second = std::shared_ptr<BTreeNode> (expired, weak count 0) = {
            get() = 0x7fffffffd5f8
          }
        }}
    },
    line = <error: Cannot access memory at address 0x7fff00000000>,
    data = {
      bytes = 0,
      chars = 0,
      line_breaks = 0
    }
  }
}
+print *this
$2 = {
  root = {
    keys = {
      _M_elems = {{
          first = 17977337015440676608,
          second = std::shared_ptr<BTreeNode> (use count 1207959552, weak count 1224232330) = {
            get() = 0x7fffffffcbd0
          }
        }, {
          first = 19,
          second = std::shared_ptr<BTreeNode> (use count -12448, weak count 32766) = {
            get() = 0x7fffffffcf38
          }
        }}
    },
    children = {
      _M_elems = {{
          first = 93824993899200,
          second = <error reading variable: Cannot access memory at address 0xf97c54c47cd29708>
        }, {
          first = 140737488342064,
          second = std::shared_ptr<BTreeNode> (expired, weak count 0) = {
            get() = 0x555555575121 <Catch::FatalConditionHandler::engage_platform()+209>
          }
        }, {
          first = 6,
          second = std::shared_ptr<BTreeNode> (expired, weak count 0) = {
            get() = 0x7fffffffd5f8
          }
        }}
    },
    line = <error: Cannot access memory at address 0x7fff00000000>,
    data = {
      bytes = 0,
      chars = 0,
      line_breaks = 0
    }
  }
}
+n
____C_A_T_C_H____T_E_S_T____8 () at /home/david/Programming/cpp_dev/MrText/tests/testlib.cpp:99
+s
operator"" _catch_sr(char const*, unsigned long) (rawChars=0x5555556565cb "REQUIRE_FALSE", size=13) at /home/david/Programming/cpp_dev/MrText/build/_deps/catch-src/single_include/catch2/catch.hpp:684
+n
____C_A_T_C_H____T_E_S_T____8 () at /home/david/Programming/cpp_dev/MrText/tests/testlib.cpp:100
+run
Starting program: /home/david/Programming/cpp_dev/MrText/build/tests/testlib 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/usr/lib64/libthread_db.so.1".

Breakpoint 1, BRope::BRope (this=0x7fffffffcb08) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:10
+s
std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> > (this=0x7fffffffc998, __s=0x555555653f77 "", __a=...) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/basic_string.h:650
+n
+n
+n
+n
____C_A_T_C_H____T_E_S_T____8 () at /home/david/Programming/cpp_dev/MrText/tests/testlib.cpp:99
+s
operator"" _catch_sr(char const*, unsigned long) (rawChars=0x5555556565cb "REQUIRE_FALSE", size=13) at /home/david/Programming/cpp_dev/MrText/build/_deps/catch-src/single_include/catch2/catch.hpp:684
+s
Catch::StringRef::StringRef (this=0x7fffffffc9a8, rawChars=0x5555556565cb "REQUIRE_FALSE", size=13) at /home/david/Programming/cpp_dev/MrText/build/_deps/catch-src/single_include/catch2/catch.hpp:622
+s
+print rope
No symbol "rope" in current context.
+s
Catch::SourceLineInfo::SourceLineInfo (this=0x7fffffffca98, _file=0x555555655083 "/home/david/Programming/cpp_dev/MrText/tests/testlib.cpp", _line=99) at /home/david/Programming/cpp_dev/MrText/build/_deps/catch-src/single_include/catch2/catch.hpp:505
+n
+n
____C_A_T_C_H____T_E_S_T____8 () at /home/david/Programming/cpp_dev/MrText/tests/testlib.cpp:100
+print rope
$3 = {
  root = {
    keys = {
      _M_elems = {{
          first = 0,
          second = std::shared_ptr<BTreeNode> (empty) = {
            get() = 0x0
          }
        }, {
          first = 0,
          second = std::shared_ptr<BTreeNode> (empty) = {
            get() = 0x0
          }
        }}
    },
    children = {
      _M_elems = {{
          first = 0,
          second = std::shared_ptr<BTreeNode> (empty) = {
            get() = 0x0
          }
        }, {
          first = 0,
          second = std::shared_ptr<BTreeNode> (empty) = {
            get() = 0x0
          }
        }, {
          first = 0,
          second = std::shared_ptr<BTreeNode> (empty) = {
            get() = 0x0
          }
        }}
    },
    line = "",
    data = {
      bytes = 0,
      chars = 0,
      line_breaks = 0
    }
  }
}
+exit
Reading symbols from ./build/tests/testlib...
+break BRope
Breakpoint 1 at 0xfd674: file /home/david/Programming/cpp_dev/MrText/src/BTree.cpp, line 16.
+run
Starting program: /home/david/Programming/cpp_dev/MrText/build/tests/testlib 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/usr/lib64/libthread_db.so.1".

Breakpoint 1, BRope::BRope (this=0x7fffffffcaf8) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:16
+print *this
$1 = {
  root = std::shared_ptr<BTreeNode> (use count -12448, weak count 32766) = {
    get() = 0x0
  }
}
+print *this->root
Cannot access memory at address 0x0
+exit
Reading symbols from ./build/tests/testlib...
+break BRope
Breakpoint 1 at 0xfd689: file /home/david/Programming/cpp_dev/MrText/src/BTree.cpp, line 16.
+run
Starting program: /home/david/Programming/cpp_dev/MrText/build/tests/testlib 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/usr/lib64/libthread_db.so.1".

Breakpoint 1, BRope::BRope (this=0x7fffffffcaf8) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:16
+print this->root
$1 = std::shared_ptr<BTreeNode> (use count -12448, weak count 32766) = {
  get() = 0x0
}
+n
+n
+n
+s
____C_A_T_C_H____T_E_S_T____8 () at /home/david/Programming/cpp_dev/MrText/tests/testlib.cpp:99
+s
std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string (this=0x7fffffffcb98, __str="left") at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/basic_string.h:554
+n
+n
+n
+n
____C_A_T_C_H____T_E_S_T____8 () at /home/david/Programming/cpp_dev/MrText/tests/testlib.cpp:100
+print rope
$2 = {
  root = std::shared_ptr<BTreeNode> (use count 1, weak count 0) = {
    get() = 0x5555556e5e30
  }
}
+print *rope->root
$3 = {
  keys = {
    _M_elems = {{
        first = 1,
        second = std::shared_ptr<BTreeNode> (use count 2, weak count 0) = {
          get() = 0x5555556d1270
        }
      }, {
        first = 1,
        second = std::shared_ptr<BTreeNode> (use count 2, weak count 0) = {
          get() = 0x5555556d1270
        }
      }}
  },
  children = {
    _M_elems = {{
        first = 0,
        second = std::shared_ptr<BTreeNode> (empty) = {
          get() = 0x0
        }
      }, {
        first = 0,
        second = std::shared_ptr<BTreeNode> (empty) = {
          get() = 0x0
        }
      }, {
        first = 0,
        second = std::shared_ptr<BTreeNode> (empty) = {
          get() = 0x0
        }
      }}
  },
  line = "",
  data = {
    bytes = 0,
    chars = 0,
    line_breaks = 0
  }
}
+exit
Reading symbols from ./build/tests/testlib...
+break BRope
Breakpoint 1 at 0xfd689: file /home/david/Programming/cpp_dev/MrText/src/BTree.cpp, line 16.
+run
Starting program: /home/david/Programming/cpp_dev/MrText/build/tests/testlib 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/usr/lib64/libthread_db.so.1".

Breakpoint 1, BRope::BRope (this=0x7fffffffcaf8) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:16
+n
+n
+n
+n
____C_A_T_C_H____T_E_S_T____8 () at /home/david/Programming/cpp_dev/MrText/tests/testlib.cpp:99
+s
std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string (this=0x7fffffffcb98, __str="left") at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/basic_string.h:554
+n
+n
+n
+print *this
$1 = "left"
+n
____C_A_T_C_H____T_E_S_T____8 () at /home/david/Programming/cpp_dev/MrText/tests/testlib.cpp:100
+print *rope->root
$2 = {
  keys = {
    _M_elems = {{
        first = 1,
        second = std::shared_ptr<BTreeNode> (use count 1, weak count 0) = {
          get() = 0x5555556d1270
        }
      }, {
        first = 0,
        second = std::shared_ptr<BTreeNode> (empty) = {
          get() = 0x0
        }
      }}
  },
  children = {
    _M_elems = {{
        first = 0,
        second = std::shared_ptr<BTreeNode> (empty) = {
          get() = 0x0
        }
      }, {
        first = 0,
        second = std::shared_ptr<BTreeNode> (empty) = {
          get() = 0x0
        }
      }, {
        first = 0,
        second = std::shared_ptr<BTreeNode> (empty) = {
          get() = 0x0
        }
      }}
  },
  line = "",
  data = {
    bytes = 0,
    chars = 0,
    line_breaks = 0
  }
}
+s
std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string (this=0x7fffffffcb78, __str="right") at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/basic_string.h:554
+n
+n
+n
+n
____C_A_T_C_H____T_E_S_T____8 () at /home/david/Programming/cpp_dev/MrText/tests/testlib.cpp:101
+print *rope->root
$3 = {
  keys = {
    _M_elems = {{
        first = 1,
        second = std::shared_ptr<BTreeNode> (use count 1, weak count 0) = {
          get() = 0x5555556d1270
        }
      }, {
        first = 2,
        second = std::shared_ptr<BTreeNode> (use count 1, weak count 0) = {
          get() = 0x5555556d1340
        }
      }}
  },
  children = {
    _M_elems = {{
        first = 0,
        second = std::shared_ptr<BTreeNode> (empty) = {
          get() = 0x0
        }
      }, {
        first = 0,
        second = std::shared_ptr<BTreeNode> (empty) = {
          get() = 0x0
        }
      }, {
        first = 0,
        second = std::shared_ptr<BTreeNode> (empty) = {
          get() = 0x0
        }
      }}
  },
  line = "",
  data = {
    bytes = 0,
    chars = 0,
    line_breaks = 0
  }
}
+s
std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string (this=0x7fffffffcb58, __str="left12") at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/basic_string.h:554
+n
+n
+n
+n
____C_A_T_C_H____T_E_S_T____8 () at /home/david/Programming/cpp_dev/MrText/tests/testlib.cpp:102
+print *rope->root
$4 = {
  keys = {
    _M_elems = {{
        first = 1,
        second = std::shared_ptr<BTreeNode> (use count 1, weak count 0) = {
          get() = 0x5555556d1270
        }
      }, {
        first = 2,
        second = std::shared_ptr<BTreeNode> (use count 1, weak count 0) = {
          get() = 0x5555556d1340
        }
      }}
  },
  children = {
    _M_elems = {{
        first = 0,
        second = std::shared_ptr<BTreeNode> (empty) = {
          get() = 0x0
        }
      }, {
        first = 0,
        second = std::shared_ptr<BTreeNode> (empty) = {
          get() = 0x0
        }
      }, {
        first = 0,
        second = std::shared_ptr<BTreeNode> (empty) = {
          get() = 0x0
        }
      }}
  },
  line = "",
  data = {
    bytes = 0,
    chars = 0,
    line_breaks = 0
  }
}
+print rope->root->keys[0].second
$5 = std::shared_ptr<BTreeNode> (use count 1, weak count 0) = {
  get() = 0x5555556d1270
}
+print *rope->root->keys[0].second
$6 = {
  keys = {
    _M_elems = {{
        first = 0,
        second = std::shared_ptr<BTreeNode> (empty) = {
          get() = 0x0
        }
      }, {
        first = 0,
        second = std::shared_ptr<BTreeNode> (empty) = {
          get() = 0x0
        }
      }}
  },
  children = {
    _M_elems = {{
        first = 0,
        second = std::shared_ptr<BTreeNode> (empty) = {
          get() = 0x0
        }
      }, {
        first = 0,
        second = std::shared_ptr<BTreeNode> (empty) = {
          get() = 0x0
        }
      }, {
        first = 0,
        second = std::shared_ptr<BTreeNode> (empty) = {
          get() = 0x0
        }
      }}
  },
  line = "left",
  data = {
    bytes = 4,
    chars = 4,
    line_breaks = 0
  }
}
+exit
Reading symbols from ./build/tests/testlib...
+break BRope
Breakpoint 1 at 0xfd6e9: file /home/david/Programming/cpp_dev/MrText/src/BTree.cpp, line 16.
+run
Starting program: /home/david/Programming/cpp_dev/MrText/build/tests/testlib 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/usr/lib64/libthread_db.so.1".

Breakpoint 1, BRope::BRope (this=0x7fffffffcad8) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:16
+n
+n
+n
+n
____C_A_T_C_H____T_E_S_T____8 () at /home/david/Programming/cpp_dev/MrText/tests/testlib.cpp:99
+s
std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string (this=0x7fffffffcb98, __str="first") at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/basic_string.h:554
+s
std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_get_allocator (this=0x7fffffffcc18) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/basic_string.h:347
+s
__gnu_cxx::__alloc_traits<std::allocator<char>, char>::_S_select_on_copy (__a=...) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/ext/alloc_traits.h:98
+s
std::allocator_traits<std::allocator<char> >::select_on_container_copy_construction (__rhs=...) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/alloc_traits.h:621
+s
std::allocator<char>::allocator (this=0x7fffffffc9d7, __a=...) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/allocator.h:166
+s
std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string (this=0x7fffffffcb98, __str="first") at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/basic_string.h:553
+s
std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider::_Alloc_hider (this=0x7fffffffcb98, __dat=0x7fffffffcba8 "", __a=...) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/basic_string.h:198
+s
std::allocator<char>::allocator (this=0x7fffffffcb98, __a=...) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/allocator.h:166
+s
std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider::_Alloc_hider (this=0x7fffffffcb98, __dat=0x7fffffffcba8 "", __a=...) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/basic_string.h:198
+s
std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string (this=0x7fffffffcb98, __str="first") at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/basic_string.h:556
+s
std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_data (this=0x7fffffffcc18) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/basic_string.h:228
+s
std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_data (this=0x7fffffffcc18) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/basic_string.h:228
+s
std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::length (this=0x7fffffffcc18) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/basic_string.h:1084
+s
std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*> (this=0x7fffffffcb98, __beg=0x7fffffffcc28 "first", __end=0x7fffffffcc2d "") at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/basic_string.tcc:225
+s
std::distance<char*> (__first=0x7fffffffcc28 "first", __last=0x7fffffffcc2d "") at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/stl_iterator_base_funcs.h:151
+s
std::__distance<char*> (__first=0x7fffffffcc28 "first", __last=0x7fffffffcc2d "") at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/stl_iterator_base_funcs.h:106
+s
std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*> (this=0x7fffffffcb98, __beg=0x7fffffffcc28 "first", __end=0x7fffffffcc2d "") at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/basic_string.tcc:225
+s
+s
+s
std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag)::_Guard::_Guard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) (this=0x7fffffffc900, __s=0x7fffffffcb98) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/basic_string.tcc:239
+s
std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*> (this=0x7fffffffcb98, __beg=0x7fffffffcc28 "first", __end=0x7fffffffcc2d "") at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/basic_string.tcc:247
+s
std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_data (this=0x7fffffffcb98) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/basic_string.h:228
+s
std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy_chars (__p=0x7fffffffcba8 "", __k1=0x7fffffffcc28 "first", __k2=0x7fffffffcc2d "") at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/basic_string.h:483
+s
std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy (__d=0x7fffffffcba8 "", __s=0x7fffffffcc28 "first", __n=5) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/basic_string.h:432
+s
+s
std::char_traits<char>::copy (__s1=0x7fffffffcba8 "", __s2=0x7fffffffcc28 "first", __n=5) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/char_traits.h:421
+s
+s
+s
std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy (__d=0x7fffffffcba8 "first", __s=0x7fffffffcc28 "first", __n=5) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/basic_string.h:436
+s
std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*> (this=0x7fffffffcb98, __beg=0x7fffffffcc28 "first", __end=0x7fffffffcc2d "") at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/basic_string.tcc:249
+s
+s
std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_set_length (this=0x7fffffffcb98, __n=5) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/basic_string.h:261
+s
std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_length (this=0x7fffffffcb98, __length=5) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/basic_string.h:223
+s
std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_set_length (this=0x7fffffffcb98, __n=5) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/basic_string.h:262
+s
std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_data (this=0x7fffffffcb98) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/basic_string.h:228
+s
std::char_traits<char>::assign (__c1=@0x7fffffffcbad: 0 '\000', __c2=@0x7fffffffc877: 0 '\000') at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/char_traits.h:350
+s
+s
std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_set_length (this=0x7fffffffcb98, __n=5) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/basic_string.h:263
+s
std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*> (this=0x7fffffffcb98, __beg=0x7fffffffcc28 "first", __end=0x7fffffffcc2d "") at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/basic_string.tcc:252
+s
std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag)::_Guard::~_Guard() (this=0x7fffffffc900) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/basic_string.tcc:242
+s
std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string (this=0x7fffffffcb98, __str="first") at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/basic_string.h:558
+s
BRope::insert (this=0x7fffffffcad8, line_num=1, line="first") at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:39
+s
std::operator==<BTreeNode>(std::shared_ptr<BTreeNode> const&, decltype(nullptr)) (__a=std::shared_ptr<BTreeNode> (use count 1, weak count 0) = {...}) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/shared_ptr.h:561
+n
BRope::insert (this=0x7fffffffcad8, line_num=1, line="first") at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:49
+n
+n
+n
+n
+s
std::shared_ptr<BTreeNode>::shared_ptr (this=0x7fffffffc968) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/shared_ptr.h:203
+n
BRope::insert (this=0x7fffffffcad8, line_num=1, line="first") at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:59
+s
std::pair<unsigned long, std::shared_ptr<BTreeNode> >::~pair (this=0x7fffffffc978) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/stl_pair.h:284
+s
std::shared_ptr<BTreeNode>::~shared_ptr (this=0x7fffffffc980) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/shared_ptr.h:175
+s
std::__shared_ptr<BTreeNode, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr (this=0x7fffffffc980) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/shared_ptr_base.h:1525
+n
____C_A_T_C_H____T_E_S_T____8 () at /home/david/Programming/cpp_dev/MrText/tests/testlib.cpp:100
+print *rope->root->keys
No symbol "operator*" in current context.
+print rope->root->keys
$1 = {
  _M_elems = {{
      first = 1,
      second = std::shared_ptr<BTreeNode> (use count 1, weak count 0) = {
        get() = 0x5555556d1270
      }
    }, {
      first = 0,
      second = std::shared_ptr<BTreeNode> (empty) = {
        get() = 0x0
      }
    }}
}
+n
+print rope->root->keys
$2 = {
  _M_elems = {{
      first = 1,
      second = std::shared_ptr<BTreeNode> (use count 1, weak count 0) = {
        get() = 0x5555556d1270
      }
    }, {
      first = 2,
      second = std::shared_ptr<BTreeNode> (use count 1, weak count 0) = {
        get() = 0x5555556d1340
      }
    }}
}
+n
+print rope->root->keys
$3 = {
  _M_elems = {{
      first = 1,
      second = std::shared_ptr<BTreeNode> (use count 1, weak count 0) = {
        get() = 0x5555556d1270
      }
    }, {
      first = 2,
      second = std::shared_ptr<BTreeNode> (use count 1, weak count 0) = {
        get() = 0x5555556d1340
      }
    }}
}
+exit
Reading symbols from ./build/tests/testlib...
+break BRope
Breakpoint 1 at 0xfd7e9: file /home/david/Programming/cpp_dev/MrText/src/BTree.cpp, line 28.
+run
Starting program: /home/david/Programming/cpp_dev/MrText/build/tests/testlib 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/usr/lib64/libthread_db.so.1".

Breakpoint 1, BRope::BRope (this=0x7fffffffcad8) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:28
warning: Source file is more recent than executable.
+n
+n
+n
+n
____C_A_T_C_H____T_E_S_T____8 () at /home/david/Programming/cpp_dev/MrText/tests/testlib.cpp:99
+s
std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string (this=0x7fffffffcb98, __str="first") at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/basic_string.h:554
+s
std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_get_allocator (this=0x7fffffffcc18) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/basic_string.h:347
+n
std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string (this=0x7fffffffcb98, __str="first") at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/basic_string.h:553
+n
+n
+n
____C_A_T_C_H____T_E_S_T____8 () at /home/david/Programming/cpp_dev/MrText/tests/testlib.cpp:100
+print *rope->root
$1 = {
  keys = {
    _M_elems = {{
        first = 1,
        second = std::shared_ptr<BTreeNode> (use count 1, weak count 0) = {
          get() = 0x5555556f2c20
        }
      }, {
        first = 0,
        second = std::shared_ptr<BTreeNode> (empty) = {
          get() = 0x0
        }
      }}
  },
  left = {
    _M_elems = {{
        first = 0,
        second = std::shared_ptr<BTreeNode> (empty) = {
          get() = 0x0
        }
      }, {
        first = 0,
        second = std::shared_ptr<BTreeNode> (empty) = {
          get() = 0x0
        }
      }, {
        first = 0,
        second = std::shared_ptr<BTreeNode> (empty) = {
          get() = 0x0
        }
      }}
  },
  right = {
    _M_elems = {{
        first = 0,
        second = std::shared_ptr<BTreeNode> (empty) = {
          get() = 0x0
        }
      }, {
        first = 0,
        second = std::shared_ptr<BTreeNode> (empty) = {
          get() = 0x0
        }
      }, {
        first = 0,
        second = std::shared_ptr<BTreeNode> (empty) = {
          get() = 0x0
        }
      }}
  },
  line = "",
  data = {
    bytes = 0,
    chars = 0,
    line_breaks = 0
  }
}
+n
+n
+print *rope->root
$2 = {
  keys = {
    _M_elems = {{
        first = 1,
        second = std::shared_ptr<BTreeNode> (use count 1, weak count 0) = {
          get() = 0x5555556f2c20
        }
      }, {
        first = 2,
        second = std::shared_ptr<BTreeNode> (use count 1, weak count 0) = {
          get() = 0x5555556dcb20
        }
      }}
  },
  left = {
    _M_elems = {{
        first = 3,
        second = std::shared_ptr<BTreeNode> (use count 1, weak count 0) = {
          get() = 0x5555556d76b0
        }
      }, {
        first = 0,
        second = std::shared_ptr<BTreeNode> (empty) = {
          get() = 0x0
        }
      }, {
        first = 0,
        second = std::shared_ptr<BTreeNode> (empty) = {
          get() = 0x0
        }
      }}
  },
  right = {
    _M_elems = {{
        first = 0,
        second = std::shared_ptr<BTreeNode> (empty) = {
          get() = 0x0
        }
      }, {
        first = 0,
        second = std::shared_ptr<BTreeNode> (empty) = {
          get() = 0x0
        }
      }, {
        first = 0,
        second = std::shared_ptr<BTreeNode> (empty) = {
          get() = 0x0
        }
      }}
  },
  line = "",
  data = {
    bytes = 0,
    chars = 0,
    line_breaks = 0
  }
}
+n
+print *rope->root
$3 = {
  keys = {
    _M_elems = {{
        first = 1,
        second = std::shared_ptr<BTreeNode> (use count 1, weak count 0) = {
          get() = 0x5555556f2c20
        }
      }, {
        first = 2,
        second = std::shared_ptr<BTreeNode> (use count 1, weak count 0) = {
          get() = 0x5555556dcb20
        }
      }}
  },
  left = {
    _M_elems = {{
        first = 4,
        second = std::shared_ptr<BTreeNode> (use count 1, weak count 0) = {
          get() = 0x5555556d77c0
        }
      }, {
        first = 0,
        second = std::shared_ptr<BTreeNode> (empty) = {
          get() = 0x0
        }
      }, {
        first = 0,
        second = std::shared_ptr<BTreeNode> (empty) = {
          get() = 0x0
        }
      }}
  },
  right = {
    _M_elems = {{
        first = 0,
        second = std::shared_ptr<BTreeNode> (empty) = {
          get() = 0x0
        }
      }, {
        first = 0,
        second = std::shared_ptr<BTreeNode> (empty) = {
          get() = 0x0
        }
      }, {
        first = 0,
        second = std::shared_ptr<BTreeNode> (empty) = {
          get() = 0x0
        }
      }}
  },
  line = "",
  data = {
    bytes = 0,
    chars = 0,
    line_breaks = 0
  }
}
+run
Starting program: /home/david/Programming/cpp_dev/MrText/build/tests/testlib 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/usr/lib64/libthread_db.so.1".

Breakpoint 1, BRope::BRope (this=0x7fffffffcad8) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:28
+break _shift_internal
Breakpoint 2 at 0x55555564fa17: _shift_internal. (2 locations)
+n
+n
+n
+n
____C_A_T_C_H____T_E_S_T____8 () at /home/david/Programming/cpp_dev/MrText/tests/testlib.cpp:99
+n
+n
+run
Starting program: /home/david/Programming/cpp_dev/MrText/build/tests/testlib 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/usr/lib64/libthread_db.so.1".

Breakpoint 2.1, Rope::_shift_internal (this=0x7fffffffcad8, node=std::shared_ptr<Node> (use count 2, weak count 0) = {...}) at /home/david/Programming/cpp_dev/MrText/src/Rope.cpp:18
+break delete
Function "delete" not defined.
+delete
+break _shift_internal
Breakpoint 3 at 0x55555564fa17: _shift_internal. (2 locations)
+run
Starting program: /home/david/Programming/cpp_dev/MrText/build/tests/testlib 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/usr/lib64/libthread_db.so.1".

Breakpoint 3.1, Rope::_shift_internal (this=0x7fffffffcad8, node=std::shared_ptr<Node> (use count 2, weak count 0) = {...}) at /home/david/Programming/cpp_dev/MrText/src/Rope.cpp:18
+exit
Reading symbols from ./build/tests/testlib...
+break _insert_full
Breakpoint 1 at 0xfb954: file /home/david/Programming/cpp_dev/MrText/src/BTree.cpp, line 57.
+run
Starting program: /home/david/Programming/cpp_dev/MrText/build/tests/testlib 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/usr/lib64/libthread_db.so.1".
[Inferior 1 (process 23799) exited normally]
+run
Starting program: /home/david/Programming/cpp_dev/MrText/build/tests/testlib 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/usr/lib64/libthread_db.so.1".
[Inferior 1 (process 23813) exited normally]
+break _insert
Breakpoint 2 at 0x55555564f82d: file /home/david/Programming/cpp_dev/MrText/src/BTree.cpp, line 39.
+run
Starting program: /home/david/Programming/cpp_dev/MrText/build/tests/testlib 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/usr/lib64/libthread_db.so.1".

Breakpoint 2, BRope::_insert (this=0x7fffffffcb58, node=std::shared_ptr<BTreeNode> (use count 1, weak count 0) = {...}, new_key={...}) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:39
+s
std::__shared_ptr_access<BTreeNode, (__gnu_cxx::_Lock_policy)2, false, false>::operator-> (this=0x7fffffffcb58) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/shared_ptr_base.h:1358
+n
BRope::_insert (this=0x7fffffffcb58, node=std::shared_ptr<BTreeNode> (use count 1, weak count 0) = {...}, new_key={...}) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:38
+s
std::sort<std::pair<unsigned long, std::shared_ptr<BTreeNode> >*, BRope::_insert(std::shared_ptr<BTreeNode> const&, std::pair<unsigned long, std::shared_ptr<BTreeNode> > const&)::$_0>(std::pair<unsigned long, std::shared_ptr<BTreeNode> >*, std::pair<unsigned long, std::shared_ptr<BTreeNode> >*, BRope::_insert(std::shared_ptr<BTreeNode> const&, std::pair<unsigned long, std::shared_ptr<BTreeNode> > const&)::$_0) (__first=0x5555556e9080, __last=0x5555556e90b0, __comp=...) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/stl_algo.h:4804
+n
+n
BRope::_insert (this=0x7fffffffcb58, node=std::shared_ptr<BTreeNode> (use count 1, weak count 0) = {...}, new_key={...}) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:42
+print *node
$1 = {
  keys = {
    _M_elems = {{
        first = 0,
        second = std::shared_ptr<BTreeNode> (empty) = {
          get() = 0x0
        }
      }, {
        first = 0,
        second = std::shared_ptr<BTreeNode> (empty) = {
          get() = 0x0
        }
      }}
  },
  left = {
    _M_elems = {{
        first = 0,
        second = std::shared_ptr<BTreeNode> (empty) = {
          get() = 0x0
        }
      }, {
        first = 0,
        second = std::shared_ptr<BTreeNode> (empty) = {
          get() = 0x0
        }
      }, {
        first = 0,
        second = std::shared_ptr<BTreeNode> (empty) = {
          get() = 0x0
        }
      }}
  },
  right = {
    _M_elems = {{
        first = 0,
        second = std::shared_ptr<BTreeNode> (empty) = {
          get() = 0x0
        }
      }, {
        first = 0,
        second = std::shared_ptr<BTreeNode> (empty) = {
          get() = 0x0
        }
      }, {
        first = 0,
        second = std::shared_ptr<BTreeNode> (empty) = {
          get() = 0x0
        }
      }}
  },
  line = "",
  data = {
    bytes = 0,
    chars = 0,
    line_breaks = 0
  }
}
+s
std::__shared_ptr_access<BTreeNode, (__gnu_cxx::_Lock_policy)2, false, false>::operator-> (this=0x7fffffffcb58) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/shared_ptr_base.h:1358
+n
BRope::_insert (this=0x7fffffffcb58, node=std::shared_ptr<BTreeNode> (use count 1, weak count 0) = {...}, new_key={...}) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:46
+n
+s
std::__shared_ptr_access<BTreeNode, (__gnu_cxx::_Lock_policy)2, false, false>::operator-> (this=0x7fffffffcb58) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/shared_ptr_base.h:1358
+n
BRope::_insert (this=0x7fffffffcb58, node=std::shared_ptr<BTreeNode> (use count 1, weak count 0) = {...}, new_key={...}) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:50
+n
+print *next_empty
$2 = {
  first = 0,
  second = std::shared_ptr<BTreeNode> (empty) = {
    get() = 0x0
  }
}
+run
Starting program: /home/david/Programming/cpp_dev/MrText/build/tests/testlib 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/usr/lib64/libthread_db.so.1".

Breakpoint 2, BRope::_insert (this=0x7fffffffcb58, node=std::shared_ptr<BTreeNode> (use count 1, weak count 0) = {...}, new_key={...}) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:39
+n
+s
std::sort<std::pair<unsigned long, std::shared_ptr<BTreeNode> >*, BRope::_insert(std::shared_ptr<BTreeNode> const&, std::pair<unsigned long, std::shared_ptr<BTreeNode> > const&)::$_0>(std::pair<unsigned long, std::shared_ptr<BTreeNode> >*, std::pair<unsigned long, std::shared_ptr<BTreeNode> >*, BRope::_insert(std::shared_ptr<BTreeNode> const&, std::pair<unsigned long, std::shared_ptr<BTreeNode> > const&)::$_0) (__first=0x5555556e9080, __last=0x5555556e90b0, __comp=...) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/stl_algo.h:4804
+n
+n
BRope::_insert (this=0x7fffffffcb58, node=std::shared_ptr<BTreeNode> (use count 1, weak count 0) = {...}, new_key={...}) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:42
+s
std::__shared_ptr_access<BTreeNode, (__gnu_cxx::_Lock_policy)2, false, false>::operator-> (this=0x7fffffffcb58) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/shared_ptr_base.h:1358
+n
BRope::_insert (this=0x7fffffffcb58, node=std::shared_ptr<BTreeNode> (use count 1, weak count 0) = {...}, new_key={...}) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:46
+s
+s
std::__shared_ptr_access<BTreeNode, (__gnu_cxx::_Lock_policy)2, false, false>::operator-> (this=0x7fffffffcb58) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/shared_ptr_base.h:1358
+n
BRope::_insert (this=0x7fffffffcb58, node=std::shared_ptr<BTreeNode> (use count 1, weak count 0) = {...}, new_key={...}) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:50
+print *next_empty
$3 = {
  first = 93824993795072,
  second = std::shared_ptr<BTreeNode> (empty) = {
    get() = 0x5555556d1bf0
  }
}
+s
+print new_key
$4 = {
  first = 1,
  second = std::shared_ptr<BTreeNode> (use count 2, weak count 0) = {
    get() = 0x5555556d1c00
  }
}
+print next_empty
$5 = (std::pair<unsigned long, std::shared_ptr<BTreeNode> > *) 0x5555556e9080
+print *next_empty
$6 = {
  first = 0,
  second = std::shared_ptr<BTreeNode> (empty) = {
    get() = 0x0
  }
}
+exit
Reading symbols from ./build/tests/testlib...
+break _insert
Breakpoint 1 at 0xfb82d: file /home/david/Programming/cpp_dev/MrText/src/BTree.cpp, line 39.
+run
Starting program: /home/david/Programming/cpp_dev/MrText/build/tests/testlib 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/usr/lib64/libthread_db.so.1".

Breakpoint 1, BRope::_insert (this=0x7fffffffcb58, node=std::shared_ptr<BTreeNode> (use count 1, weak count 0) = {...}, new_key={...}) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:39
+n
+n
+n
+n
+s
std::__shared_ptr_access<BTreeNode, (__gnu_cxx::_Lock_policy)2, false, false>::operator-> (this=0x7fffffffcb58) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/shared_ptr_base.h:1358
+s
std::__shared_ptr_access<BTreeNode, (__gnu_cxx::_Lock_policy)2, false, false>::_M_get (this=0x7fffffffcb58) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/shared_ptr_base.h:1364
+s
std::__shared_ptr<BTreeNode, (__gnu_cxx::_Lock_policy)2>::get (this=0x7fffffffcb58) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/shared_ptr_base.h:1667
+n
BRope::_insert (this=0x7fffffffcb58, node=std::shared_ptr<BTreeNode> (use count 1, weak count 0) = {...}, new_key={...}) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:50
+s
+s
_ZNSt4pairImSt10shared_ptrI9BTreeNodeEEaSERKS3_Qcl13_S_assignableIRKT_RKT0_EE (this=0x5555556e9080, __p={...}) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/stl_pair.h:595
+s
+s
std::shared_ptr<BTreeNode>::operator= (this=0x5555556e9088) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/shared_ptr.h:413
+n
_ZNSt4pairImSt10shared_ptrI9BTreeNodeEEaSERKS3_Qcl13_S_assignableIRKT_RKT0_EE (this=0x5555556e9080, __p={...}) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/stl_pair.h:597
+n
BRope::_insert (this=0x7fffffffcb58, node=std::shared_ptr<BTreeNode> (use count 1, weak count 0) = {...}, new_key={...}) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:54
+print next_empty
$1 = (std::pair<unsigned long, std::shared_ptr<BTreeNode> > *) 0x5555556e9080
+print *next_empty
$2 = {
  first = 1,
  second = std::shared_ptr<BTreeNode> (use count 3, weak count 0) = {
    get() = 0x5555556d1c00
  }
}
+s
BRope::insert (this=0x7fffffffcb58, line_num=1, line="first") at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:100
+s
std::pair<unsigned long, std::shared_ptr<BTreeNode> >::~pair (this=0x7fffffffca18) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/stl_pair.h:284
+n
____C_A_T_C_H____T_E_S_T____6 () at /home/david/Programming/cpp_dev/MrText/tests/testlib.cpp:100
+s
BRope::insert (this=0x7fffffffcb58, line_num=2, line="second") at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:89
+n
+n
+n
+n
+s

Breakpoint 1, BRope::_insert (this=0x7fffffffcb58, node=std::shared_ptr<BTreeNode> (use count 1, weak count 0) = {...}, new_key={...}) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:39
+s
std::__shared_ptr_access<BTreeNode, (__gnu_cxx::_Lock_policy)2, false, false>::operator-> (this=0x7fffffffcb58) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/shared_ptr_base.h:1358
+n
BRope::_insert (this=0x7fffffffcb58, node=std::shared_ptr<BTreeNode> (use count 1, weak count 0) = {...}, new_key={...}) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:38
+n
+s
std::__shared_ptr_access<BTreeNode, (__gnu_cxx::_Lock_policy)2, false, false>::operator-> (this=0x7fffffffcb58) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/shared_ptr_base.h:1358
+n
BRope::_insert (this=0x7fffffffcb58, node=std::shared_ptr<BTreeNode> (use count 1, weak count 0) = {...}, new_key={...}) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:46
+s
+n
+s
+s
_ZNSt4pairImSt10shared_ptrI9BTreeNodeEEaSERKS3_Qcl13_S_assignableIRKT_RKT0_EE (this=0x5555556e9080, __p={...}) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/stl_pair.h:595
+n
+n
+n
BRope::_insert (this=0x7fffffffcb58, node=std::shared_ptr<BTreeNode> (use count 1, weak count 0) = {...}, new_key={...}) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:54
+print *next_empty
$3 = {
  first = 2,
  second = std::shared_ptr<BTreeNode> (use count 3, weak count 0) = {
    get() = 0x5555556ef5b0
  }
}
+s
BRope::insert (this=0x7fffffffcb58, line_num=2, line="second") at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:100
+s
std::pair<unsigned long, std::shared_ptr<BTreeNode> >::~pair (this=0x7fffffffca18) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/stl_pair.h:284
+n
____C_A_T_C_H____T_E_S_T____6 () at /home/david/Programming/cpp_dev/MrText/tests/testlib.cpp:101
+s
BRope::insert (this=0x7fffffffcb58, line_num=3, line="third") at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:89
+n
+n
+n
+n
+s

Breakpoint 1, BRope::_insert (this=0x7fffffffcb58, node=std::shared_ptr<BTreeNode> (use count 1, weak count 0) = {...}, new_key={...}) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:39
+n
+n
+s
std::__shared_ptr_access<BTreeNode, (__gnu_cxx::_Lock_policy)2, false, false>::operator-> (this=0x7fffffffcb58) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/shared_ptr_base.h:1358
+n
BRope::_insert (this=0x7fffffffcb58, node=std::shared_ptr<BTreeNode> (use count 1, weak count 0) = {...}, new_key={...}) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:46
+print *node->keys
No symbol "operator*" in current context.
+break keys_full
Breakpoint 2 at 0x55555564f644: file /home/david/Programming/cpp_dev/MrText/src/BTree.cpp, line 19.
+run
Starting program: /home/david/Programming/cpp_dev/MrText/build/tests/testlib 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/usr/lib64/libthread_db.so.1".

Breakpoint 1, BRope::_insert (this=0x7fffffffcb58, node=std::shared_ptr<BTreeNode> (use count 1, weak count 0) = {...}, new_key={...}) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:39
+n
+n
+s
std::__shared_ptr_access<BTreeNode, (__gnu_cxx::_Lock_policy)2, false, false>::operator-> (this=0x7fffffffcb58) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/shared_ptr_base.h:1358
+s
std::__shared_ptr_access<BTreeNode, (__gnu_cxx::_Lock_policy)2, false, false>::_M_get (this=0x7fffffffcb58) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/shared_ptr_base.h:1364
+s
std::__shared_ptr<BTreeNode, (__gnu_cxx::_Lock_policy)2>::get (this=0x7fffffffcb58) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/shared_ptr_base.h:1667
+s

Breakpoint 2, BTreeNode::keys_full (this=0x5555556e9080) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:19
+print *this
$4 = {
  keys = {
    _M_elems = {{
        first = 0,
        second = std::shared_ptr<BTreeNode> (empty) = {
          get() = 0x0
        }
      }, {
        first = 0,
        second = std::shared_ptr<BTreeNode> (empty) = {
          get() = 0x0
        }
      }}
  },
  left = {
    _M_elems = {{
        first = 0,
        second = std::shared_ptr<BTreeNode> (empty) = {
          get() = 0x0
        }
      }, {
        first = 0,
        second = std::shared_ptr<BTreeNode> (empty) = {
          get() = 0x0
        }
      }, {
        first = 0,
        second = std::shared_ptr<BTreeNode> (empty) = {
          get() = 0x0
        }
      }}
  },
  right = {
    _M_elems = {{
        first = 0,
        second = std::shared_ptr<BTreeNode> (empty) = {
          get() = 0x0
        }
      }, {
        first = 0,
        second = std::shared_ptr<BTreeNode> (empty) = {
          get() = 0x0
        }
      }, {
        first = 0,
        second = std::shared_ptr<BTreeNode> (empty) = {
          get() = 0x0
        }
      }}
  },
  line = "",
  data = {
    bytes = 0,
    chars = 0,
    line_breaks = 0
  }
}
+s
BRope::_insert (this=0x7fffffffcb58, node=std::shared_ptr<BTreeNode> (use count 1, weak count 0) = {...}, new_key={...}) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:46
+print *node
$5 = {
  keys = {
    _M_elems = {{
        first = 0,
        second = std::shared_ptr<BTreeNode> (empty) = {
          get() = 0x0
        }
      }, {
        first = 0,
        second = std::shared_ptr<BTreeNode> (empty) = {
          get() = 0x0
        }
      }}
  },
  left = {
    _M_elems = {{
        first = 0,
        second = std::shared_ptr<BTreeNode> (empty) = {
          get() = 0x0
        }
      }, {
        first = 0,
        second = std::shared_ptr<BTreeNode> (empty) = {
          get() = 0x0
        }
      }, {
        first = 0,
        second = std::shared_ptr<BTreeNode> (empty) = {
          get() = 0x0
        }
      }}
  },
  right = {
    _M_elems = {{
        first = 0,
        second = std::shared_ptr<BTreeNode> (empty) = {
          get() = 0x0
        }
      }, {
        first = 0,
        second = std::shared_ptr<BTreeNode> (empty) = {
          get() = 0x0
        }
      }, {
        first = 0,
        second = std::shared_ptr<BTreeNode> (empty) = {
          get() = 0x0
        }
      }}
  },
  line = "",
  data = {
    bytes = 0,
    chars = 0,
    line_breaks = 0
  }
}
+n
+n
+n
+n
+n
BRope::insert (this=0x7fffffffcb58, line_num=1, line="first") at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:100
+n
____C_A_T_C_H____T_E_S_T____6 () at /home/david/Programming/cpp_dev/MrText/tests/testlib.cpp:100
+n

Breakpoint 1, BRope::_insert (this=0x7fffffffcb58, node=std::shared_ptr<BTreeNode> (use count 1, weak count 0) = {...}, new_key={...}) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:39
+n
+n
+n

Breakpoint 2, BTreeNode::keys_full (this=0x5555556e9080) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:19
+n
BRope::_insert (this=0x7fffffffcb58, node=std::shared_ptr<BTreeNode> (use count 1, weak count 0) = {...}, new_key={...}) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:46
+n
+n
+n
+n
+n
BRope::insert (this=0x7fffffffcb58, line_num=2, line="second") at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:100
+n
____C_A_T_C_H____T_E_S_T____6 () at /home/david/Programming/cpp_dev/MrText/tests/testlib.cpp:101
+s
BRope::insert (this=0x7fffffffcb58, line_num=3, line="third") at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:89
+n
+n
+n
+n
+s

Breakpoint 1, BRope::_insert (this=0x7fffffffcb58, node=std::shared_ptr<BTreeNode> (use count 1, weak count 0) = {...}, new_key={...}) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:39
+n
+n
+s
std::__shared_ptr_access<BTreeNode, (__gnu_cxx::_Lock_policy)2, false, false>::operator-> (this=0x7fffffffcb58) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/shared_ptr_base.h:1358
+s
std::__shared_ptr_access<BTreeNode, (__gnu_cxx::_Lock_policy)2, false, false>::_M_get (this=0x7fffffffcb58) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/shared_ptr_base.h:1364
+n

Breakpoint 2, BTreeNode::keys_full (this=0x5555556e9080) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:19
+print *this
$6 = {
  keys = {
    _M_elems = {{
        first = 1,
        second = std::shared_ptr<BTreeNode> (use count 1, weak count 0) = {
          get() = 0x5555556d1c00
        }
      }, {
        first = 2,
        second = std::shared_ptr<BTreeNode> (use count 1, weak count 0) = {
          get() = 0x5555556ef5b0
        }
      }}
  },
  left = {
    _M_elems = {{
        first = 0,
        second = std::shared_ptr<BTreeNode> (empty) = {
          get() = 0x0
        }
      }, {
        first = 0,
        second = std::shared_ptr<BTreeNode> (empty) = {
          get() = 0x0
        }
      }, {
        first = 0,
        second = std::shared_ptr<BTreeNode> (empty) = {
          get() = 0x0
        }
      }}
  },
  right = {
    _M_elems = {{
        first = 0,
        second = std::shared_ptr<BTreeNode> (empty) = {
          get() = 0x0
        }
      }, {
        first = 0,
        second = std::shared_ptr<BTreeNode> (empty) = {
          get() = 0x0
        }
      }, {
        first = 0,
        second = std::shared_ptr<BTreeNode> (empty) = {
          get() = 0x0
        }
      }}
  },
  line = "",
  data = {
    bytes = 0,
    chars = 0,
    line_breaks = 0
  }
}
+s
BRope::_insert (this=0x7fffffffcb58, node=std::shared_ptr<BTreeNode> (use count 1, weak count 0) = {...}, new_key={...}) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:46
+exit
Reading symbols from ./build/tests/testlib...
+break _insert
Breakpoint 1 at 0xfb80d: file /home/david/Programming/cpp_dev/MrText/src/BTree.cpp, line 35.
+run
Starting program: /home/david/Programming/cpp_dev/MrText/build/tests/testlib 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/usr/lib64/libthread_db.so.1".

Breakpoint 1, BRope::_insert (this=0x7fffffffcb58, node=std::shared_ptr<BTreeNode> (use count 1, weak count 0) = {...}, new_key={...}) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:35
+n
+n
+n
+n
+n
+n
+n
+n
BRope::insert (this=0x7fffffffcb58, line_num=1, line="first") at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:96
+n
____C_A_T_C_H____T_E_S_T____6 () at /home/david/Programming/cpp_dev/MrText/tests/testlib.cpp:100
+n

Breakpoint 1, BRope::_insert (this=0x7fffffffcb58, node=std::shared_ptr<BTreeNode> (use count 1, weak count 0) = {...}, new_key={...}) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:35
+n
+n
+n
+n
+n
+n
+n
+n
BRope::insert (this=0x7fffffffcb58, line_num=2, line="second") at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:96
+n
____C_A_T_C_H____T_E_S_T____6 () at /home/david/Programming/cpp_dev/MrText/tests/testlib.cpp:101
+s
BRope::insert (this=0x7fffffffcb58, line_num=3, line="third") at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:85
+n
+n
+n
+n
+s

Breakpoint 1, BRope::_insert (this=0x7fffffffcb58, node=std::shared_ptr<BTreeNode> (use count 1, weak count 0) = {...}, new_key={...}) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:35
+n
+n
+s
std::__shared_ptr_access<BTreeNode, (__gnu_cxx::_Lock_policy)2, false, false>::operator-> (this=0x7fffffffcb58) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/shared_ptr_base.h:1358
+n
BRope::_insert (this=0x7fffffffcb58, node=std::shared_ptr<BTreeNode> (use count 1, weak count 0) = {...}, new_key={...}) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:42
+print btree::MaxChildren
$1 = 3
+print btree::MaxKeys
$2 = 2
+print node->keys.size()
$3 = 2
+exit
Reading symbols from ./build/tests/testlib...
+break _insert
Breakpoint 1 at 0xfb80d: file /home/david/Programming/cpp_dev/MrText/src/BTree.cpp, line 35.
+n
The program is not being run.
+run
Starting program: /home/david/Programming/cpp_dev/MrText/build/tests/testlib 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/usr/lib64/libthread_db.so.1".

Breakpoint 1, BRope::_insert (this=0x7fffffffcb58, node=std::shared_ptr<BTreeNode> (use count 1, weak count 0) = {...}, new_key={...}) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:35
+n
+n
+n
+n
+nn
Undefined command: "nn".  Try "help".
+n
+n
+n
+n
+n
BRope::insert (this=0x7fffffffcb58, line_num=1, line="first") at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:96
+n
____C_A_T_C_H____T_E_S_T____6 () at /home/david/Programming/cpp_dev/MrText/tests/testlib.cpp:100
+n

Breakpoint 1, BRope::_insert (this=0x7fffffffcb58, node=std::shared_ptr<BTreeNode> (use count 1, weak count 0) = {...}, new_key={...}) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:35
+n
+n
+n
+n
+n
+exit
Reading symbols from ./build/tests/testlib...
+run
Starting program: /home/david/Programming/cpp_dev/MrText/build/tests/testlib 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/usr/lib64/libthread_db.so.1".
[Inferior 1 (process 24602) exited normally]
+break _insert
Breakpoint 1 at 0x55555564f80d: file /home/david/Programming/cpp_dev/MrText/src/BTree.cpp, line 35.
+run
Starting program: /home/david/Programming/cpp_dev/MrText/build/tests/testlib 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/usr/lib64/libthread_db.so.1".

Breakpoint 1, BRope::_insert (this=0x7fffffffcb58, node=std::shared_ptr<BTreeNode> (use count 1, weak count 0) = {...}, new_key={...}) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:35
+n
+n
+s
std::__shared_ptr_access<BTreeNode, (__gnu_cxx::_Lock_policy)2, false, false>::operator-> (this=0x7fffffffcb58) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/shared_ptr_base.h:1358
+n
BRope::_insert (this=0x7fffffffcb58, node=std::shared_ptr<BTreeNode> (use count 1, weak count 0) = {...}, new_key={...}) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:39
+s
BRope::_insert_full (this=0x7fffffffcb58, node=std::shared_ptr<BTreeNode> (use count 1, weak count 0) = {...}) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:53
+s
+s
std::__shared_ptr_access<BTreeNode, (__gnu_cxx::_Lock_policy)2, false, false>::operator-> (this=0x7fffffffcb58) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/shared_ptr_base.h:1358
+n
BRope::_insert_full (this=0x7fffffffcb58, node=std::shared_ptr<BTreeNode> (use count 1, weak count 0) = {...}) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:55
+run
Starting program: /home/david/Programming/cpp_dev/MrText/build/tests/testlib 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/usr/lib64/libthread_db.so.1".

Breakpoint 1, BRope::_insert (this=0x7fffffffcb58, node=std::shared_ptr<BTreeNode> (use count 1, weak count 0) = {...}, new_key={...}) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:35
+n
+n
+print *node->keys.size()
Cannot access memory at address 0x2
+s
std::__shared_ptr_access<BTreeNode, (__gnu_cxx::_Lock_policy)2, false, false>::operator-> (this=0x7fffffffcb58) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/shared_ptr_base.h:1358
+n
BRope::_insert (this=0x7fffffffcb58, node=std::shared_ptr<BTreeNode> (use count 1, weak count 0) = {...}, new_key={...}) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:39
+print node->keys.size()
$1 = 2
+print exit
$2 = {<text variable, no debug info>} 0x7ffff7a62440 <exit>
+exit
Reading symbols from ./build/tests/testlib...
+break _insert
Breakpoint 1 at 0xfb8ad: file /home/david/Programming/cpp_dev/MrText/src/BTree.cpp, line 40.
+run
Starting program: /home/david/Programming/cpp_dev/MrText/build/tests/testlib 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/usr/lib64/libthread_db.so.1".

Breakpoint 1, BRope::_insert (this=0x7fffffffcb58, node=std::shared_ptr<BTreeNode> (use count 1, weak count 0) = {...}, new_key={...}) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:40
+n
+n
+n
+n
+n
+n
+n
+n
BRope::insert (this=0x7fffffffcb58, line_num=1, line="first") at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:101
+n
____C_A_T_C_H____T_E_S_T____6 () at /home/david/Programming/cpp_dev/MrText/tests/testlib.cpp:100
+n

Breakpoint 1, BRope::_insert (this=0x7fffffffcb58, node=std::shared_ptr<BTreeNode> (use count 1, weak count 0) = {...}, new_key={...}) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:40
+n
+n
+s
std::__shared_ptr_access<BTreeNode, (__gnu_cxx::_Lock_policy)2, false, false>::operator-> (this=0x7fffffffcb58) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/shared_ptr_base.h:1358
+n
BRope::_insert (this=0x7fffffffcb58, node=std::shared_ptr<BTreeNode> (use count 1, weak count 0) = {...}, new_key={...}) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:47
+print *node
$1 = {
  keys = {
    _M_elems = {{
        first = 0,
        second = std::shared_ptr<BTreeNode> (empty) = {
          get() = 0x0
        }
      }, {
        first = 1,
        second = std::shared_ptr<BTreeNode> (use count 1, weak count 0) = {
          get() = 0x5555556d1c00
        }
      }}
  },
  left = {
    _M_elems = {{
        first = 0,
        second = std::shared_ptr<BTreeNode> (empty) = {
          get() = 0x0
        }
      }, {
        first = 0,
        second = std::shared_ptr<BTreeNode> (empty) = {
          get() = 0x0
        }
      }, {
        first = 0,
        second = std::shared_ptr<BTreeNode> (empty) = {
          get() = 0x0
        }
      }}
  },
  right = {
    _M_elems = {{
        first = 0,
        second = std::shared_ptr<BTreeNode> (empty) = {
          get() = 0x0
        }
      }, {
        first = 0,
        second = std::shared_ptr<BTreeNode> (empty) = {
          get() = 0x0
        }
      }, {
        first = 0,
        second = std::shared_ptr<BTreeNode> (empty) = {
          get() = 0x0
        }
      }}
  },
  line = "",
  data = {
    bytes = 0,
    chars = 0,
    line_breaks = 0
  }
}
+s
+n
+n
+n
+n
BRope::insert (this=0x7fffffffcb58, line_num=2, line="second") at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:101
+n
____C_A_T_C_H____T_E_S_T____6 () at /home/david/Programming/cpp_dev/MrText/tests/testlib.cpp:101
+s
BRope::insert (this=0x7fffffffcb58, line_num=3, line="third") at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:90
+n
+n
+n
+n
+s

Breakpoint 1, BRope::_insert (this=0x7fffffffcb58, node=std::shared_ptr<BTreeNode> (use count 1, weak count 0) = {...}, new_key={...}) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:40
+print *node
$2 = {
  keys = {
    _M_elems = {{
        first = 2,
        second = std::shared_ptr<BTreeNode> (use count 1, weak count 0) = {
          get() = 0x5555556ef5b0
        }
      }, {
        first = 1,
        second = std::shared_ptr<BTreeNode> (use count 1, weak count 0) = {
          get() = 0x5555556d1c00
        }
      }}
  },
  left = {
    _M_elems = {{
        first = 0,
        second = std::shared_ptr<BTreeNode> (empty) = {
          get() = 0x0
        }
      }, {
        first = 0,
        second = std::shared_ptr<BTreeNode> (empty) = {
          get() = 0x0
        }
      }, {
        first = 0,
        second = std::shared_ptr<BTreeNode> (empty) = {
          get() = 0x0
        }
      }}
  },
  right = {
    _M_elems = {{
        first = 0,
        second = std::shared_ptr<BTreeNode> (empty) = {
          get() = 0x0
        }
      }, {
        first = 0,
        second = std::shared_ptr<BTreeNode> (empty) = {
          get() = 0x0
        }
      }, {
        first = 0,
        second = std::shared_ptr<BTreeNode> (empty) = {
          get() = 0x0
        }
      }}
  },
  line = "",
  data = {
    bytes = 0,
    chars = 0,
    line_breaks = 0
  }
}
+n
+n
+print *node
$3 = {
  keys = {
    _M_elems = {{
        first = 1,
        second = std::shared_ptr<BTreeNode> (use count 1, weak count 0) = {
          get() = 0x5555556d1c00
        }
      }, {
        first = 2,
        second = std::shared_ptr<BTreeNode> (use count 1, weak count 0) = {
          get() = 0x5555556ef5b0
        }
      }}
  },
  left = {
    _M_elems = {{
        first = 0,
        second = std::shared_ptr<BTreeNode> (empty) = {
          get() = 0x0
        }
      }, {
        first = 0,
        second = std::shared_ptr<BTreeNode> (empty) = {
          get() = 0x0
        }
      }, {
        first = 0,
        second = std::shared_ptr<BTreeNode> (empty) = {
          get() = 0x0
        }
      }}
  },
  right = {
    _M_elems = {{
        first = 0,
        second = std::shared_ptr<BTreeNode> (empty) = {
          get() = 0x0
        }
      }, {
        first = 0,
        second = std::shared_ptr<BTreeNode> (empty) = {
          get() = 0x0
        }
      }, {
        first = 0,
        second = std::shared_ptr<BTreeNode> (empty) = {
          get() = 0x0
        }
      }}
  },
  line = "",
  data = {
    bytes = 0,
    chars = 0,
    line_breaks = 0
  }
}
+s
std::__shared_ptr_access<BTreeNode, (__gnu_cxx::_Lock_policy)2, false, false>::operator-> (this=0x7fffffffcb58) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/shared_ptr_base.h:1358
+n
BRope::_insert (this=0x7fffffffcb58, node=std::shared_ptr<BTreeNode> (use count 1, weak count 0) = {...}, new_key={...}) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:44
+s
BRope::_insert_full (this=0x7fffffffcb58, node=std::shared_ptr<BTreeNode> (use count 1, weak count 0) = {...}) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:58
+s
+s
std::__shared_ptr_access<BTreeNode, (__gnu_cxx::_Lock_policy)2, false, false>::operator-> (this=0x7fffffffcb58) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/shared_ptr_base.h:1358
+n
BRope::_insert_full (this=0x7fffffffcb58, node=std::shared_ptr<BTreeNode> (use count 1, weak count 0) = {...}) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:60
+s
+n
+n
+n
+s
std::__shared_ptr_access<BTreeNode, (__gnu_cxx::_Lock_policy)2, false, false>::operator-> (this=0x7fffffffcb58) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/shared_ptr_base.h:1358
+n
BRope::_insert_full (this=0x7fffffffcb58, node=std::shared_ptr<BTreeNode> (use count 1, weak count 0) = {...}) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:69
+s
+s
+print median
$4 = 0
+print btree:MedAvg
A syntax error in expression, near `:MedAvg'.
+print btree::MedAvg
$5 = 0
+exit
Reading symbols from ./build/tests/testlib...
+break _insert
Breakpoint 1 at 0xfb8ad: file /home/david/Programming/cpp_dev/MrText/src/BTree.cpp, line 40.
+run
Starting program: /home/david/Programming/cpp_dev/MrText/build/tests/testlib 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/usr/lib64/libthread_db.so.1".

Breakpoint 1, BRope::_insert (this=0x7fffffffcb58, node=std::shared_ptr<BTreeNode> (use count 1, weak count 0) = {...}, new_key={...}) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:40
+print btree::MedAvg
$1 = 0
+exit
Reading symbols from ./build/tests/testlib...
+break _insert
Breakpoint 1 at 0xfb8fd: file /home/david/Programming/cpp_dev/MrText/src/BTree.cpp, line 40.
+run
Starting program: /home/david/Programming/cpp_dev/MrText/build/tests/testlib 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/usr/lib64/libthread_db.so.1".

Breakpoint 1, BRope::_insert (this=0x7fffffffcb58, node=std::shared_ptr<BTreeNode> (use count 1, weak count 0) = {...}, new_key={...}) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:40
+print btree::MedAvg
$1 = 0
+print btree::MaxChildren
$2 = 3
+exit
Reading symbols from ./build/tests/testlib...
+break _insert
Breakpoint 1 at 0xfb8fd: file /home/david/Programming/cpp_dev/MrText/src/BTree.cpp, line 40.
+run
Starting program: /home/david/Programming/cpp_dev/MrText/build/tests/testlib 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/usr/lib64/libthread_db.so.1".

Breakpoint 1, BRope::_insert (this=0x7fffffffcb58, node=std::shared_ptr<BTreeNode> (use count 1, weak count 0) = {...}, new_key={...}) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:40
+print btree::MedAvg
$1 = 0
+exit
Reading symbols from ./build/tests/testlib...
+break _insert
Breakpoint 1 at 0xfb8fd: file /home/david/Programming/cpp_dev/MrText/src/BTree.cpp, line 40.
+run
Starting program: /home/david/Programming/cpp_dev/MrText/build/tests/testlib 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/usr/lib64/libthread_db.so.1".

Breakpoint 1, BRope::_insert (this=0x7fffffffcb58, node=std::shared_ptr<BTreeNode> (use count 1, weak count 0) = {...}, new_key={...}) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:40
+btree::MaxChildren
Undefined command: "btree".  Try "help".
+print btree::MaxChildren
$1 = 3
+print btree::MinChildren
$2 = 1
+print btree::MinKeys
$3 = 0
+exit
Reading symbols from ./build/tests/testlib...
+break _insert
Breakpoint 1 at 0xfb8fd: file /home/david/Programming/cpp_dev/MrText/src/BTree.cpp, line 40.
+run
Starting program: /home/david/Programming/cpp_dev/MrText/build/tests/testlib 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/usr/lib64/libthread_db.so.1".

Breakpoint 1, BRope::_insert (this=0x7fffffffcb58, node=std::shared_ptr<BTreeNode> (use count 1, weak count 0) = {...}, new_key={...}) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:40
+n
+n
+n
+n
+n
+n
+n
+n
BRope::insert (this=0x7fffffffcb58, line_num=1, line="first") at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:101
+n
____C_A_T_C_H____T_E_S_T____6 () at /home/david/Programming/cpp_dev/MrText/tests/testlib.cpp:100
+n

Breakpoint 1, BRope::_insert (this=0x7fffffffcb58, node=std::shared_ptr<BTreeNode> (use count 1, weak count 0) = {...}, new_key={...}) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:40
+n
+n
+n
+n
+n
+n
+n
+n
BRope::insert (this=0x7fffffffcb58, line_num=2, line="second") at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:101
+n
____C_A_T_C_H____T_E_S_T____6 () at /home/david/Programming/cpp_dev/MrText/tests/testlib.cpp:101
+n

Breakpoint 1, BRope::_insert (this=0x7fffffffcb58, node=std::shared_ptr<BTreeNode> (use count 1, weak count 0) = {...}, new_key={...}) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:40
+s
std::__shared_ptr_access<BTreeNode, (__gnu_cxx::_Lock_policy)2, false, false>::operator-> (this=0x7fffffffcb58) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/shared_ptr_base.h:1358
+n
BRope::_insert (this=0x7fffffffcb58, node=std::shared_ptr<BTreeNode> (use count 1, weak count 0) = {...}, new_key={...}) at /home/david/Programming/cpp_dev/MrText/src/BTree.cpp:39
+s
std::sort<std::pair<unsigned long, std::shared_ptr<BTreeNode> >*, BRope::_insert(std::shared_ptr<BTreeNode> const&, std::pair<unsigned long, std::shared_ptr<BTreeNode> >&)::$_0>(std::pair<unsigned long, std::shared_ptr<BTreeNode> >*, std::pair<unsigned long, std::shared_ptr<BTreeNode> >*, BRope::_insert(std::shared_ptr<BTreeNode> const&, std::pair<unsigned long, std::shared_ptr<BTreeNode> >&)::$_0) (__first=0x5555556e9080, __last=0x5555556e90b0, __comp=...) at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/stl_algo.h:4804
+exit
